[{"title":"Compound Literals特性LLVM兼容性增强","url":"/llvm-compatibility-enhancement-for-compound-literals/","content":"\n# 问题描述\n\n> 　　Compound Literals是一个C99特性，GCC和LLVM都对其做了拓展，支持在C++中使用该特性，但在具体的实现上有一定的差异，这也导致了LLVM与GCC存在一定的兼容性问题。例如下述代码，GCC可以编译通过，LLVM则会编译报错。\n\n```c++\ntypedef struct FormatInfo_ { int * a = nullptr; bool isa = false; } FormatInfo;\nint * b = nullptr;\nFormatInfo a = (FormatInfo) {b, false};\nint test( ) { return 0; }\n```\n\n> 　　请分析GCC及LLVM对Compound Literals的C++拓展的实现，通过修改LLVM的实现，解决上述问题。并基于上述场景，分析LLVM与GCC在该特性的C++拓展实现上的差异，分析改特性是否存在其他场景也存在兼容性问题，给出对应的分析文档。若有其他存在兼容性问题的场景，修改实现解决。\n\n## 最小例程\n\n　　可以验证，将上述例程化简至如下最小例程后，LLVM(Clang)与GCC的表现均**与化简前相同**：\n\n```c++\nstruct DT { int * el;};\nint * pa = 0;\nDT va = (DT){pa};\n```\n\n## 初步观察\n\n　　用LLVM对上述最小例程进行编译，得到的报错提示如下：\n\n```bash\ntest.cc:3:14: error: initializer element is not a compile-time constant\nDT va = (DT){pa};\n             ^~\n1 error generated\n```\n\n　　报错提示编译器拒绝将变量`pa`接受为一个初始化器的元素，因为`pa`并非一个编译期常量。**尝试修改`DT va = (DT){pa};`至`DT va = {pa};`，则能够通过编译。另一个观察是，将`int * pa = 0;`修改为`constexpr int * pa = 0;`或者`int * const pa = 0;`，则也均能通过编译**。\n\n# GCC的处理方式\n\n　　首先尝试界定出GCC的能力范围。将上述最小例程进行复杂化。对于如下例程，LLVM与GCC的表现均与复杂化前相同：\n\n```c++\nstruct DT { int * el;};\nint ia;int * pa = (int *)(long)(ia[&ia + ia]++);\nDT va = (DT){pa};\n```\n\n　　显然，此时变量`pa`已经很难被称作是一个`compile-time constant`。此时，若在其类型声明前增加关键字`constexpr`，则两个编译器都拒绝接受该例程。而奇怪的现象却发生了：**若在变量名前增加`const`关键字，则LLVM依旧会拒绝这段例程，但GCC却能让其通过编译**。在此，先将这一现象简单总结为：在GCC中`const`关键字对全局变量的限制要比在LLVM中更少一些。\n\n## 处理过程定位\n\n　　那么GCC具体是怎么处理这里的待初始化元素的？接下来尝试从其实现代码层面（基于本文写作时GCC官方代码仓库的`releases/gcc-13`分支上的最新提交`c7d995dfb155`）上进行分析。从直觉上来看，该特性的实现应该位于编译器前端。在GCC中，编译前端涉及到的阶段有：预处理、分词、语法分析、语义分析等。在GCC的C语言前端处理过程中，源码会被依次转换为GENERIC(AST)、GIMPLE。\n\n　　那么首先试着定位出该特性生效的位置。在编译最小例程时对gcc使用参数`-fdump-tree-all-raw`：\n\n```bash\nexport SRC=test.cc\nexport DST=test.o\n./gcc -c $SRC -fdump-tree-raw -o $DST\n```\n\n　　随后编译器会将许多中间过程写入文件。先从未经优化的GIMPLE看起。\n\n```c++\n// test.cc.006t.gimple\nvoid __static_initialization_and_destruction_0 ()\ngimple_bind <\n  gimple_assign <var_decl, pa.0_1, pa, NULL, NULL>\n  gimple_assign <ssa_name, va.el, pa.0_1, NULL, NULL>\n>\n\nvoid _GLOBAL__sub_I_pa ()\ngimple_bind <\n  gimple_call <__static_initialization_and_destruction_0, NULL>\n>\n```\n\n　　可以发现，此时的程序结构已经与源码文件大相径庭。函数外部的变量声明代码都消失了，取而代之的是两个函数，其前缀分别为`__static_initialization_and_destruction`（本文之后缩写为`SIAD`函数）与`_GLOBAL__sub_I`（本文之后缩写为`GSI`函数）。真正初始化的过程被移动到了前一个函数内，而后一个函数又会调用前者。\n\n　　首先在GCC源代码中检索前一个函数前缀，发现其被以宏`SSDF_IDENTIFIER`的形式定义于`gcc/cp/decl2.cc`。对于后一个函数前缀，直接在GCC源码中进行检索时并未发现任何定义，但查阅[资料](https://stackoverflow.com/questions/37108163/purpose-of-static-initialization-and-destruction-and-global-sub-i-main-functio)得知其实际为提供给链接器使用的特殊前缀，**用于在`main`函数执行之前被执行，以初始化本翻译单元内所有静态存储变量（Static Storage Variable）**。\n\n　　回到处理过程的定位问题上。既然在GIMPLE表示中，代码源文件中使用的声明形式就已消失（被转换至函数内），那么说明处理过程一定不会发生在这之后的编译优化环节中。考虑向前追溯，观察其在GENERIC阶段的形式。\n\n　　在GCC中，GENERIC阶段的表示实际上就是抽象语法树(Abstract Syntax Tree)，对应的是GCC源码中的`tree_node`结构体。继续使用先前提到的调试输出参数时，会以类似N元组列表的形式输出该表示，也可以通过源码`gcc/print-tree.cc`中的`debug_tree`函数来向标准错误流打印出树形结构的内容。这里选取前者的结果作为示例。\n\n```sh\n# test.cc.005t.original\n;; Function void __static_initialization_and_destruction_0() (null)\n;; enabled by -tree-original\n\n@1      statement_list   0   : @2       1   : @3\n@2      cleanup_point_expr type: @4       op 0: @5\n@3      expr_stmt        type: @4       line: 3        expr: @6\n... # 省略其他结点\n\n;; Function (static initializers for ../test.cc) (null)\n;; enabled by -tree-original\n\n@1      cleanup_point_expr type: @2       op 0: @3\n@2      void_type        name: @4       algn: 8\n@3      expr_stmt        type: @2       line: 3        expr: @5\n... # 省略其他结点\n```\n\n　　观察可知，此时声明形式也已经被转化至函数内，因此需要去GENERIC的生成阶段寻找处理过程。从前往后看的话，显然预处理、词法分析和语法分析阶段都不可能进行这样的处理，那么转换过程**只可能会发生在语义分析环节中**。通过对源码各个阶段追加输出日志，可以观察到`SIAD`函数与`GSI`函数的创建过程发生于语法分析的末尾阶段。**具体来说，分别位于代码文件`gcc/cp/decl2.cc`中定义的`partition_vars_for_init_fini`、`emit_partial_init_fini_fn`与`generate_ctor_or_dtor_function`这三个函数中**。\n\n## 处理过程分析\n\n　　首先，`partition_vars_for_init_fini`函数会将静态存储变量按不同优先级组成多个列表。\n\n```c++\nvoid\npartition_vars_for_init_fini (tree var_list, priority_map_t *(&parts)[2])\n{\n  for (auto node = var_list; node; node = TREE_CHAIN (node))\n    {\n      tree decl = TREE_VALUE (node);\n      tree init = TREE_PURPOSE (node);\n      bool has_cleanup = !TYPE_HAS_TRIVIAL_DESTRUCTOR (TREE_TYPE (decl));\n      unsigned priority = DECL_EFFECTIVE_INIT_PRIORITY (decl); \n\n      if (init || (flag_use_cxa_atexit && has_cleanup))\n\t{\n\t  if (!parts[true]) // 这里用true作为下标，用于表示初始化列表，反之用false作为下表来表示销毁列表。\n\t    parts[true] = priority_map_t::create_ggc ();\n\t  auto &slot = parts[true]->get_or_insert (priority);\n\t  slot = tree_cons (init, decl, slot); // 将对应的声明与逻辑上的初始化（即变量结点的PURPOSE）相关联\n\t}\n    // 省略部分无关代码\n    }\n}\n```\n\n　　随后，`emit_partial_init_fini_fn`函数会为各个静态存储变量生成对应的`SIAD`函数的声明与定义。\n\n```c++\n// 针对每个变量生成对应的初始化与销毁函数（即SIAD函数）\nstatic void\nemit_partial_init_fini_fn (bool initp, unsigned priority, tree vars,\n\t\t\t   unsigned counter, location_t locus)\n{\n  input_location = locus;\n  /* 生成函数声明 */\n  tree body = start_partial_init_fini_fn (initp, priority, counter);\n  for (tree node = vars; node; node = TREE_CHAIN (node)) {\n    /* 生成函数体 */\n    one_static_initialization_or_destruction (initp, TREE_VALUE (node),\n\t\t\t\t\t      TREE_PURPOSE (node));\n  }\n  input_location = locus;\n  finish_partial_init_fini_fn (body);\n} // 省略部分无关代码，补充了少量注释\n```\n\n　　最后，`generate_ctor_or_dtor_function`函数则会生成`GSI`函数的定义，也即依次调用先前生成的`SIAD`函数**。\n\n```c++\nstatic void\ngenerate_ctor_or_dtor_function (bool initp, unsigned priority,\n\t\t\t\ttree fns, location_t locus)\n{\n  input_location = locus;\n  tree body = start_objects (initp, priority, bool (fns));\n  if (fns)\n    {\n      /* Call the static init/fini functions.  */\n      for (tree node = fns; node; node = TREE_CHAIN (node))\n\t{\n\t  tree fn = TREE_PURPOSE (node);\n\t  // We should never find a pure or constant cdtor.\n\t  gcc_checking_assert (!(flags_from_decl_or_type (fn)\n\t\t\t\t & (ECF_CONST | ECF_PURE)));\n\n\t  tree call = cp_build_function_call_nary (fn, tf_warning_or_error,\n\t\t\t\t\t\t   NULL_TREE); // 此处的call即是对SIAD函数的调用\n\t  finish_expr_stmt (call);\n\t}\n    }\n} // 省略部分无关代码\n```\n\n　　那么，在回顾完整个过程后，便可以回到前面提到的那个奇怪现象，也即为什么“在GCC中`const`关键字对全局变量的限制要比在LLVM中更少一些”。容易发现，如果修改前面给出的复杂化例程，将变量va的声明移至任意函数作用域内，则使用LLVM编译时也会顺利通过编译。**这表明了LLVM针对静态存储变量的初始化也许采取了与GCC差异较大的方式，也即并没有像GCC那样通过创建`SIAD`函数的形式来为其进行初始化**。\n\n# LLVM的处理方式\n\n　　（仍在分析中，本段待编写）\n","tags":["LLVM","GCC","C/C++"]},{"title":"新样式，新起点","url":"/yet-another-web-log/","content":"\n没错，在几乎没有新增任何文章的情况下，我又一次为博客更换了框架。这次回到了Hexo，主要是由于发现先前公式渲染上遇到的问题似乎已经得到解决。\n\n本站目前有三个可选的访问源，访问量互相独立计数，评论区与站点内容自动同步更新。\n\n- [主站](https://kale1d0.space/) ：基于 [Ucloud](https://www.ucloud.cn/) 香港，国内访问较快。\n- [Github镜像](http://phikn1ght.github.io/) ：基于Github Page。\n- [Gitee镜像](https://kale1d0.gitee.io/) ：基于Gitee，国内访问较快，\n\n<!-- more -->\n\n使用的主题：[hexo-theme-stun](https://github.com/liuyib/hexo-theme-stun)\n\n使用的插件：\n\n- hexo-filter-mathjax\n- hexo-renderer-pandoc\n- hexo-generator-baidu-sitemap\n- hexo-generator-sitemap\n\n<del>近期会陆续将旧的博文搬运至新框架内。</del>\n\n更新：已搬运完成\n\n更新：因不愿意备案，将博客搬运至 [Ucloud](https://www.ucloud.cn/) 。\n","tags":["破事水"]},{"title":"（依旧迟到的）二零二二年度回顾","url":"/review-of-the-year-2022/","content":"\n## 前言\n\n<blockquote>\n　　我知道，考虑到一个人如何希望并相信他能够把“自身”的某些事情说出来，当他要求自己说出这些的时候，如果打断、解析、合并、重组这些内容，这将会多么令人难以忍受，以至此时原作者早已面目全非，根本无法辨识。如此多的词汇聚集在一起，如此多印在纸上标记呈现在无数双眼睛面前。这些标记所蕴含的内容远远超过了构成它们的笔画所表达的，并且它们是多么虔诚地努力将其保存到人们的记忆之中——在这之后，追溯它们的根源时，一定会发现两手空空，在它们之中寻找平静时，一定会发现一无所获。空无的生命已经终结，可它们是否还在继续？通过讲述，我并非在驱除我的死亡，而是在建立它，或者更确切地说……我压抑着整个内心，并将话语让位给了一个对我的生活如此冷漠的、无关我的生与死这般中立的外部世界。\n<div style=\"text-align: right;\"><i>——米歇尔・福柯，《政治与话语研究》</i></div>\n</blockquote><!--more-->\n<br />\n　　距离上次写年度总结已经又过去了一整年，笔者也如期结束了打工生活，并在丽娃河畔度过了研一的秋季学期。一年的时间，从人生的尺度来看并不算长，但若要让笔者回想起去年此时的心理状态与感受，浮现出脑海的大概也就只有一些模糊的印象。因此，笔者决定延续去年的做法，以相同的目的和相似的形式为刚刚过去的这一年编写一份年度总结。不过，由于笔者并没有写日记、周记或者月度记录的习惯，对于发生过的事件进行考证的过程，实际上是通过翻阅便签夹与手机相册来进行的，而且期间也会尝试查找社交软件中留存的聊天记录进行佐证。这也使得本文的编写过程比较耗时，以至拖到近三月份才得以成稿。\n\n<center><p><del>立个Flag：2023年的年度总结一定要在2024年1月写完~~</del></center>\n\n　　与去年相比，在形式上的变化则是在部分章节后增添了名为“疫情小史”的段落，用来为那段让笔者现在回想起来依然心有余悸的上海封城时期增加更细致的记录。当然，笔者无意在陈述的过程中美化或是丑化任何个人与主体，因而其内容主要是笔者的主观经历与感受，以及一部分用于对照的官方消息。\n\n## 2022个人微事记\n\n### 一月\n\n- 入职体检。开始在那一科技全职工作。搬入南洋博仕欣居，开始过上工作日期间独居的生活。\n- 为考研二战初试估分，考虑二战失败情况下的对策。笔者曾一度考虑，若二战初试实际得分过低，就立刻开始着手准备日本语能力测试或者考虑申请港校。\n- ~~（在依然单身的情况下）~~准开始备婚房的装修方案。该房产为面积共约七十平米的双层LOFT，距离目前住所约一公里的步行距离，先前一直被当作办公场所使用。拍摄了数张照片用作参考，用红外测距仪测量绘制出了平面图，并用『Room Arranger』进行了布局建模与初步的功能设计。~~（而后装修方案因读研暂时搁置）~~\n- 开始规律地定期[打拳](https://www.douban.com/game/35206697/)。\n- 趁着开始缴纳社保，办了一张招行联名Bilibili的Visa卡，获得了一年大会员。\n- 观看电影[『爱情神话』](https://movie.douban.com/subject/35376457/)、[『黑客帝国 矩阵重启』](https://movie.douban.com/subject/34801038/)\n- 参观展览[『巴黎建筑：城市进程的见证』](https://www.wbmshanghai.com/cn/category/exhibition/detail!www-wbmshanghai-Architectures-of-Greater-Paris-com)。\n- 观看~~某位友人强烈推荐的~~动画[『重启咲良田』](https://www.douban.com/people/156297062/status/3733996367/)。确实精彩。\n- 通关游戏[『极乐迪斯科』](https://www.douban.com/people/156297062/status/3743952079/)。\n\n### 二月\n\n- 考研二战初试出分，低于预期。继续打拳。~~欧拉欧拉欧拉欧拉欧拉欧拉欧拉欧拉欧拉欧拉~~\n\n<img src=\"/uploads/review-of-the-year-2022/triage.png\" alt=\"drawing\" width=\"300\"/>\n<center><b>笔者当时写的一部分笔记（提前将最坏情况与其对策显现固化成文本有助于缓解预感到即将面对失败时所可能产生的一系列情绪）</b></center>\n\n- 观看电影[『花束般的恋爱』](https://www.douban.com/people/156297062/status/3773806395/)、[『尼罗河上的惨案』](https://www.douban.com/people/156297062/status/3770004699/)。\n- 编写 [『二零二一年度回顾』](/review-of-the-year-2021/)\n- 通关游戏[『十三机兵防卫圈』](https://www.douban.com/people/156297062/status/3751779421/)。\n- 观看动画[『魔女之旅』](https://www.douban.com/people/156297062/status/3755575885/)\n- 购入[Play Station 5](https://www.playstation.com/en-id/ps5/)（随后吃灰）、[Switch Lite Dialga & Palkia Edition](https://www.nintendo.com/ph/hardware/detail/switch-lite/index.html)（随后吃灰）、[GOOVIS Lite 头显](https://goovis.net/products/lite)（随后觉得没用二手出了）\n\n### 三月\n\n- 入手[佳能EOS M50 Mark II](https://www.canon.com.cn/product/m50mk2/)。~~没过多久它就因为不再推出后续产品而降价了。~~\n- 刷题准备复试~~（然而准备的一堆离散数学题目一点也没用上）~~。准备个人简历与其他材料。\n- 听了一场同事的关于定理证明的Tech Talk，内容是证明归并排序。~~然而什么也没听懂，甚至直到现在都没有学会Coq。~~\n- 关于工作：开始在[价值4万元CPU](https://www.amd.com/en/product/10181)上跑程序（主要是Clang的回归测试）。\n- 通关游戏[『对马岛之魂：导演剪辑版』](https://www.douban.com/people/156297062/status/3786446119/)、[『大逆转裁判：成步堂龙之介的冒险』](https://www.douban.com/people/156297062/status/3782998022/)\n\n### 疫情小史（三月）\n\n> *03-06* 传闻上交闵行校区出现确诊病例。老板迅速做出正确判断，全司立刻开始准备远程办公。\n> *03-08* 公司提倡全员随身携带工作设备上下班，以免遭受封控致使生产力受损。\n> *03-09* 上交闵行校区宣布开始封控，多位同事被迫远程办公。为避免风险，公司也同步全面转入线上办公模式。\n> *03-10* 笔者开始远程办公的第二天。下班后，笔者甚至若无其事的跑去住所边上的商场吃了一顿金拱门。~~谁知竟成了断头饭……~~\n> *03-11* 居住的**单元楼毫无征兆的遭到封控**。无法进出，但可取外卖且有人送饭。同期，闵行区进入随机立刻封控时期。此时，大部分外卖与商超外送仍提供服务。与看守单元楼的保安交谈，对方表示并不知道封控时长。\n> *03-12* 上海发布称非必要不离沪，并**回应封城传闻：网传不属实**，没有这样的安排。\n> *03-13* 公司宣布继续远程办公一周。\n> *03-16* 仍在经营的外卖与商超数量开始显著下降，外送订单需要到点抢配送资格。\n> *03-17* 经过多轮上门核算检测与环境采样检测，在遭受为期4天的封控之后，单元楼正式解封。去小区居委会申请了一张之后并没有用到的小区临时出入证。新办的电信宽带被免费提速至500M。\n> *03-18* 专业复试线公布，发现线降了。~~出乎意料，但很开心~~。立刻开始联系导师。\n> *03-20* 颛桥新安批发市场开始全天闭市，暂停一切经营活动。此时大润发依然能通过蹲点按时下单抢到外送运力。\n> *03-21* 眼看形势不断恶化，开始加入第一个社区团购微信群。\n> *03-22* 市场监管局要求闵行区全区范围内除了超市、药店外全部停业，包括餐饮外卖。开始在应用商店内寻找还支持配送服务的商户。**有传闻说上海将开始全市封控四天**。\n> *03-23* 通过~~钞能力~~加价购买到了用于复试的摄像头。\n> *03-24* 外卖渠道彻底关闭，被迫开始参与社区团购。\n> *03-25* 在经历短暂约一周的解封后，警察来到小区门口拉上了封条，再次进入封控状态。\n> *03-26* 此时小区外还有部分商户通过非正式渠道提供饮品制作服务。小区居委会人员：请有能量的邻居施施力，赶紧让疾控把人带走。\n> *03-27* 上海发布宣布自明日起分批封城，朋友圈未被封控的人都在前往附近商超抢购生活用品。\n> *03-28* **上海正式进入全面封城状态，有关部门宣称本轮封城持续至4月5日**。市内商户停业，地铁公交几乎全部停运。\n> *03-29* 街道宣布将开始发放爱心物资。\n> *03-30* 开始发烧，但新冠抗原核算皆为阴性。~~通过钞能力~~横跨大半个上海买到了电饭锅。~~电饭锅真是人类文明之光~~\n> *03-31* 领取到第一份爱心物资，包括蔬菜、猪肉与食用油等。\n\n### 四月\n\n- 参加考研二战的复试，在经历了面试胡言乱语与机试直接开摆后，获得拟录取资格。**重回象牙塔**\n- 因为需要读研，于是跟老板沟通后把劳动合同重新转换回了实习合同，并从5月份续签到了7月底。\n- 工作期间继续给CppCheck排查缺陷。\n- 开始重新学习日语，并正式制定日语学习规划。\n- 观看动画[『星际牛仔』](https://www.douban.com/people/156297062/status/3839503674/)、 [『机动奥特曼 第一季』](https://www.douban.com/people/156297062/status/3839498416/)\n\n### 疫情小史（四月）\n\n> *04-01* 原定于今日解封的浦东各区宣布继续封控。\n> *04-07* 周边出现了不定期营业的外卖炸鸡，晚上偶尔可以下单到且送达时间不定（由商家自行配送）。\n> *04-15* 从冰箱里翻出了第一批发放物资中的冻肉，切开发现内部存在疑似蛆虫的组织，后全部丢弃。\n> *04-16* 外卖平台开始出现少量商家。\n> *04-18* 由于商家标记错误，收到了一大包免费的雨润肉品与三十余个咸鸭蛋。\n> *04-23* 由于出现阳性病例，所在小区管理级别由管控区提升至封控区。浦东部分地区开始“硬隔离”。\n> *04-25* 出现北京朝阳区即将开始封控的传闻，身边在当地相关部门工作的网友从侧面佐证了该传闻。\n> *04-26* 由于全市系统崩溃，无法为核酸检测进行上报登记，核酸检测临时停止。周边肯德基开始提供少量商品的外送服务。上海快递业正式重启。\n\n### 五月\n\n- 开始阅读[《中国建筑常识》](https://book.douban.com/subject/27138765/)\n- ~~给Clang修了一个Bug，但提交的Patch没有被上游所接受~~\n- 开始为读研期间的工作方向阅读论文。主要关键词包括：时间自动机、控制器综合等。\n- 观看动画[『Love, Death & Robots Season 2』](https://movie.douban.com/subject/34418203/)、[『星际牛仔：天国之门』](https://www.douban.com/people/156297062/status/3839515004/)\n\n### 疫情小史（五月）\n\n> *05-13* 上海发布宣布**努力在本月中旬实现社会面清零**。\n> *05-15* 上海发布宣布自16日起分阶段推动复商复市。\n> *05-17* 封控形式有所好转。获得了疫情期间的第二张小区临时出入证，但由于其有效时间与工作时间冲突未能使用。上海虹桥火车站迎来离沪大潮。\n> *05-22* 部分地铁线路宣布恢复运营，但依然被封控在小区内。\n> *05-23* 徐汇区某小区解封。\n> *05-26* 收到了自封控后的第一个京东自营快递。\n> *05-28* 大量外卖开始恢复营业。\n> *05-29* 上海市**正式宣布全面恢复生产生活秩序**。\n> *05-30* 上海发布宣布疫情防取得重大阶段性成果，自6月1日其恢复住宅区出入与全市公共交通。上海市公安局宣布“禁止机动车上道路行驶”的交通管制措施将于6月1日正式停止。部分团购商户宣布降价清仓处理。\n> *05-31* 所在小区正式解封，**上海疫情封控阶段正式结束**。\n\n### 六月\n\n- 月初当即决定搬离公司附近住所，回到家中，结束了为期两个月多的独居生活。公司部分员工返岗工作，我选择继续在家远程办公。\n- 与两年的挣扎道别。（408复习材料被单独清理出来送人了。~~另外竟然翻出了一套全新未拆的历年真题卷……~~）\n- 通关游戏[『月姬 重制版』公主线](https://www.douban.com/people/156297062/status/3897973661/)。\n- 购入22MM EF-M卡口的饼干头\n- 观看动画[『薇薇萤石之歌』](https://www.douban.com/people/156297062/status/3904003422/)、[『奇蛋物语』](https://www.douban.com/people/156297062/status/3891273099/)、[『奇蛋物语 特别篇』](https://www.douban.com/people/156297062/status/3891288871/)。\n\n### 七月\n\n- ~~把烂摊子丢给同事然后~~结束实习，回归自由身。\n- 拿到了~~看上去很像是山寨假货的~~研究生录取通知书。\n- 购入[Sony XR-65X91J](https://service.sony.com.cn/products/tv/XR-65X91J.html)。~~（年轻人的第一台游戏电视）~~\n- 观看动画[『攻壳机动队：SAC_2045』](https://www.douban.com/people/156297062/status/3926925807/)[『攻壳机动队：SAC_2045 第二季』](https://www.douban.com/people/156297062/status/3937466678/)。\n\n### 八月\n\n- 继续学习日语，为研零生活划上句号。参加了读研期间第一场学术会议（听师兄做报告）。\n- 收到了去年十二月份购入的Mili的黑胶专辑[『To Kill a Living Book -for Library Of Ruina- 』](https://project-mili.bandcamp.com/album/to-kill-a-living-book-for-library-of-ruina-2)（因疫情原因推迟了四个月）。\n- 购入正版软件[『Typora』](https://typora.io/)\n- 观看动画[『灰与幻想的格林姆加尔』](https://www.douban.com/people/156297062/status/3977181275)、电视剧[『机动搜查队404』](https://www.douban.com/people/156297062/status/3963212254/)。\n\n### 九月\n\n- 正式开学，在“上海市高可信计算重点实验室”获得了一个工位。领取开学材料的照片被挂在了学院公众号的文章里。\n- 把公司用的基础设施中的开源软件在实验室电脑上也布置了一套~~（然而之后并没有机会用到）~~。\n- 开始了*每周找各种理由填写出校申请以便回家过周末*的日常。\n- 观看动画[『宇宙巡警露露子』](https://www.douban.com/people/156297062/status/3988253215/)、[『珂赛特的肖像』](https://www.douban.com/people/156297062/status/3978485039/)。\n\n### 十月\n\n- 参加[中国软件大会软件(CCF ChinaSoft)研究成果原型系统竞赛](https://chinasoft.ccf.org.cn/2022/notice/ruanjianyanjiuchengguo.html)，获三等奖\n- 购入[Switch OLED](https://www.nintendo.com/switch/oled-model/)（硬破双系统机器）。*事实证明窄边框与更华丽的色彩带来的冲击远超想象*。\n- 观看电影[『新奥特曼』](https://www.douban.com/people/156297062/status/4014524287/)、动画[『赛博朋克边缘行者』](https://www.douban.com/people/156297062/status/4018989427/)。\n\n### 十一月\n\n- 前往上海市皮肤病医院治疗大腿上的皮肤瘙痒区域，经真菌检查后发现原来是股藓（鬼知道是怎么感染上的）。\n- 个人存储池升级：二手出了[群晖DS220j](https://detail.zol.com.cn/1316/1315178/param.shtml)，并购入[群晖DS420j](https://detail.zol.com.cn/nas_networkstorage/index1327155.shtml)和一枚8T硬盘。现在是6T+6T+8T三盘无阵列配置。\n- 购入[ROG6 天玑版](https://rog.asus.com.cn/phones/rog-phone-6d-model/)。没过多久就后悔了，原生安卓比MIUI难用太多。~~准备等小米出对称无挖空直屏后立刻跳反~~\n\n### 十二月\n\n- 购入 RTX 3070 矿卡一张，自己动手清灰并更换了硅脂。\n- 前往上海大学宝山校区参加日本语能力测试JLPT(N2)，擦线通过。写了[一篇网志](/how-to-pass-n2-in-a-half-year/)。\n- 实验室冬日团建，前往顾村公园进行露天烧烤，饭后绕公园骑行。当天晚上，由于白天的核酸结果未按时检出，被迫跟师兄在校门口边上的网吧坐了几个小时。\n- 参与论文大修，补充了一系列实验~~（23年8月：至今仍未发表）~~。\n- 三年疫情正式宣告结束，火速逃离学校。~~随后在家中感染新冠~~。\n\n## 2022个人年度总结\n\n### 最佳作品\n\n　　在那一科技全职工作期间为Clang Static Analyzer、Cppcheck等开源静态检查工具修的各种Bug。其中的某个甚至帮助我写出了一篇满分的课程论文。\n\n### 收获与展望\n\n　　人生，真的很奇妙。和去年相比，这一年在明面上的收获确实增加了不少。无论是考研二战的成功，还是顺利拿下的日语N2证书，这些曾一度是奢望的目标都在逐渐变成现实。而我其实也十分清楚，这些成果无不是建立在去年脱产学习的豪赌之上的。\n\n　　正如热力学第二定律所揭示的那样，万事万物都会不可避免地向着无规律的无序和混乱发展。人的意志也正如此。随着时间的推移，原本坚定的意志会不断受到环境中各自噪声的影响，决心与价值观也会随之变化。在某种意义上，被编写出的程序则倒像是固化了的“绝对意志”，会忠实而一如既往地表达自己的本真。但从许多方面来看，这样强大的适应性也正是人类生存下去的重要优势。\n\n　　由于一系列生活与工作上的事务，本文的实际成稿时间比预期晚了半年多。在编写前一年的年度总结时，笔者曾在末尾声称要“先边做一些简单的工作边休息一阵子”，并且要“为大踏步朝理想迈进积累一些资本”。幸运的是，笔者现在确实达到了这一目标。读研生活比想象得要清闲不少，暑期期间也有机会重新回顾曾一度放弃的图形学知识。尽管这些内容与我现在的研究方向看似并不直接相关，但毕竟宇宙很大，生活更大，相信终有一天，看似无关的知识会结合起来，开辟出新的道路。\n\n　　2023年8月15日，于住所","tags":["破事水"]},{"title":"零基础如何用业余时间自学半年拿下日语N2证书","url":"/how-to-pass-n2-in-a-half-year/","content":"\n　　TL;DR 版：花三个月时间刷往年卷，期间做听力专项训练，再练一下阅读答题技巧即可。<del>说起来容易里面其实有很多坑</del><!--more-->\n\n> 免责声明：本文并非路线指导，不保证内容的正确性与专业性，作者不从事语言教育相关工作，文中所指涉对象均无利益关系。本文仅忠实记录个人备考 JLPT N2 的过程与经验，并依据个人感受提供主观参考意见，其价值需根据读者自身情况进行判断。\n\n　　请注意，本文所提供的经验是：如何通过合理的时间规划，选用合适的教材与习题集，按照具有可操作性的步骤，逐步推进以等级考试为导向的语言学习过程。这并非是学习语言的最佳方式（甚至都不算是比较好的方式），但它也确实可以为日后枯燥冗长的语言学习过程提供一个有效的动力来源。毕竟，合格证书算是语言学习过程中一个微小却又坚实的正反馈。\n\n![](/uploads/how-to-pass-n2-in-a-half-year/n2-score.jpg)\n<center><b>笔者稀烂但勉强算是合格了的N2考试成绩</b></center>\n\n　　个人背景：工科研一在读，语言天赋一般，中度动漫爱好者，年均看番数$\\in [10,15]$（换算成季度番），不怎么看日剧与电视节目，目前无留学规划。本科第一年（17年）时，曾报名过一次冬季N2考试，但学习热情仅持续了一个月，进度大概是跟完新标日初级上册，随后弃坑，直到22年初都不曾投入时间系统学习日语，因此本轮备考的开始阶段约等于零基础。<del>母亲在日资企业工作，会选择日语作为二外也有一部分的原因是受其影响，但她由于工作繁忙未能在备考期间提供实质性帮助</del>\n\n## 前言\n\n　　2022年4月初，在经历了[第二次参加全国硕士研究生统一招生考试](https://kale1d0.space/struggles-on-the-road-to-postgraduate/)并获得拟录取资格后，笔者开始思考该如何利用直到开学的这段时光。时值上海全面静默期间，笔者因实习被封在了公司附近的居所内，经历了意料之外的近三个月的独居生活。线上办公带来的是可支配时间的增加，也让笔者觉得有机会进行一些新的尝试。因此，一方面为了让自己从长达半年多的研究生招生考试备考状态中脱离开来，另一方面也为了弥补本科期间的遗憾，笔者当即决定报名参加当年的日本语能力测试。\n\n　　笔者实际备考时间为22年4月至当年冬季N2考试前。直到8月底前，笔者基本每天都能够安排出用于日语学习的时间；自9月开学后，受限于课程与工作安排，每周仅分配了2-3天的学习时间；而到了12月的冲刺阶段，则又强行挤出了每周中的4-5天进行刷题与刷卷。因此，从摊还分析的角度来看，总体的有效复习时间约为6个月左右。<del>强行凑成了半年</del>\n\n　　关于每天的时间分配，笔者的建议是选择完整的1.5-2小时即可，如果学有余力可适当延长。但过长的时间也会使得注意力难以持续集中，进而影响学习效果，所以笔者更加推荐增加频次或是尽早开始准备。\n\n## 第一阶段：培养语感\n\n　　第一个阶段的主要目标是掌握语言系统最基本的规则，并熟悉日常生活中的高频词汇。其对应了笔者从22年4月至8月初的备考过程。这段时间距离考试还比较远，适合按照教材进行系统性的基础知识积累。\n\n　　本阶段笔者选用的教材是《新版中日交流标准日本语》初级与中级，使用的视频课程是Bilibili课堂的『[唐盾：0-N4日语精讲](https://www.bilibili.com/cheese/play/ss61)』与『[唐盾：N3+N2日语中级精讲](https://www.bilibili.com/cheese/play/ss102)』，每天花费约2-3个小时对课文中的词汇、例句进行背诵与跟读（如有精力可增加听写训练），并完成课后练习。这两个课程中，前者看的是带弹幕的盗版资源，后者买了正版课程，但只跟到了中级上册不到一半的部分（也就是说，笔者连N3基础知识都没过完就去准备考试了>~<）。\n\n　　唐盾老师在新东方任教时期就曾负责日语初级的课程，非常适合用来入门。当然，Bilibili课堂的课件制作似乎是统一外包的，所以课件中不乏纰漏，但大多数都会被弹幕纠正，开着弹幕学时也会有一种在跟着大家一起上网课的感觉。不过笔者觉得，在确定了选用的教材之后，初期阶段不同老师的区别其实没有那么大，因此只需选择风格与讲解形式能够吸引自己的视频课程即可。另外，中高级课程实际上不是非常推荐唐盾老师，这方面可以去知乎上参考一下大家对各个知名教师的风评然后进行选择。\n\n　　本阶段的持续时间可长可短，但建议至少熟悉完全部的N4基础知识（也即新标日初级上下册），否则可能会影响下一阶段的推进。\n\n## 第二阶段：分块练习\n\n　　在第二个阶段，主要目标则转变成了对刷题所必须掌握的考点进行积累。本阶段距离考试还有一定时间，因此首要的着重点是词汇与文法。笔者选用的对应教材则是著名的红宝书与蓝宝书。这个阶段对应了笔者从8月初至10月中旬的备考过程。\n\n　　首先需要注意的是，红宝书其实有两个版本，也即[《红宝书·新日本语能力考试N2文字词汇》](https://book.douban.com/subject/6052135/)（专为N2准备的版本）与[《红宝书大全集 新日本语能力考试N1-N5文字词汇详解》](https://book.douban.com/subject/26953124/)<del>（Megapack）</del>。很多人觉得这两者可以相互替代，但笔者的实际经验是两本都要有，因为前者包含了针对N2考试词汇的专项训练内容，而后者则针对具体单词增加了更多的拓展与关联，如同近反义词、关联词等等。在词汇讲解方面，笔者主要听完了「偏头鱼喵」的『[【日语单词】词汇N2](https://www.bilibili.com/video/BV1ju411R7FC/)』（对应大合集红宝书）。在跟读与背诵方面，则使用了「自由自在的郁金」的『[【N2词汇】红宝书N2词汇](https://www.bilibili.com/video/BV1JK4y1b7fg)』（对应N2专项红宝书）。不过受限于时间，笔者其实并没有完成红宝书上的习题，主要的训练方式还是跟读与听辨。\n\n　　关于蓝宝书，也即[《蓝宝书－新日本语能力考试N2文法》](https://book.douban.com/subject/6052137/)，笔者在这一阶段则是按章节来学习，当即尝试完成章节练习，对答案然后整理笔记。不过初期如果没有做题经验，看习题时会感觉束手无策，因此在这里推荐「会日语的胖熊猫」的『[【日语习题精讲】N2蓝宝书合集](https://www.bilibili.com/video/BV1k5411K7ef/)』。这个系列其实讲解的并不算好，很多题目其实也没讲清楚，因此需要自己时不时去查其它资料，但其胜在免费且全面，也会逐句翻译题干内容，而且每个单元的时间也并不长。建议初期在看完语法知识点后，直接听讲解然后做笔记，并时不时回顾一下讲解时提到的语法知识点。一段时间后，你就不再会对这些语法题感到陌生。\n\n　　在学习完蓝宝书的所有章节后，笔者又反复过了几轮。但由于蓝宝书的知识点依然太多且组织架构并不算非常清晰，因此笔者后续又去听了「当当_suzu」的『[20分钟！JLPT N2语法全解合集](https://www.bilibili.com/video/BV1yY411b7zY/)』。这个视频课程的特点是，其包含了蓝宝书中最重点的内容，且知识点的编排更加合理也更便于记忆。本阶段的后期笔者主要在背它的教案，闲下来时才会在蓝宝书里再翻翻那些被遗漏但也可能会再考试中出现的语法知识点。\n\n　　由于本阶段的完成度将会对下一个阶段造成实质性影响，因此笔者建议在本阶段内至少过完一轮N2词汇，且完成N2蓝宝书所有的练习题。如有余力，则可适当翻阅N3的红蓝宝书以夯实基础。\n\n## 第三阶段：模拟冲刺\n\n　　第三个阶段则是备考期间的最终环节，也即一切学习都以应试为目的的阶段。本阶段主要包含两个目标：1. 掌握必备应试技巧 2. 完成足够数量的模拟练习。阅读与听力这两大综合性较强的题型是这个阶段的重点与难点，会分别介绍突破方法。这一阶段对应了笔者从10月中旬到考试前夕的备考过程。\n\n　　首先是真题册的选择。笔者选用的是「河南大学出版社」的《新日本语能力考试真题大全.N2》。这套真题册的特点是，按卷成册（<del>便于带到课上进行摸鱼</del>），讲解清晰，且附赠了对笔者来说非常有帮助的电子题库。该题库程序名叫“天明题库”，可以记录做题的正确率与进度，反复刷标记的错题，非常适合用来按题型刷题。它运行于Windows系统，包括N3-N1的大部分往年卷，但不包括听力。笔者的刷题顺序是从远至近，先做语言知识再做阅读。语言知识部分由于耗时较短，且考点较为频繁，可以优先完成。而阅读部分则要注意答题时限。至考试前，笔者的完成度为：完成了9套试卷的语言知识部分与6套试卷的阅读部分。\n\n　　关于必备的应试技巧，笔者推荐『[考前救急！6分钟突击N2 N1听力听解的奇技淫巧【JLPT日语能力考】](https://www.bilibili.com/video/BV1pr4y1Q7a9/)』与『N1 N2阅读解题技巧 [上](https://www.bilibili.com/video/BV1SP41177KU/) [下](https://www.bilibili.com/video/BV1PK411D78Z/)』。前者包含了听力部分的题型介绍与基本技巧，后者则介绍了阅读部分的正确做题方式。\n\n　　这里再要详细讲一下听力的入门方法的问题。N2的听力内容又快又多，初期往往很难适应，因此笔者推荐在做真题前应该首先完成至少一本难度较低的专项训练习题集。笔者选用的是[《新完全掌握日语能力考试N2级》](https://book.douban.com/subject/7000114/)。这本书从最基础的听力题型开始，一步步介绍了各个题型的做题技巧和需要关注的重点，梯度和难度对零基础来说都比较合适（不过里面有些题型已被淘汰），且配套音频非常地道。需要注意的是，其正文内容由日语编写，在练习期间建议使用诸如『有道翻译官』之类的拍照翻译App。听力的训练过程较为漫长枯燥，需要理清每个音节与每个词汇含义，并进行大量的标注与跟读、听辨训练。笔者在正式开始做往年卷的听力前完成了这一习题集，使得听力的准确率从几乎完全不会提升到了能拿约一半分数。在后续刷往年卷的过程中，也需要经常整理归纳每个题型的技巧与高频关键词。笔者在考前完成了6套试卷的听力部分。\n\n　　在最后的冲刺阶段，时间的大头应该安排在阅读与听力的训练上。如果前两个阶段的基础尚可，那么做阅读时应该不会有非常大的阻碍（虽然答案可能很容易选错）。那些没背完的单词可以先放一放了，但语法知识点依然需要时不时过一轮。笔者建议在赴考前完成并订正至少5套往年卷的全部内容。\n\n　　最后再简单提一下其它笔者用过但自认为没有提供实质性帮助的书籍和App：[《红蓝宝书1000题·新日本语能力考试N2文字·词汇·文法》](https://book.douban.com/subject/27058557/)（题目量大且难，适合巩固拔高但不适合零基础速成）、『MOJiTest』（付费软件，其背单词功能其实挺好用，但笔者后期实在没时间过单词了……它好像也有往年卷刷题功能）、『MOJi辞书』（适合第一阶段时用来跟读快速过词汇）。\n\n## 后记\n\n　　对笔者来说，这次 JLPT 考试其实既有着幸运的一面也有着不巧的一面。幸运的是，笔者顺利在开放报名的前三分钟内通过手速抢到了离家最近的上大宝山校区考点，不巧的是，抢到的座位正好处于收音效果最差的最后一排靠走廊的角落，<del>乃至听力部分由于隔壁教室和本教室存在播放时差而产生了模糊的重音</del>。但在受到了多点发散快速变化的疫情影响的情况下，上大考点仍未取消考试，所以幸运的成分总归是多占了一点的。<del>甚至考完后还感觉自己大概率过不了，没想到分数比期望值高不少</del>\n\n![](/uploads/how-to-pass-n2-in-a-half-year/shu.jpg)\n<center><b>一 日 上 大 人</b></center>\n\n　　对笔者来说，本文既是个人经验的分享，也是对过往历程的回顾与总结。俗话说，经常回头看才能走得更长远。笔者接下来也会继续挑战日语N1，<del>然后争取再水出另一篇没什么营养的博文</del>。\n\n　　最后，祝大家都能在语言学习的道路上顺利前行。\n","tags":["破事水"]},{"title":"侘傺考研路","url":"/struggles-on-the-road-to-postgraduate/","content":"\n　　TL;DR 有书读了。<!--more-->\n\n## 引言\n\n　　冬日傍晚，天色早已十分昏暗。打铃、收卷，这些早已熟悉的流程并没有掀起一丝波澜。我恍恍惚惚走出教学楼，刺骨的寒风打在身上，仿佛像是在嘲笑我这半年多的徒劳、幼稚与天真。我边走边暗想着，也许这两年的备考经历给我的最大收获，便是认识到了硕士学历可能注定与我无缘。\n\n　　四个月后的某个清晨，我颤抖地拖动着鼠标，在刚刚公布的拟录取名单页面上找到了自己的名字。\n\n　　于是，一切尘埃落定。五个月后，我将正式前往华东师范大学，开始为期三年研究生学习生活。\n\n　　我是二战考生，上海某211弱校CS科班出身，本科期间大量参与竞赛导致绩点比较难看（3.22/4.0）且无缘保研。在第一次参加研究生入学考生时，因初试成绩低于专业复试线而草草退场。痛定思痛，决定不改变一志愿进行二战，自七月份起脱产居家备考。备考期间历经过各种困惑、焦虑与情绪浪潮，个中辛酸唯有自知。但所幸最终被录取，也算是为这两年备考经历划上了不太完美但依然铿锵有力的休止符。\n\n　　在这一年多里，我走过许多弯路，得到了一些教训，总结出了一些经验，故撰此文以记之，同时也希望能帮助到其它还在挣扎备考的同学。\n\n　　研究生入学考试的选拔性质决定了大多数人注定不会在这场竞争中取胜。但是，坚定不移的信念、敢于斗争的勇气和立足现实的觉悟，这些都将会是助你获胜的最佳利器。\n\n## 初尝败绩\n\n　　2020年，我第一次参加研究生入学考试。初试总分346分，其中计算机学科专业综合基础117分，思想政治理论61分，英语一74分，数学二94分。专业复试线348分，未能进入复试。\n\n　　早在大二加入嵌入式实验室时，就已经萌生了读研的想法。到了大三上，在上海赛区主场作战参加了本科期间的最后一场ICPC区域赛，但无奈因实力不足铩羽而归。和队友复盘完比赛后，便自然而然开始交流起对未来道路的规划。也许正是从这时起，抱着不甘的心态，我坚定了读研的目标。\n\n　　备考之路是从大三下开始的。寒假期间，突如其来的疫情深刻地改变了所有人生活的方方面面。三月初，学校在匆忙中宣布开学，全面转入居家线上授课模式。这对考研来说其实是比较有利的，一方面线上授课时自身对于进度的控制更加自由，另一方面比起需要在各个教学楼与寝室之间奔走，居家学习也能够节省大量时间和精力。当然，缺点也同样明显，失去了同学之间的鼓励和良性的竞争关系，会使得自己更加容易开始放松摆烂起来。再加上仍有大量专业课需要学习，在直到六月份暑假开始的这段时间里，我的学习进度其实非常缓慢，只是粗略的翻了一些王道辅导书，并过了一轮数学基础。\n\n　　暑假的主旋律是看高数网课与刷题。期间过了一遍复习全书基础篇，然后跑去刷完了660。沉闷燥热的夏天转瞬即逝，给我留下的印象只有复习之余时沉浸在《火焰纹章：风花雪月》与《猎魔人3：狂猎》等游戏的世界里的美好时光。很快，便迎来了大四上秋季学期的开学。\n\n　　由于疫情得到控制，又有机会能与同学们相聚在校园一起追梦。在最初的九月份时，我习惯于早上到图书馆抢座，或是跑到位于创新实践基地的社团办公室里学习（在此特别感谢当时即将毕业的老社长愿意腾出空间）。校园里的学习氛围确实是非常浓厚，我也一直保持早上七点一刻起床的良好的作息，每天和研友一起交流学习进度，反思学习过程。到了十月份，备考气氛进一步紧张起来，我也开始了强化阶段，从图书馆转战到开门更早也关门更晚的教学楼教室。不得不说，此时的学习过程是非常快乐的。每天都能见证自己的进步，也能切实感受到身边的同学都在朝着自己心仪的学校努力前进。**考研，这一短暂的最高目标仿佛像是掩盖了人生中所有的失败与不幸，成为了一颗救命稻草，成为了最耀眼的白月光，却也成为了放弃思考而盲目努力的借口。**\n\n　　十一月份起，备考压力逐渐增大，而各个专业课的课程要求却未曾降低，课程考核也依次袭来。还好，期间得到了室友和许多其它已经成功保研的同学们的帮助，因而并未在这些事情上消耗太多精力。但直到这时我才发现自己之前对于复习进度的估计过于乐观，不得不急忙对强化阶段进行收尾并立刻进入刷模卷的状态。\n\n　　转眼间就到了十二月。抱着些许复习不够全面的遗憾与对自身专业课实力的信心，我和其它研友一起义无反顾地踏入了考场。在空旷的华东师大闵行校区里，四场三小时的考试如期而至，并毫无意外地平稳结束。\n\n　　初试结束后，我对于能够进入复试抱着十足的信心，因为去年华东师大软工学硕的复试线非常低，仅320分。如果按照我的复习计划，至少能拿到350分左右，理应远远超出复试线。于是，为了打发大四下的闲暇时光，我立刻去寻找了一份实习工作。在初试成绩公布之后，除了数学比我预期值稍低一些外，其它基本都符合预想。我随即开始刷各种算法题、复习离散数学和操作系统，认真准备复试。\n\n　　然而现实像是跟我开了一个小小的玩笑。\n\n　　我还清晰的记得出专业复试分数线的那天。早上八点半，我和往常一样来到了还空无一人的公司。在休息期间打开手机，发现加入的考研群里传来公布复试线的消息，但没有说具体是多少分。我抱着紧张与期待，急忙打开华师大研招网，点进了复试线信息汇总表，往下拉到软件工程。\n\n　　348分。\n\n　　**这意味着初试成绩仅346分的我，没能出线。**\n\n　　只感觉脑子嗡的响了一下。一开始我还并不相信，刷新了一遍页面，然而冰冷的数字并没有发生任何改变。那天并不热，但汗水依然浸湿了我的衬衣。在一瞬间，我便意识到自己需要立刻开始面对调剂、工作还是二战的重大抉择。幸好，我也有为考研失败的情况进行过规划，在体验了仅仅大约十几分钟的无所适从之后，我又恢复到了平静，并沉默地度过了这整一天（甚至直到我实习快结束时，同事们才知道我考研失败的消息）。\n\n　　由于我考研的目标是为了获得深造以提供个人能力的机会，因而根本不会愿意考虑调剂。当然，在这期间我也经受到过各种诱惑，感受过迷茫与无助的挣扎，也曾产生过随便找个学校读研的想法，但最终还是坚持了原本的选择。\n\n　　初试失利带来的痛苦在此时其实还没有完全展现出来。但更让我难受的是，期间跟我一起备考的同学纷纷上岸了浙大、南大、华师大、复旦、乃至本校……我这个连复试都没有机会进的人仿佛成为了某种异类，某个不自然的存在。这段时间里，我不敢复盘自己的初试过程，也感觉难以面对曾经帮助过我的诸多同学。\n\n　　幸运的是，在得到了家人的理解支持以及好友的安慰鼓励之后，我很快坚定了二战的想法。于是，六月底我辞去了实习工作，带着我在学校里积攒的各种行李和坚定的决心回到了家，开始了艰难的考研二战之路。\n\n## 背水一战\n\n　　2021年，我第二次参加研究生入学考试。初试总分357分，其中计算机学科专业综合基础117分，思想政治理论67分，英语一76分，数学二97分。而这一年的专业复试线仅345分，较去年略有下降，我也因而顺利进入复试。统考计划招收26人，进入复试线35人，我初试成绩排第20名，复试总分435.6分排第5名，总成绩380.6分排第11名，最终如愿以偿被华东师范大学软工工程学院拟录取。\n\n　　时间回到七月，此时正值盛夏，刚刚经历了毕业典礼并被母校扫地出门后，我也遇到了大部分二战考生都会犹豫的一个抉择，那就是关于学习环境的选择。早在四月份，就有好友问我是否考虑在学校附近租房，并声称能通过某老师获得毕业后依然可以进校学习的权利。我犹豫了许久，最终觉得还是没有这个必要。首先我有自己的房间，学习环境并不差，并且居家学习时无需为生活上的基本需求操心。如果选择在外租房，要达到和自己卧室相近的学习生活环境水平，需要的花费非常之高。其次，即使能在学校教室学习，当年一起奋战的同学却早已各奔东西，同样难以获得当时的学习氛围。因此我拒绝了他的邀请。（该友人随后在十月份时被某英国名校录取，提前结束了二战之旅）\n\n　　直到这时，我才能够开始直面自己的失败。我分别对每个学科复盘了整个复习过程，发现问题主要在于如下几点：对于数学的学习过程，网课时间占比过长，题量却不够，对于错题的整理、归纳与回顾也做得比较差，到后期模卷也没怎么做，最终导致临场发挥比较差，以致上来选择题连错五道。至于专业课，则开始的太晚，王道书上的模拟卷也没来得及认真做。在政治学习方面，由于时间安排不当，后期背诵时间被数学复习所挤占，导致主观题得分偏低。而英语的学习，我则并没有什么心得体会，只觉得发挥出了自己的正常水平。\n\n　　于是，二战期间我针对这些问题着重进行了复习规划的调整：首先是将整体进度的安排提前，给政治背诵留足时间；其次是数学不再看视频课程，而是直接开始刷习题集和卷组；至于408，则是增加了模卷的时间安排；对于英语，我则采取了每日一篇阅读反复练习真题的偷懒摆烂方法。事实证明，我上述的复习策略总体上是有效的，政治得分的增加与在难度提高下依然稳定的数学成绩为顺利上岸提供了保证。\n\n　　那段复习备考的时光是枯燥而模糊的。在八月份初，一战失败给我带来的痛楚与压力到达了顶峰。那段时间里，我常常会做梦，做很多不一样的梦，但都和校园有关。在梦里，有时我会回到大学校园中，继续为另一个竞赛或是项目而拼搏奋斗；有时我会为两个校区之间的社团或是个人物资的运输与转移而发愁；而更频繁出现也更离谱的情况是，我会时常梦到自己在本科毕业后，又重新回到了高中，坐在教室里按部就班的上课学习，并再一次参加高考。\n\n　　不过，每周或至多半个月，我都必定会找机会和同学们小聚一次。这其中有在本校继续读硕读博的、有在国企私企外企工作的，还有即将面临毕业抉择或是已经获得了保研资格的学弟学妹们，当然也有极少数与我一样初试失利后选择二战的研友（其中有位同学一战分值和我相近，也和我一样没有过复试线。毕业前我劝他直接二战，但他选择了先去工作。结果到了十月份时，发现工作并没有乐趣和前途的他也突然决定辞职开始二战）。和他们进行的交流使我基本上能始终保持平静、安稳的备考心态。\n\n　　在七八月份的预热阶段，我的主要精力集中在数学复习上。先是就这辅导教材做完了1800的基础篇，并重温了去年刷的660上的重点错题。英语则是每天背单词做阅读，有的时候数学题做得比较多也会战略放弃当天的英语复习时间以保证睡眠。期间，我还每天坚持一小时健身环或是健身拳击以保证体能。\n\n　　到了九十月份的强化阶段，我开始啃张宇高数十八讲，并重温之前遇到过的不熟悉的知识点。遇到实在不理解的部分时，反复刷了对应章节的视频课程。啃完一轮十八讲后，我回头来集火刷完了330。在专业课学习方面，迅速过完了一轮王道四本书的选择题部分和所有书籍大部分章节的简答题部分，战略放弃了一些性价比较低的内容（比如组成原理中与浮点数有关的章节）。在政治方面，重新刷了一遍新版肖秀荣1000，并反复过了几遍腿姐技巧班的讲义。\n\n　　时间很快就到了十一十二月份时，我的复习也进入了冲刺阶段，数学主要是做各种模拟卷并回顾了一轮近五年真题（毕竟大部分真题卷在一战的时候都已经做过一次了），其中做了汤家凤八套、李林六四、合工大五套卷，看了看大受震撼的李艳芳三套卷，随后重点回顾了之前做真题时遇到过的错题。专业课方面，重新过了一轮王道四本书中的错题和冷门知识点后，去做了八套模拟卷，并回顾了往年真题卷上的错题。英语方面则加入了几次真题模拟。在政治学习方面，和其它同学一样盯着肖八肖四狂背，并复习之前一千题中遇到过的错题。\n\n　　十二月底，伴随着步步紧逼的凉意，我在父亲的陪同下回到了原户籍省市苏州市，前往苏州市教育考试院的指定考点参加2022年研究生入学考试的初试。接着，便发生了引言中的那一幕。不得不说，这一年的数学卷非常打击人，做下来的手感和去年一战时完全不同，感觉许多题目都需要靠临场发挥，而且在交卷时几乎每道大题都没有来得及算完。不过值得庆幸的是，扎实的刷题经验使我在前半张卷子上并没有出现太多问题，以致最后卷面分值竟略高于去年。\n\n　　其实在初试刚结束时，我对于自己成绩的估计值是比较悲观的，认为大概率会到不了350，而今年的分数线很有可能还会继续上涨，因此和去年不同，直到初试成绩公布之前我都没有认真考虑过准备复试。在初试成绩出分前的那一晚，为了稳定自己的心态，我在笔记本上详细列下了分数位于各个不同的区间时我所应具有的心情和之后的应对规划。次日早晨，查到自己的分数比去年略高，我甚至还为总体上的平稳发挥小小激动了一下。但是不久后国家线的公布又带来了一个噩耗：今年工科大类的国家线较去年提高了十分。综合考虑所有情况，我认为今年复试线会有小幅增长，非常有过线进入复试的希望，因此立刻开始准备复试。\n\n## 关于复试\n\n　　在复试线公布之后，令我和许多其它同学都感到意外的是，今年的线不仅没有提高，反而下降了两分。我猜是去年分数线的暴涨吓退了许多人，而坚定不改变一志愿的我因此某种程度上也算是占到了一点便宜。\n\n　　今年的复试与往年都不相同，首次要求考生准备八分钟的PPT进行个人汇报，并且机试的时长缩短至一小时，其成绩也首次不直接计入总成绩。面试则与之前相同，会让你抽取一道专业问题和一道英语问题，要求在读完题目后立刻进行作答。我抽到的专业问题与离散数学有关，英语问题则着重于自我表达。在机试方面，我其实发挥得并不好，但考虑到约有四分之一参与复试的同学机试直接爆零，我的成绩看上去也不算太糟。\n\n　　关于复试的准备，其实我在专业课程和英语方面都进行了突击，包括刷了许多张华师大的操作系统与离散数学课程的往年卷、整理常见的英语口语问答题等等。不过事实上这些都没有起太大的作用，唯独经过反复计时训练的个人汇报陈述发挥得还算可以。在自由提问环节，我也成功将某位老师引入了自己设下的“坑”，并借机表现了自己的专业知识，赢得了老师的肯定与认可。也许这正是我复试成绩还算不错的原因。\n\n## 尾声\n\n　　尽管复试的过程有些紧张和磕绊，在结束后，我立刻确定了自己将会被录取。果不其然，次日我的名字就出现在了公示的拟录取名单之中。知道后，我立刻将这一消息分享给了家人和好友。当晚，我兴奋得难以入眠，反复回想着自己最初对于研究生生活的美好愿景，并试着给自己列出了一个“读研期间必做的事”清单。不过第二天我就意识到这仅仅是人生中必定要经历的某个阶段而已，然后放弃了这个念头。\n\n　　此时此刻，我已经联系上了导师，未来三年研究生学习生活的规划也已经有了一个模糊却又分明的轮廓。我知道选择有时比努力更重要，却也相信所有的努力终究都会会有回报。回首这两年备考经历，那些艰难的岁月其实一转眼就过去了。诚如考研政治徐涛老师所言，二战乃至三战的代价，放在人生的尺度上来看其实根本不算什么（况且我还在期间参与了约半年左右的实习工作）。希望各位仍在努力备考的同学都能顺利调整心态、科学备考，相信自己的选择，不要轻言放弃，更不要大意轻敌。\n\n　　在最后，祝愿各位同学都能前程似锦。\n","tags":["破事水"]},{"title":"（迟到的）二零二一年度回顾","url":"/review-of-the-year-2021/","content":"\n## 前言\n\n> 自恋是愚蠢在其舞蹈中的第一个舞伴。其原因在于，它们具有一种特殊关系：自恋是疯癫的第一个症状。其原因还在于，人依恋自身，以致谬误为真理，以谎言为真实，以暴力和丑陋为正义和美。——米歇尔・福柯，《疯癫与文明》\n\n### 目的\n\n　　随着度过的年岁越来越多，逐渐察觉到自己对于时间流逝的概念已经开始有些模糊。那些一个月以内前发生的事件还比较好说，而在回忆超过大概三个月之前的事件时，得到的印象时常会出现紊乱。这进而导致我丧失了与许多重要时间节点之间的距离感。于是，为了记录一些可能会对未来有积极意义的事物，并时常使自己保持对时间流逝的敏感性，决定从今年开始在每年的年初为上一年编写年度回顾。\n\n<!--more-->\n\n### 形式与内容\n\n　　在这第一个版本的年度回顾里，主要包含两个部分：个人微事记与年度总结。前者主要以月为单位模仿大事记体这一应用文体，从个人所使用的社交媒体与笔记等摘录一些自认为值得纪念或是有可能对未来产生深远影像的事件，而后者则提纲挈领，从个人体悟与成长经历等方面对这一整个年度进行总结。文章中的提到的词条均加入了跳转至个人评论（豆瓣/Bangumi等社区）或是作品（哔哩哔哩/博客文章等）的链接，以及相关条目的可靠性较高的说明页面。\n\n## 2021个人微事记\n\n### 一月\n\n- 为自用的计算服务器进行了升级。处理器从i7-7700k升(<del>代降</del>)级到了i5-10600kf，主板从270-P升级到了Z490M-S01。*接机箱排线时撞弯了USB3.0接口的一根针脚*。\n- 观看剧集[『半泽直树 第二季』](https://www.douban.com/people/156297062/status/3253365461/)。\n- 观看动画[『BEASTARS』](https://www.douban.com/people/156297062/status/3259866379/)、[『哥布林杀手』](https://www.douban.com/people/156297062/status/3275718123/)、[『在地下城寻求邂逅是否搞错了什么 第三季』](https://www.douban.com/people/156297062/status/3253364308/)。\n- 阅读书籍：罗伯特·M·波西格[《禅与摩托车维修艺术》](https://www.douban.com/people/156297062/status/3275200397/)、克里斯多福·孟[《亲密关系》](https://www.douban.com/people/156297062/status/3241538173/)。\n- 开始阅读：毛泽东[《毛泽东选集 第一卷》](https://www.douban.com/people/156297062/status/3241538981/)。\n- 试玩游戏[『黑暗之魂3』](https://www.douban.com/game/26417347/)，*打了五次才打过灰烬审判者古达*。\n- *由于学工部老师把奖学金申报书交错部门，导致参与的挑战杯获奖团队与今年的校创新奖学金失之交臂*。\n- 哔哩哔哩会员购上预定的景品[『初音未来 白兔女郎』](https://www.hpoi.net/hobby/60140)和[『初音未来 中国礼服』](https://www.hpoi.net/hobby/61105)到货。*然而验货时发现后者模型左侧的头发断掉了，从此拉黑会员购*。\n\n### 二月\n\n- 观看动画[『月色真美』](https://movie.douban.com/review/13195612/)、[『颠倒的帕特玛』](https://movie.douban.com/review/13216307/)、[『岸边露伴一动不动』](https://www.douban.com/people/156297062/status/3305485834/)系列。\n- 阅读书籍：J.E.戈登[《结构是什么》](https://www.douban.com/people/156297062/status/3281837275/)。\n- 观看电影[『让子弹飞』](https://www.douban.com/people/156297062/status/3292568250/)。\n- 等待考研出分，闲暇时尝试开发[『pypbbot』](https://github.com/PHIKN1GHT/pypbbot)。\n- 试着用[Wacom One数位屏](https://www.wacom.com/zh-cn/products/pen-displays/wacom-one)临摹了一朵百合花。*线条仿佛是帕金森晚期患者画出来的*。\n- 为接下来的四个月找了[一份实习](https://kale1d0.space/internship-in-naive-systems/)，同时试着考虑了下毕业后直接就业的情况，并*胡乱朝互联网与银行业投了一些简历*。\n- 体检，*喜提轻度脂肪肝与幽门螺杆菌感染*。吃药。\n- 翻译论文，写开题报告。\n\n### 三月\n\n- 开始在那一科技实(mo)习(yu)，基于React/Gatsby写一些简单的前端组件/逻辑。*重新认识软件工程*。\n- 准备毕设开题答辩。\n- 考研出分，*比复试线低两分*。仔细权衡后决定稍作休整，待毕业后从七月份开始准备二战。\n- *就业焦虑、学业焦虑、单身焦虑*。\n- 开始玩[『戴森球计划』](https://www.douban.com/game/35244867/)、[『怪物猎人：崛起』](https://www.douban.com/game/35206695/)。\n- 阅读书籍：任东来等[《美国宪政历程》](https://www.douban.com/people/156297062/status/3340114710/)。\n- 观看动画[『骚动时节的少女们啊』](https://www.douban.com/people/156297062/status/3753917943/)。\n\n### 四月\n\n- *感觉人生急转直下，继续为出路焦虑*。\n- 阅读书籍：森鸥外小说选集[《舞姬》](https://book.douban.com/subject/27074020/)、约翰·伯格[《理解一张照片》](https://www.douban.com/people/156297062/status/3413340399/)、梭罗[《瓦尔登湖》](https://www.douban.com/people/156297062/status/3386575205/)。\n- 观看动画[『BEASTARS 2nd Season』](https://www.douban.com/people/156297062/status/3413034862/)、[『宝石之国』](https://www.douban.com/people/156297062/status/3413039447/)、[『斩首循环 蓝色学者与戏言跟班』](https://www.douban.com/people/156297062/status/3413044686/)、[『为美好的世界献上祝福！』](https://www.douban.com/people/156297062/status/3413054908/)、[『DARLING in the FRANXX』](https://www.douban.com/people/156297062/status/3542519051/)\n- 观看电影[『扎克·施奈德版正义联盟』](https://www.douban.com/people/156297062/status/3413096740/)\n- *用生成随机数的方式过了哔哩哔哩软件开发岗的线上笔试编程题*。\n- 发现自己持有的Nintendo Switch游戏库存总价值已过万。\n- 在硬盘涨价前夕为自用的NAS购入了第二块大容量希捷酷狼机械硬盘，*数日后市售均价翻倍*。\n\n### 五月\n\n- 拿到数个银行相关IT岗位的OFFER，*觉得没有前途，全拒了*。\n- 面试携程，一面秒了算法题，和面试官谈笑风生。*一个月后发现被拒，理由：不适合相关岗位*。\n- 放弃走毕业签三方拿户籍（积分已达标），觉得读完研都会有的。*并在数个月后对此决定感到十分后悔*。\n- 参加了奖学金颁奖仪式，获得纪念证书一张。*来自母校的毕业前最后的赠礼*。\n- 阅读书籍：格拉宁[《奇特的一生》](https://www.douban.com/people/156297062/status/3446567464/)、朱自清[《欧游杂记》](https://www.douban.com/people/156297062/status/3451066523/)、尼尔·埃亚尔等[《上瘾》](https://www.douban.com/people/156297062/status/3429688807/)、坂口安吾[《盛开的樱花林下》](https://book.douban.com/subject/26890026/)。\n- 曾带领社团创办的校新生程序设计竞赛在去年因疫情延期了半年，但由于各种原因在这学期最终也没能举办。*遗憾，感慨天时地利人和之重要性*。\n- 炼丹。快乐毕设每一天。毕业论文查重重合率1%。\n- 完成小论文初稿，*然而发给指导老师审阅后石沉大海，可能写得实在太烂*。\n- 和好友一同前往参观[『上海自然博物馆』](https://www.snhm.org.cn/)。\n- 抢到了[上影节『EVA新剧场版』系列](https://kale1d0.space/experience-in-siff24/)的电影票，很开心。\n- 买下了胶佬同学自制的空洞骑士同人手办『残破容器：小骑士』。\n- 去看了岩井俊二[《情书》](https://www.douban.com/people/156297062/status/3449211393/)的重映，以及[《哆啦A梦：伴我同行2》](https://www.douban.com/people/156297062/status/3456948755/)。\n- 和好友去听了[『遇见新海诚』](https://show.bilibili.com/platform/detail.html?id=38468)，给[帝玖管弦乐团](https://space.bilibili.com/23793390)捧场。\n- 观看动画[『可塑性记忆』](https://www.douban.com/people/156297062/status/3457633553/)、[『小魔女学园』](douban.com/people/156297062/status/3425927311/)、[『爱，死亡和机器人 第二季』](https://movie.douban.com/subject/34418203/)。\n\n### 六月\n\n- 实习结束。毕业，被母校扫地出门。*毕业论文答辩期间和评委老师高强度对线*。拍毕业照，到处拉人合影。*小论文没有能够在毕业前发出去*。\n- 帮好友拼装积木玩具『「森宝积木流浪地球系列」CN171运兵车』。\n- 购入『ROG Zephyrus G14』上代顶配，*开机一小时不到蓝屏*。购入国产静音红轴三模键盘，*静音效果聊胜于无*。\n- 阅读书籍：刘夙[《植物名字的故事》](https://www.douban.com/people/156297062/status/3485728531/)。\n- 重新设计了自己卧室的布局。\n- 观看电影[『红辣椒』](https://www.douban.com/people/156297062/status/3464052539/)，二刷[『普罗米亚』](https://www.douban.com/people/156297062/status/3471069477/)。被好友拉去看了[『你好世界』](https://movie.douban.com/subject/30401194/)。\n- 在上影节期间观看电影[『福音战士新剧场版：Q』](https://www.douban.com/people/156297062/status/3476910036/)、[『福音战士新剧场版：破』](https://www.douban.com/people/156297062/status/3482274622/)、[『福音战士新剧场版：序』](https://www.douban.com/people/156297062/status/3482275097/)。\n- 观看动画[『来自深渊』](https://www.douban.com/people/156297062/status/3482278228/)、[『来自深渊：深魂的黎明』](https://www.douban.com/people/156297062/status/3488657365/)、[『无彩限的怪灵世界』](https://www.douban.com/people/156297062/status/3464052539/)。\n- 试玩游戏[『终焉之莉莉：骑士寂夜』](https://www.douban.com/game/35203617/)，*对萝莉女主向前扑倒式闪避感到大受震撼*。\n- *认识到自己的虚无主义倾向*。\n\n### 七月\n\n- *大 低 谷*。开始考研二战复习。\n- 阅读书籍：安德斯·艾利克森[《刻意练习》](https://www.douban.com/people/156297062/status/3510739860/)。\n- 通关游戏[『尼尔：机械纪元』](https://www.douban.com/people/156297062/status/3549552791/)（并购入其设定集）、[『心跳文学社』](https://www.douban.com/game/27166354/)、[『联邦控制局』](https://www.douban.com/game/30246114/)。\n- 预定黑胶唱片[『To Kill a Living Book -for Library Of Ruina-』](https://project-mili.bandcamp.com/campaign/to-kill-a-living-book-for-library-of-ruina-2)，*虽然并没有唱片机*。\n- 参观展览[『莫奈＆印象派大师展』](https://www.douban.com/event/33722648/)。\n- 观看动画[『新世纪福音战士』](https://www.douban.com/people/156297062/status/3505911466/)、[『新世纪福音战士剧场版：Air/真心为你 』](https://www.douban.com/people/156297062/status/3505911682/)。\n- 花了一天半的时间拼装[『RG EVANGELION PRODUCTION MODEL-02』](https://www.bilibili.com/read/cv6103412)，*然后发现自己并没有正确地使用附赠的水贴*。\n- 实现了一个简单的光追渲染程序。\n\n### 八月\n\n- 观看动画[『SSSS.电光机王』](https://www.douban.com/people/156297062/status/3542456047/)、[『续·终物语』](https://www.douban.com/people/156297062/status/3547797448/)、[『新·福音战士剧场版：终』](https://www.douban.com/people/156297062/status/3549081094/)、[『攻殻機動隊 STAND ALONE COMPLEX』](https://www.douban.com/people/156297062/status/3567750248/)、[『攻殻機動隊 S.A.C. 2nd GIG』](https://www.douban.com/people/156297062/status/3594530459/)。\n- 去影院看了[『乔西的虎与鱼』](https://www.douban.com/people/156297062/status/3560101769/)。\n- 和好友去人民广场地下的街机厅打了一下午[『WACCA』](https://zh.wikipedia.org/wiki/WACCA)。\n- 通关游戏[『健身环大冒险』](https://www.douban.com/game/34824349/)。*理论上燃烧了约2kg脂肪的热量，然而体重不减反增*。\n- 参观展览[『抽象艺术先驱：康定斯基』](https://www.douban.com/event/34192340/)、[『万物的声音』](https://www.douban.com/event/34422949/)。\n\n### 九月\n\n- 刷题。\n- 阅读书籍：西蒙娜·德·波伏瓦[《模糊性的道德》](https://www.douban.com/people/156297062/status/3565663151/)。\n- 开始玩[『健身拳击2 节奏与锻炼』](https://www.douban.com/game/35206697/)、[『瓦尔哈拉：赛博朋克酒保行动』](https://www.douban.com/game/26847236/)。\n- 将笔记本内存加装至40G，*现在可以愉快地十开VS Code了*。\n\n### 十月\n\n- 刷题。\n- 通关游戏[『女神异闻录5：皇家版』](https://www.douban.com/people/156297062/status/3638152261/)，云通关游戏[『审判之逝：湮灭的记忆』](https://www.douban.com/game/35455575/)。\n- 阅读书籍：J.D.塞林格[《麦田里的守望者》](https://www.douban.com/people/156297062/status/3626586022/)。\n- 观看电影：[『入殓师』](https://www.douban.com/people/156297062/status/3738147950/)、[『入殓师』](https://www.douban.com/people/156297062/status/3738147950/)、[『沙丘』](https://www.douban.com/people/156297062/status/3738155687/)、[『失控玩家』](https://www.douban.com/people/156297062/status/3738156192/)。\n\n### 十一月\n\n- 刷题。\n- 打卡[『Schindlers Tankstelle』](http://www.dianping.com/shop/kaUR6CiweYHblq3I)。\n- 观看动画[『双斩少女』](https://www.douban.com/people/156297062/status/3648544861/)、[『SSSS.古立特』](https://www.douban.com/people/156297062/status/3670901043/)。\n- 购入了一台圆刚CV710采集卡，*被迫花时间解决破音、帧丢失等各种疑难杂症*。\n\n### 十二月\n\n- 刷题。*第二次参加全国硕士研究生统一招生考试初试*。\n- 决定重回那一科技。<del>TODO: 《为什么我要回到那一科技》</del>（参见：王垠‌‌‍‌‍‌‍‍‍‌‌‌‌‌‌‍‌‍‌‍‍‌‌‌‍‍‍‌‍‍‌‌《为什么我要回到/离开/重回XX》。可惜完整原文在发布不久后即被作者删除，故不可考。）\n- 小区旁一再延期的[『十四号线』](http://service.shmetro.com/hcskb/index.htm?line=13)开通，*村里终于通了地铁*。\n- 开始在哔哩哔哩投稿自行录制的[『初音未来：歌姬计划』服装模组移植效果预览](https://www.bilibili.com/video/BV16R4y147mP/)。*然而投稿内容屡次被以“低俗色情”为由锁定*。\n\n## 2021个人年度总结\n\n### 最佳作品\n\n　　移植模组[\\[韶华旗袍\\] 再次再次沸腾 (PDM39)](https://www.bilibili.com/video/BV1PL4y1W7XS/)。这套服装模组的移植花了将近两天的时间，在移植过程中极大加深了对歌姬计划所使用的渲染引擎的理解。（TODO：写个自动化移植工具）\n\n### 高光与低谷\n\n　　这一年的年度高光时刻，毫无疑问是在毕业典礼结束后到处找人合影的那段时间。先前专门拍集体毕业照时，还沉浸在没过复试线的苦痛与反思之中，并没有意识到也许不久之后就很难和许多同学或是前辈再见一面了，等到回过神来时却只能扼腕叹息。所幸毕业典礼给了我另一次机会，让我能够实现愿望，*也让我重新意识到大学这四年以来所建立起的牵绊是多么厚重*。\n\n　　然而没过多久，低谷时期就到来了。毕业以后的七月，正式开始为第二次参加全国硕士研究生统一招生考试初试进行准备。而考研失败的痛苦在这个时候才真正完全涌现了出来。入夜后，时常会辗转反侧，梦到自己再一次乘坐校车前往奉贤，和好友一起清点竞赛队或是IT部的库存；亦或是又回到了徐汇校区的双创实践中心，坐在社团办公室轻抚那只无法紧闭嘴唇的黑猫。*也许只是难以抑制地回想起了许多被永远地留在了校园里的那些遗憾*。\n\n### 收获与展望\n\n　　当叩问自己这一年以来的收获时，竟会一时间当场愣住。从结果上看，考研初试失利，全情投入的毕业设计在答辩时被质疑工作量与成果，而自大创开始前就已经在构思的小论文直到最后也没能发表，只留下了一份草稿。失败一个接着一个袭来，打得我手忙脚乱、措手不及。所幸有着家人和诸多好友的支持，在最失意的那段时间里接触到了庵野秀明的作品并为之深受鼓舞，随后也发现了人道主义这一暂时的庇护所。总而言之，收获虽然不多，但也绝非虚度。\n\n　　虽然毕业前曾跟许多同学一样叫嚷着“去打工就输了！”，但终究没能免俗。接下来可能会先边做一些简单的工作边休息一阵子，也许是一年，也可能会更久。毕竟依然需要为大踏步朝理想迈进积累一些资本。\n\n　　很喜欢之前查题解时在某位大佬博客中看到的一句格言：“尽管我们未必能走最短路，但人生依然是个连通图。”\n\n　　共勉。\n\n　　2022年2月11日，于住所\n","tags":["破事水"]},{"title":"第二十四届上海国际电影节观影回顾","url":"/experience-in-siff24/","content":"\n# 引言\n\n　　在经历了去年睡过头因而完美错过上海电影节（SIFF）的开票时间只能眼巴巴看着其他网友跑去看今敏的代表作之后，今年很早就开始关注SIFF的消息。虽然今年动画排片阵容不如去年，但EVA新剧场版系列这样的重量级动画在国内的展映依然是不容错过。\n![](/uploads/experience-in-siff24/tickets.jpg)\n<center><b>『新世纪福音战士新剧场版：序/破/急』电影票合集</b></center>\n<!--more-->\n\n　　当天正好是拍毕业照的时间，于是早上六点多就起来给手机充电，七点半左右就跑到学校大草坪然后打开淘票票一直刷，顺便提醒身边的EVA厨来跟我一起抢票。八点整系统开票，头两分钟根本刷不出来，还好之后服务器恢复响应，我也抢到了一张SFC上海影城的EVA：Q。上午拍完了毕业照，跑去食堂吃饭时刷手机看朋友圈发现十二点整还会再开抢一轮票，场次也包括一些其他影院的EVA展映排片，于是又抢一轮，抢到了虹桥艺术中心的EVA：序。之后心想，既然都有两张票了，花点钱再收一张票把三部曲全补~~完~~上岂不是美哉，于是又上闲鱼加了二十块钱收了一张FANCL艺术中心的破。至此，EVA新剧场版的票全部收齐（当然不包括刚刚上映才没几个月的EVA终），也开始了我的本次上海电影节之旅。\n\n# 观影感受\n\n　　由于抢票过程（以及各种其他不可控因素），我买的票分别属于三个不同的剧场，且观看的时间顺序正好与三部曲的发布顺序相反（实际观影顺序是Q->破->序）。在这之前，我虽然没有完整看过新剧场版，但是多少被身边的EVA厨传教过（当然包括新老剧场版和TV版的剧情），自己观影前也简单了解过一点。然而实际去电影院看完整部作品，才深刻地感受到破碎的印象与真正作品之间的差距。**无论如何，在电影院看而非盯着显示器才是最适合电影（当然也包括动画电影）的观赏方式。**\n\n![](/uploads/experience-in-siff24/3.jpg)\n<center><b>『新世纪福音战士新剧场版：急』（即EVA:Q），摄于SFC上海影城</b></center>\n\n　　新世纪福音战士新剧场版：急（Q）是新剧场版系列里最激进的一部。影片开场，明日香驾驶着二号机与人工使徒的作战场景，激烈精彩的打斗画面配合着坂本真绫的清唱与俏皮的表现一下就把气氛带了起来。影片的情节也随之急促推进，引领着如同真嗣一样一头雾水的观众一同探索这个残破世界的真相。全员谜语人的行为，多次刻意展现出的贫穷气息，明日香帅气的战斗、愤怒与吐槽，绫波的“我不知道”，真嗣的愤怒与懊悔，薰与真嗣的四手联弹，第四次冲击发动后渚薰自愿代替真嗣死亡的献身……这些名场景一个接着一个出现，令人目不暇接。\n\n![](/uploads/experience-in-siff24/lian.jpg)\n<center><b>看完EVA:Q时我的真实心理感受</b></center>\n\n　　电影节的氛围还是非常好的，至影片放映结束，全体观众一共鼓掌了三次：影片正片结束后“未完待续”出现时大家开始鼓掌，职员表滚完出现『总监督 庵野秀明』时大家再一次鼓掌，最后EVA终的预告片播放完后大家又默契地再一次鼓掌。\n\n　　与Q莫名其妙的剧情走向和苦大仇深的世界背景不同，破和序还是都比较接近TV版的刻画（序甚至几乎没有什么改动）。破和序也有许多名场面，比如明日香与真希波的出场，绫波丽向碇源堂邀请聚餐，拼命想要拉出出绫波丽的真嗣，以及更早的绫波丽抢眼镜的场景，还有片尾大战结束后被真嗣救出时的微笑。相比之下，使徒才刚刚登场的EVA序的整体氛围要更轻松得多，而EVA破的剧情走向与情绪渲染则更加感人。\n\n![](/uploads/experience-in-siff24/2.jpg)\n<center><b>『新世纪福音战士新剧场版：破』，摄于FANCL艺术中心</b></center>\n\n![](/uploads/experience-in-siff24/1.jpg)\n<center><b>『新世纪福音战士新剧场版：序』，摄于虹桥艺术中心</b></center>\n\n　　序与破放映结束后当然也少不了观众的掌声。除此之外，在一些比如“爱情和性别无关”这样的名台词和绫波丽的微笑、渚薰安慰鼓励真嗣这样的场面下，大家也都会鼓掌或是哄笑。\n\n# 尾声\n\n　　总而言之，本次上影节中EVA剧场版的展映让勉强可以算作是动画爱好者的我十分满足，也抚慰了我那被毕设搞得身心俱疲的心灵。已经在大银幕上看完了EVA新剧场版的前三部，第四部《新·福音战士剧场版：终》的蓝光也将在今年年末发售，希望明年电影节能有机会看到展映。痞子憋了9年的EVA新剧场版收尾篇最后还是完结并上映了，正如我们的青春，也终有一天会以意料之外的方式被补完。\n","tags":["阅读"]},{"title":"在Naive Systems实习的这四个月","url":"/internship-in-naive-systems/","content":"\n**前情提要**：笔者就读于华东理工大学计算机科学与技术专业，即将毕业。\n\n# 前言\n\n　　时值21年2月中旬，此时春节假期刚刚过去，距全国硕士研究生统一招生考试初试也已经两月有余。由于在初试中数学科目失利，一方面需要花一些精力准备复试，另一方面也要考虑到存在没有通过初试的风险，在焦急等待着复试分数线的我决定开始寻找一份能让我在大四下学期即不太忙（以至不影响复试的准备与后续的毕设工作）也不太闲（以至在未能进入复试的情况下能为这一学期的生活托底）的实习工作。<!--more-->\n\n　　综合考虑可以接受的地理位置、实习时长与薪资，在实习僧平台上过滤检索出符合条件的岗位后，一共向五个企业发出了求职申请。在一周内拿到了两个前端开发实习的Offer（投的后端实习岗位全部挂在简历关上，反思下来感觉可能是Python在后端开发领域确实不怎么受待见吧）：一个是生物制药相关的IT系统开发，另一个则是基础软件开发。其实从工作内容上来看，我最初并没有什么倾向性，但是考虑到前者不包午饭所带来的额外支出（而且工作地点还是在环球港这样的高消费水平商圈），而且不想再浪费时间继续投简历面试，最终还是选择了后者。\n\n　　就这样，21年3月1日，我来到零号湾，开始了在Naive Systems为期四个月的实习生活。\n\n![](/uploads/intern-in-naive-systems/card.jpg)\n<center><b>零号湾的门卡</b></center>\n\n# 第一个月\n\n```\n55 Patchsets Created/Updated\n12 Patches Merged\n17 Patches Abandoned\n(cr/158 - cr/227)\n```\n\n> Programs must be written for people to read, and only incidentally for machines to execute. ―― Harold Abelson, *Structure and Interpretation of Computer Programs*\n\n　　入职后见到的第一位同事（后来才知道是我的Manager，前后端全栈巨能肝的大佬Nagi）上来先花了半个小时向我介绍了公司办公室文化平等开放包容的特点，强调了交流的重要性，并旗帜鲜明地表达出对于办公室政治的厌恶（听上去似乎是有过非常糟糕的相关经历），随后给了我一个简单的Reading List，其中包含了在开发过程中我所必须掌握的内容。\n\n　　我的工作职责主要是在Gatsby/React框架下编写TypeScript代码以实现前端逻辑和样式。所幸由于先前参与过以react-native为基础的商业项目，在交互逻辑的实现上基本没有什么需要现学的内容。但是之前确实没有过参与大型项目，也没有过互相进行代码审核的经历，因而写出来的代码比较随性，对于提交、分支等概念的认识也比较肤浅。因此，第一个月的主要工作内容是熟悉项目源码结构以及适应公司的团队协作工作流，并逐渐培养出良好的编码习惯。\n\n　　**实习形式的选择** 自实习伊始，我就被询问，是更倾向于完成一个独立的较为复杂的功能或者项目，还是倾向于在已有的项目代码上到处打补丁。我更倾向于后者，因为作为实习生来说，前者的成品很可能在实习结束后就被废弃，而后者的情况下提交的改动会在代码库中留存地更久一点。而且后一种方式也会迫使自己尽快熟悉公司已有代码的结构和特点，以使得自己的提交能够更快地通过代码评议。\n\n　　**Merge工作流与Rebase工作流** 在软件工程课上，我所参与的五人小组也曾使用Git作为版本控制工具进行协作开发。当时，由于缺乏对于工作流的清晰认识，只是照着手册上的说明与对多分支开发的模糊理解，下意识地使用了Merge工作流。修改代码，创建提交，然后推到远程分支。如果发现冲突了，则先拉取远程分支的代码，手动Merge一下，再推上去。尽管这样的工作流在功能性上并没有任何问题，但后果是主分支的提交记录非常的“脏”——有一小半内容都是没有什么实际价值的Merge Commit。Rebase工作流的优点是能够在主分支上保持清晰的、线性的提交记录，而且不需要创建Merge Commit。然而对rebase指令的不合理使用\"can be potentially catastrophic\"。需要注意是，不应该将本地主分支上的提交rebase到其它本地分支的顶端。这会导致本地主分支的历史与其他开发者不同。此时，对本地于远程主分支进行同步或者说合并就会非常麻烦而且令人困惑。不过，只要遵守上述规则，在熟悉之后也会觉得Rebase工作流实际上非常直观易懂。后来，我也从在其他企业实习的同学那里得到确认，在实际工程项目中，主要使用的还是Rebase工作流。\n\n　　第一个月的工作内容比较杂，具体包括：给一部分页面加上i18n (cr/158, cr/159)，修改CR列表页面的样式 (cr/162, cr/173)，修改CR页面的样式 (cr/177)，增加客户端命令提示面板 (cr/187)，在评论文本中识别URL并自动转化为超链接 (cr/190)，令回复按钮在点击后不重复响应用户点击 (cr/195)，高亮行末空格 (cr/201)、为后端容器编写测试用例 (cr/205，未完成) 等。\n\n# 第二个月\n\n```\n45 Patchsets Created/Updated\n15 Patches Merged\n22 Patches Abandoned\n(cr/230 - cr/277)\n```\n\n> Beware of bugs in the above code; I have only proved it correct, not tried it. ―― Don Knuth, *The Art of Computer Programming*\n\n　　与第一个月相似，第二个月的大部分时间也主要在现有项目中实现各种功能。但从第二个月的下旬开始，我被安排了一项（几乎是）独立负责的工作：用前端框架重新实现主站的界面原型。由于我并没有从零开始建立Gatsby项目的经验，于是又跑去啃官方文档。好在啃到一半时Nagi来帮我初始化了项目的目录结构和基本框架，使得我避开了很多本可能会遇到的坑，也了解到许多构建产品级前端项目时需要关注的细节。\n\n　　**界定影响的边界** 在本月的工作过程中，我负责实现的按C键对选中行进行评论功能存在一个明显的BUG，但是在自己开发测试时并没有发现，改动内容也顺利通过了代码评审，直到部署上线连接到生产环境后被其他同事触发时才被发现。具体来说，由于忽略了事件冒泡所产生的影响，对于按键事件的捕获会在本应停止时依然发生，一方面会出现非预期的行为，另一方面原本试图输入的内容也会收到影响。虽然这个问题在发现后很快就被用一行代码修复了，却也警醒了我，在为复杂系统增加功能时一定要先考虑清楚修改所带来的影响的边界。\n\n　　**本地多分支开发与本地单分支开发** 在第一个月中，我的开发方式主要是本地多分支开发，即以远程主分支作为唯一上游分支，开出多个互相独立互不影响的分支。这种开发方式的优点是同时进行的多个工作内容不会因为代码审查互相阻塞，缺点则是需要思考并维护各个分支的无关性，而且本地开发分支的进度常常会被阻塞，否则在不同分支的代码进入主分支前可能需要自己再手动在本地合并各个分支之间的冲突。但是在后来，Nagi向我介绍了一种更加高效的开发方式，本地单分支开发，也即把所有功能分支以单链的形式挂在远程主分支之后，需要提交时再cherry-pick拆成小分支，或者直接分段提交。优点是由于开发时不用考虑维护分支之间的冲突，本地开发效率会得到很大的提升，而缺点也很明显，原本本地开发效率上存在的阻塞过程会转移到代码评议的过程中（因为提交的Patchset之间可能会存在依赖关系，因而某个Patchset的修改会使之后的所有Patchset全被阻塞）。\n\n　　这个月的具体工作主要包括：为Api层调用加入上下文以捕获异常 (cr/230)，按C键在选中行上评论 (cr/232)，储存列表的折叠状态至本地 (cr/240, cr/265)，绘制出组件的基本样式 (cr/258)，将页面原型用react实现 (cr/275, cr/277) 等。\n\n![](/uploads/intern-in-naive-systems/snacks.jpg)\n<center><b>Micro Kitchen一隅（甚至让我一度以为公司里有位俄罗斯程序员）</b></center>\n# 第三个月\n\n```\n29 Patchsets Created/Updated\n25 Patches Merged\n12 Patches Abandoned\n(cr/283 - cr/352)\n```\n\n> What you see is all you get. ―― Brian Wilson Kernighan\n\n　　从第三个月开始，主站界面的构建与样式调整成为了我的主要工作内容。虽然很早之前就了解过React/Material-UI中使用样式的方法，也系统学习过CSS，但在实际日常应用中由于通常是直接使用了带样式的组件库（比如antd），对于样式和布局相关细节的记忆早就模糊了。因此在这个月里也读了许多和Flex、Grid等布局方式以及各种样式生效原理相关的文档。\n\n　　**样式调整的法则与布局的逻辑** 首先是尽量不要用内嵌样式。内嵌样式会提高代码的耦合性，让样式的变更变得难以维护。接着，尽量不要使用高阶组件。高阶组件的主要缺点是，难以从外部变更组件的样式（会被组件内部行为覆盖）。另外，相同或相关的参数应该尽量转移到主题选项里，比如spacing和color等属性。在布局上，应该优先倾向于选择FlexBox，其相对于Grid或者Table都更加灵活（当然，其布局逻辑也因此略显复杂）。在布局的过程中，也尽量少用固定的长宽度以使得组件能够根据页面的大小自行调整尺寸，也即充分运用Material-UI/CSS所具备的Responsive特性。\n\n　　**前后端分离的影响** 引入前端框架通常意味着前后端分离开发的开始。尽管能对系统结构进行有效的解耦，前后端分离开发也会引入一些额外的问题，比如跨域请求的处理，前端回调地址的设置，以及不同前端实例需要针对不同后端分别部署等等问题。在开发过程中，曾遇到过一个神奇的案例：某个前端跳转至特定页面的功能在测试环境下有效，但到了生产环境时就失效了，会跳转至一个空白页面。经过排错分析，发现其实是在跳转时使用了前端路由的原因：在开发环境下，所使用的地址会被代理中间件响应，并被正确代理。但在生产环境下，由于使用了前端路由的跳转方式，框架会认为程序试图跳转至相应地址的前端页面（而非直接访问该地址），因而会在前端程序中尝试寻找对应地址的页面，当然就会一无所获而呈现出空白。解决方式也很简单，强制浏览器跳转到该地址即可。这次排错经历提醒了我，在实际开发过程中要仔细考虑前后端分离带来的影响，以及要关注开发环境与生产环境存在的差异。\n\n　　这个月的具体工作包括：调整主页前端的各种样式与部分逻辑 (cr/283, cr/295, cr/323, cr/324, cr/346, cr/352)与一些功能的修复 (cr/325) 等。\n\n# 第四个月\n\n```\n20 Patchsets Created/Updated\n19 Patches Merged\n1 Patch Abandoned\n(cr/360 - cr406)\n```\n\n> It's not only the dev schedule either. Don't believe anything dependencies say――ever. If they are in the next room and tell you it's raining, check your window first. ―― Eric Brechner, *I. M. Wright's \"Hard Code\"*\n\n![](/uploads/intern-in-naive-systems/mtb.jpg)\n<center><b>黄金体验镇魂曲：永远无法达到的真实（截止本文成稿，曾被宣称将在五月初发布的公司主要产品仍处于开发阶段）</b></center>\n\n　　在实习的第四个月，我需要抽出一部分时间来进行毕设论文的编写与答辩，因而留给实习工作的时间也减少了一些。在本月中，我的主要工作内容是继续根据UI/UX提供的样式设计稿与交互流程图来修改主页前端。\n\n　　**前端开发的本质** 在开始实习之前，我曾天真地以为前端开发所要做的工作十分简单，无非让数据在特定的时机出现在合理的位置，其本质上是一个Mapping或者说Binding的过程。但经历了这段时间里在in-the-wild环境下的前端开发工作之后，现在我对前端开发的认识发生了变化：前端开发是人机交互逻辑的实现，一方面需要向UI/UX负责以实现出合理的用户体验，另一方面又要充分考虑机器本身的特性，踏入UI/UX所看不到的、属于机器的隐秘之地（比如解决不同浏览器的各种实现标准带来的差异），因而其工作内容实际上更像是一个协调者的存在。\n\n　　**控制复杂性** 控制复杂性有着多个层面的含义，比如控制功能开发阶段的复杂性，控制程序行为的复杂性，控制程序后期维护的复杂性等等。这些不同方面往往还是互相矛盾的，比如某些代码段可能开发时刻意压行，写起来觉得代码段很短很舒服，但在维护时可能会遇到错误产生的具体位置模糊不清难以追查的情况；又比如实际工程项目中其实是希望变量名称越详尽冗长越好，因为这样会减少和其他代码中的变量同名的概率，能够大大减少维护期的排错成本。一般来说，复杂性不会凭空消失，只会在不同形式之间转移，因此如何进行取舍让复杂性尽可能平摊在各个阶段或是集中在某些阶段就成了非常有价值的问题。对于实习期间我所参与的以服务形式提供支持的软件产品来说，维护阶段显然要长于开发阶段，因而将复杂性从维护阶段转移至开发阶段会是更好的选择。\n\n　　这个月的具体工作包括：继续调整主页前端的各种样式与部分逻辑 (cr/360, cr/366, cr/367, cr/371, cr/397, cr/399, cr/406) 等。\n\n# 总结\n\n　　四个月的实习时间转眼间进入了尾声，这段经历也给我带来了许多收获。在实习过程中，我见证并参与了大型软件的开发流程，熟悉了目前最scalable的现代软件开发方式，结识了一群在FAAG待过的经验丰富而老练的开发者，并充分浸润在了工程师文化之中。这些经历都使我对软件工程的理解产生了很大的提升，也远远超过了我对实习的预期。虽说软件工程“没有银弹”，但我相信精心设计的合理的工作流与易用的基础设施能够在某种程度上有助于简化软件开发的复杂性，从而提升软件整体质量。\n\n　　这段实习的经历同时也让我充分意识到了自己的编程能力、工作效率和代码习惯与核心开发者之间的差距，并坚定了我继续深造的信念。人一生要工作五十年，拿出几年时间读个研提升下自己的能力和对技术与工程的理解、满足下自己的追求又会有什么损失呢？\n","tags":["破事水"]},{"title":"绘画习作 2021-02-08 Lily","url":"/painting-exercise-lily-2021-02-08/","content":"\n![](/uploads/painting-exercise-lily-2021-02-08.png)\n\n（临摹自《线语集——唯美线稿插画实例教程》）\n","tags":["绘画习作"]},{"title":"PyProtobufBot QQ机器人框架新手指南","url":"/beginners-guide-for-pypbbot/","content":"\n**此文章内容已过期且不再更新，烦请移步至[PyProtobufBot 文档首页](https://pypbbot.kale1d0.space)。**\n\n# 概览\n\n## 简介\n\n[PyProtobufBot](https://github.com/PHIKN1GHT/pypbbot)（简称 PyPbBot）是一个使用[Python 语言](https://www.python.org/)实现的，以面向大规模应用为目标的，易于上手与扩展且具有良好效率的[ProtobufBot](https://github.com/ProtobufBot/onebot_idl)协议[服务端](#clientandserver)实现。\n\n<!-- more -->\n\n> **注意：** 尽管 Python 是一门易于上手的编程语言，使用 PyProtobufBot 进行对话式机器人开发仍需要你对相关的基本概念有所了解。建议读者在阅读本文档前，基本了解 Python[语言参考手册](https://docs.python.org/zh-cn/3/reference/index.html)中的全部内容。\n\nPyPbBot 是一个以[FastAPI](https://fastapi.tiangolo.com/)为基础的[异步](https://www.ibm.com/developerworks/cn/linux/l-async/)框架，这意味着在源代码的执行过程中，不同[协程](https://docs.python.org/zh-cn/3/glossary.html#term-coroutine)之间可能会交替执行以提升整体运行效率。但与此同时，这也造成了即使在单线程开发的情况下，你仍需要花点额外的精力注意一下数据的同步问题。\n\n此外，PyPbBot 内置了一个简单而强大的插件引擎，能够支持以插件化的形式对功能进行渐进式扩展，而且支持热重载。未来，PyPbBot 还将会引入权限控制机制与会话机制，以进一步减轻开发者的抽象负担。\n\n受限于底层实现，PyPbBot 仅支持 Python 3.7 或更高版本。\n\n目前，本项目仍处于早期开发阶段，缺乏文档与测试用例，暂不建议应用于生产环境。\n\n## 安装方法\n\n在确保已经正确安装 Python 3.7 或更高版本后，只需在控制台或终端执行 `pip install --upgrade pypbbot` 即可安装本项目的最新版本。\n\n## 配置协议客户端\n\n本框架推荐使用的协议客户端: [Go-Mirai-Client](https://github.com/ProtobufBot/Go-Mirai-Client)\n\n首先，下载协议客户端并按照文档对其进行编译，随后在控制台中执行以下代码以设置环境变量：\n\nWindows 下：\n\n```bat\nset UIN=QQ号\nset PASSWORD=QQ密码\nset WS_URL=ws://localhost:8082/ws/test/\n```\n\nLinux 下：\n\n```bash\nexport UIN=QQ号\nexport PASSWORD=QQ密码\nexport WS_URL=ws://localhost:8082/ws/test/\n```\n\n随后，启动协议客户端，按照控制台输出的提示对 QQ 账户的登陆进行验证，当登陆成功后，它就能够与服务端进行交互。注意，服务端与客户端启动的先后顺序是没有影响的。\n\n## 快速上手\n\n首先，让我们从一个简单但具有代表性的例程开始：\n\n```python\nfrom pypbbot import app, run_server, BaseDriver\nfrom pypbbot.protocol import PrivateMessageEvent, GroupMessageEvent\nfrom pypbbot.utils import Clips, LazyLock, sendBackClipsTo\nfrom typing import Union\nimport asyncio\n\ni, lock = 0, LazyLock()\nakkarin_url = 'https://img.moegirl.org.cn/common/thumb/b/b7/Transparent_Akkarin.jpg/250px-Transparent_Akkarin.jpg'\n\nasync def sayHello(event: Union[PrivateMessageEvent, GroupMessageEvent]):\n  global i, lock\n  with await lock.try_lock(): # 加异步锁\n    await sendBackClipsTo(event, 'Hello, world! x {}'.format(i))\n    await asyncio.sleep(1)\n    await sendBackClipsTo(event,\n    Clips.from_image_url(akkarin_url) + '\\n\\阿卡林/\\阿卡林/\\阿卡林/')\n    i += 1\n\nclass SimpleDriver(BaseDriver): # 驱动器类\n  async def onPrivateMessage(self, event: PrivateMessageEvent):\n    if event.raw_message.startswith('#hello'):\n      await sayHello(event)\n\napp.driver_builder = SimpleDriver # 注册驱动器\n\nif __name__ == '__main__':\n  run_server(app='__main__:app', host='localhost', port=8082, reload=True)\n```\n\n将以上代码保存为.py 后缀的源代码文件，在确保正确安装本项目后执行它（记得也要按上一节的说明启动客户端程序），我们就启动了一个对话式 QQ 机器人。试着通过 QQ 对其发送`#hello`后，它就会回复我们一些文字和图片，其中包含了一个记录着已回复次数的全局变量。\n\n## 发生了什么？\n\n在此例程中，类`SimpleDriver`描述了机器人的全部行为：在收到私聊消息后，对消息文本内容的前缀进行判断，如果前缀以`\"#hello\"`开头，那么执行异步函数`sayHello`并等待其结束。在`sayHello`函数的执行过程中，协程首先尝试了获取变量`i`的异步锁，也即调用`lock.try_lock`。这一步加锁的过程，确保了不同协程对于`i`的修改过程是原子性的。 _（这也意味着，在处理多个消息时会诞生多个协程。）_\n\n向 PyPbBot 注册[驱动器](#driver)类`SimpleDriver`后，只需要调用`run_server`函数即可启动服务。\n\n这个例程仅展示了使用 PyPbBot 的基本方法之一，也即类驱动器法。相信有经验的读者会发现，这种方法固然清晰直观，却难以胜任项目的扩展。因此，实际开发过程中，建议使用更灵活的事务驱动器法。不过，这需要读者对事务等基本概念有所认知。因此，在开始文档的主体部分前，不妨先了解一下一些基本的概念。\n\n# 基本概念\n\n## 客户端与服务端\n\n在早期的 QQ 机器人开发技术中，许多框架曾采用类似酷 Q（CoolQ）的设计方案，也即 **使用一个支持插件化的机器人程序来登录某一特定 QQ 账户以提供服务** 。这种设计方案固然清晰直观，但当需要通过大量 QQ 账户来提供统一的服务时，其弊端就显露了出来： **插件的编写者将不得不自行处理进程间的同步与数据通信等问题，而这类工作对于编程初学者来说往往繁琐易错** _（对于某些经验丰富的开发者来说亦是如此）_。因而，另一批以[NoneBot](https://github.com/nonebot/nonebot)、[ProtobufBot](https://github.com/ProtobufBot/onebot_idl)等为主的框架则采取了相反的设计思路试图解决这个问题： **由支持插件化的框架本身作为服务端，来与多个登陆了某一特定 QQ 账户的客户端程序进行通信** ，从而简化了许多原本需要插件编写者进行处理的繁琐工作。这一思路的转变， **极大降低了插件开发者们编写大规模服务程序的难度，也有效提升了整个系统的可扩展性与可维护性** 。本框架亦采用了这样的设计方法。\n\n也即是说，在本文以及所有[ProtobufBot](https://github.com/ProtobufBot/onebot_idl)相关的所有文档中，我们把 **仅仅实现了 QQ 的消息收发等协议层功能的程序** 称为机器人的 **客户端（Client）** ，而把 **负责处理业务逻辑的程序** 称为机器人的 **服务端（Server）** 。\n\n## 应用程序编程接口、事件与消息\n\n在本文（以及[PyProtobufBot 文档](https://github.com/PHIKN1GHT/pypbbot)）中，如若不加说明， **应用程序编程接口（API）** 、 **事件（Event）** 与 **消息（Message）** 的定义皆来自于 **协议层** （也即[ProtobufBot](https://github.com/ProtobufBot/onebot_idl)）。简单的说，在协议层一共具有两大类协议，其一是类似于[远程过程调用（RPC）](https://en.wikipedia.org/wiki/Remote_procedure_call)的协议，通常用于 **让服务端向客户端发出请求** ，且发出后 **都会收到来自客户端的响应** 以确认请求被成功执行，比如发送私聊或是群聊消息，这一类协议被称为 **应用程序编程接口（API）** ；而另一类协议用于 **让服务端能够被动接受来自于客户端的消息** ，比如当收到私聊消息或好友请求时能够对其进行处理，这一类协议被称为 **事件（Event）** 。 **消息（Message）** 则是一种协议层上的复合数据结构，其 **描述了一段或多段 QQ 消息的内容**（除了文本消息外，还支持图片、语音等[富文本格式](https://en.wikipedia.org/wiki/Rich_Text_Format)）。协议层除了以上三种结构外，还有另一种 **用于数据封装** 的 **数据帧（Frame）** 结构，不过这一结构对于插件开发者是透明的，一般不用考虑。\n\n> **注意：** 一般情况下，我们认为事件是一个 **只读** 的数据合集。\n\n在使用 PyPbBot 开发的过程中，既可以直接对以上三种结构进行操作，也可以使用 PyPbBot 提供的简单封装。相对来说，后者更加简洁易用。\n\n以上结构定义于源代码的`pypbbot.protocol`与`pypbbot.typing`包中。\n\n<h2 id=\"driver\"> 驱动器</h2>\n\n**驱动器（Driver）** 是本框架的核心概念之一，其含义是指 **负责与客户端进行交互的对象** 。注意，这里的对象即可以是面向对象编程中的术语，也 **可以是一个高阶函数** 。默认情况下，PyPbBot 会 **为每个客户端创建一个驱动器对象，并为每个事件启创建一个新的协程** 。\n\n> **注意：** 当需要使用唯一全局驱动器时，一般推荐使用高阶函数，或着使用单例模式（即修改类的定义为`class AffairDriver(BaseDriver, metaclass=SingletonType)`，其中`SingletonType`位于`pypbbot.typing`模块内)。如果需要对驱动器的构造行为进行灵活的限制或处理，则只需重载 `__new__` 函数即可。\n\n## 事务、过滤器与处理程序\n\n前文中，我们有提到事件应该是一个状态不可变的结构。但是在处理事件的过程中，我们常常会希望能够 **将某些操作或者可变的状态与不可变的事件进行绑定，以方便对事件进行阶段化的、模块化的处理** 。 **事务（Affair）** 正是这一目的的体现。事务即是事件的封装，通常来说事务以事件为基础，且其生命周期通常会略长于事件。\n\n**事务处理程序（Handler）** 则是 **用于处理事务的函数** 。一般来说，事务处理程序需要与某个 **事务过滤器（Filter）** 绑定。当过滤器对事务返回真值时，表明该事务可被事务处理程序处理。而且，事务处理程序具有优先级。优先级越高，则事务处理程序会更早的接收到这个事务。\n\n# 插件化开发\n\n插件化开发，也即 **使用事务引擎** 进行开发，是面向大规模应用的基础。相比类驱动器或高阶函数驱动器模式，这种方法更加简便灵活，易于扩展。\n\n## 使用插件驱动器\n\n使用插件化开发的第一步，是将默认的驱动器更换为插件驱动器，也即编写以下代码：\n\n```python\nfrom pypbbot import app, run_server\nfrom pypbbot.driver import AffairDriver\n\napp.driver_builder = AffairDriver\napp.plugin_path = 'plugins'\n\nif __name__ == '__main__':\n    run_server(app='__main__:app', host='localhost', port=8082, reload=True)\n```\n\n将这段代码保存为.py 文件后，运行它，程序会自动在同级目录下创建以`'plugins'`命名的文件夹，这既是插件目录。\n\n> **注意：** 当`run_server`函数的`reload`参数被设为真值时，框架会开启守护线程，自动监视插件源代码目录的变动情况，并进行重载。在插件目录内创建任意.py 文件，即可创建一个插件。一般情况下，PyPbBot 插件即是一个 Python 模块。\n\n## 注册事务处理程序\n\n通过使用注册函数`onStartsWith`，我们可以轻易编写出与前文例程具有相同功能的插件。该注册函数会将特定的事务处理器（即本例程中的`say_hello`函数）与内置的消息前缀检查过滤器所绑定，因而当机器人收到符合条件的消息（也即以`#hello`作为前缀的消息，无论群聊或私聊）\n\n```python\nfrom pypbbot.affairs import BaseAffair, ChatAffair, onStartsWith\nfrom pypbbot.utils import Clips, LazyLock\nfrom pypbbot import logger\nimport asyncio\n\ni, lock = 0, LazyLock()\nakkarin_url = 'https://img.moegirl.org.cn/common/thumb/b/b7/Transparent_Akkarin.jpg/250px-Transparent_Akkarin.jpg'\n\n@onStartsWith('#hello')\nasync def say_hello(affair: ChatAffair):\n    global i, lock\n    with await lock.try_lock():\n        await affair.send('Hello, world! x {}'.format(i))\n        await asyncio.sleep(1)\n        await affair.send(Clips.from_image_url(akkarin_url) + '\\n\\阿卡林/\\阿卡林/\\阿卡林/')\n        i += 1\n```\n\n常用的注册函数还包括`unfilterable`（捕获任意事务），`onMessage`(捕获任意消息事务)，`onEndsWith`(捕获任意消息事务并检查后缀），`onPrivateMessage`(捕获任意私聊消息事务)，`onGroupMessage`(捕获任意私聊群聊事务)\n\n## 消息生成\n\n直接调用协议层的`Message`类生成消息即繁琐又容易出错，因而 PyPbBot 提供了一个简单的工具类，也即`pypbbot.utils.Clips`类。该类可直接与原生字符串对象或是数值对象混用，也可以用来生成富文本内容。下面是一些具体的例子：\n\n```python\nfrom pypbbot.utils import Clips\n\ndef test_clips_add():\n    a = Clips.from_str('aA')\n    b = Clips.from_str('bB')\n    assert str(a + b) == 'aAbB'\n    assert str(123 + b) == '123bB'\n    assert str(b + 0.0) == 'bB0.0'\n    assert str('str' + a) == 'straA'\n    a = Clips.from_image_url(akkarin_url) + 'asd'\n    msglst = a.toMessageList() # 生成消息序列，可以直接用于协议层对象。\n```\n\n## 指定优先级\n\n尽管事务本身并不具有优先级，我们可以为事务处理程序指定优先级。高优先级的事务处理程序将会被优先调用。指定优先级的方式也很简单，只需在文件头部加入`from pypbbot.affairs import HandlerPriority`，随后为注册函数增加参数，比如说将上例对应行`@onStartsWith('#hello', priority = HandlerPriority.HIGH)`即可。\n\n> **注意：** 可以被插件使用的事务处理函数优先级一共分为五档，从高到底分别为 VERY_HIGH, HIGH, NORMAL, LOW, VERY_LOW。另外，还存在着高于所有优先级的 SYSTEM 级。一般来说，该优先级不应该被插件使用。\n\n## 主动调用\n\n如果我们需要编写一个能够主动向用户发送消息的机器人，比如说用于整点报时，或是消息推送，那么最基础的方式是调用`pypbbot.server.send_frame`函数。只需构造任意一个`pypbbot.protocol.onebot_api_pb2`的对象（通常以 Req 结尾，如`SendPrivateMsgResp`），就可以直接控制机器人的行为，具体样例如下：\n\n```python\nfrom pypbbot.protocol import SendPrivateMsgReq, PrivateMessageEvent, GroupMessageEvent, SendGroupMsgReq\nasync def sendBackClipsTo(event: Union[GroupMessageEvent, PrivateMessageEvent], clips: Union[Clips, str, int, float]):\n  clips = Clips() + clips\n  api_content: Optional[Union[SendPrivateMsgReq, SendGroupMsgReq]] = None\n  if isinstance(event, PrivateMessageEvent):\n    api_content = SendPrivateMsgReq()\n    api_content.user_id, auto_escape = event.user_id, True\n  elif isinstance(event, GroupMessageEvent):\n    api_content = SendGroupMsgReq()\n    api_content.group_id, auto_escape = event.group_id, True\n  api_content.message.extend(clips.toMessageList())\n  return await pypbbot.server.send_frame(event.self_id, api_content)\n```\n\n> **注意：** `pypbbot.server.drivers`储存了所有客户端 ID 至对应驱动器的映射，如果需要知道有哪些客户端已连入，则可以直接像使用原生字典类型那样调用其`keys`方法。\n\n## 预加载、加载与卸载\n\n插件的加载可以分成两个阶段：预加载与加载。前者类似 Python 的模组导入，后者则是在所有插件加载完成后创建的事务。一般来说，建议在加载而非预加载阶段初始化插件的行为（即使用`onLoading`注册器）。具体样例如下：\n\n```python\nfrom pypbbot.affairs import onLoading, onUnloading\n\n@onLoading() # 插件加载时触发\nasync def _loading(affair: BaseAffair):\n  logger.debug('Counter plugin has been enabled! ')\n\n@onUnloading() # 插件卸载时触发\nasync def _unloading(affair: BaseAffair):\n  logger.debug('Counter plugin has been disabled! ')\n\n```\n\n> **注意：** 跨插件调用不应在预加载阶段进行，因为此时目标插件可能未被载入。\n\n（未完待续）\n","tags":["pypbbot"]},{"title":"研究日志（二零一九年九月）","url":"/research-log-2019-09/","content":"\n更新：毫无进展，已经停更。\n\n这是一篇会定期更新的研究日志，用于记录自己的失败过程和痛苦的经历。一方面用以自诫，另一方面也希望能帮助未来的研究者们少走一些弯路。<!--more-->\n\n---\n\n2019-09-21\n\n在油条的帮助下用再生龙成功实现 Intel 600P 到 SN 500 的无痛迁移，更改了缓存结构\n\n加速比达到了 1.28\n\n继续攒钱买内存条\n\n---\n\n2019-09-20\n\n睡前看到有朋友转发内容\n\n> 我没有女人。这世界上有无数的女人，但是一个都不是我的。她们会笑，会骂，会娇嗔，会羞怯——但是不会爱我。\n\n> 我没有女人可以抱，我像老鼠一样窃闻她们路过时捎来的香风。我想做一支女人抽的烟，她们脂白细腻的手捏着我，送进丰腴柔软的嘴唇中间。我的欢欣有了实质，我一寸寸碎成灰，魂就爆开了烟，擦过女人的脸颊，黏进她们充斥着洗护品浑厚气味的发云里。\n\n> 我需要一个女人，就像冬夜的流浪狗寻一条能裹身的毯子。女人！她们听不见我心里的怒吼仿佛哀嚎一样令人可怜。她们多情又绝情，她们之中不能有一人来属于我。啊！女人！！！！！给老子一个女人！！！！！！\n\n觉得太过矫情，于是工整地仿写了一段\n\n> 我没有计算卡。这世界上有无数种型号的计算卡，但是一个我都没有。他们会逻辑运算，整型运算，浮点运算——但都不会被拿来处理我的数据。\n\n> 我没有计算卡可以跑程序，我像冬天里的刺猬那样渴望着它们运行时产生的余温。我想成为计算卡中的张量，流淌在那温暖的 PCIE 总线里，经由数据总线被分割送入一排排算术逻辑单元。于是我便化作一个个细碎的标量，参与进了数值运算的海洋，计算的过程使得我从纯粹的数据变成了意义与结论，而后又略过各级缓存，回到了那广阔无垠的显存空间中。\n\n> 我需要一张计算卡，就像失去了时钟信号的控制核心渴求着外部晶振。计算卡！它们看不到我积存的数据已如噪声一般毫无价值。它们精确又冷漠，它们之中不能有一个属于我。啊，计算卡！！！！！给老子一个计算卡！！！！！！\n\n嗯，好像换成这个抒情对象也没什么问题？\n\n---\n\n2019-09-17\n\n做完周二讲座 PPT 后开始补之前落下的各种作业\n\n微机原理真是使人头大\n\n---\n\n2019-09-16\n\n上午接到消息说因为之前有参与科研项目做过贡献\n\n本月还能拿到一点补助\n\n于是非常开心，整个人都精神了不少\n\n下午回到学校\n\n晚上帮着搞运维的朋友面试了一拨人\n\n（随后顺利被安排入 IT 部编制？似乎可以有个办公位置养老了）\n\n晚课后跑去给新生做蓝桥杯与 ICPC 入门培训\n\n（被吐糟讲得深+不实用+语速过快）\n\n准备工博会事宜\n\n---\n\n2019-09-12~2019-09-15\n\n快乐建模\n\n---\n\n2019-09-10~2019-09-11\n\n因为感冒很不舒服所以废了两天\n\n期间头脑发热怒买了西数 WD Blue SN500（可能还会考虑再买一个）\n\n---\n\n2019-09-09\n\n新学期第一次大创会议\n\n研究方向被导师驳回\n\n---\n\n2019-09-08\n\n继续摸鱼的一天\n\n早上八点从床上爬起来准备做网络赛\n\n结果白给 九点半又滚回寝室爬上床补觉\n\n下午网络赛日常自闭\n\n机械硬盘上 pkl 约 80 个/s，npy 约 100 个/s，移动到 ssd 上后 1000/s\n\n---\n\n2019-09-07\n\n摸鱼的一天\n\n上午去帮着收拾了一下嵌入式实验室\n\n下午网络赛日常自闭\n\n晚上和小伙伴们组团打卡了《罗小黑战记》\n\n---\n\n2019-09-06\n\n**凌晨**\n\n继续写了一点《基于图卷积网络的深度学习入门》（已弃坑）\n\nTODO：拆分成几个章节，补充之后的 semi-supervised 训练部分\n\n**上午**\n\n完成了之前提到的机甲的布线工作\n\n---\n\n2019-09-05\n\n**凌晨**\n\n和黎博士在机房里一起研究了半天终于成功使用锐龙 3700 全核心满速编译出 UE4\n\n<s>AMD, YES！</s>\n\n结果发现原来背后的原因是，有个沙雕的编译优化插件<s>不交钱买正版就会压你 CPU 使用率</s>，遂怒删之\n\n在黎博士的启发下我也突然想到了解决之前文件读不了的问题的思路\n\n于是<s>转手就是一阵代码魔改</s>成功让 data_loader 动了起来，两个模型的数据集特征提取工作也全部成功完成\n\n原理是把大对象的索引以文件名拆成一个个小文件然后保存在文件夹里\n\n<s>然而试着用通配符 mv 的时候发现居然爆参数了！于是只能 find+管道符一通操作</s>\n\n```bash\nfind data/ -name \"*_vfeats*.pkl\" | xargs -i mv {} ../vfeats/\n```\n\n然后终于让 VQA Challenge 2017 TOP 1 的模型成功跑了起来，回去睡觉+挂机等待结果……\n\nTODO: 给视觉特征增加缓存。batch_size 为 512 时训练一个 epoch 居然要近 15 分钟，查看资源使用情况发现 cpu 和 gpu 使用率都很低，应该是由于视觉特征被我拆成 12w+个小文件然后卡 IO 了……\n\n**中午**\n\n昨晚笔记本带回寝室后没接上电源，结果一夜没动它居然又把电全耗完了\n\n<s>强烈吐槽某巨硬的休眠模式，做得跟没用一样</s>\n\n来到机房查看训练结果，相当惨烈。TODO：反思失败原因。\n\n模型虽然没训练成功，今天的天气还真是出奇的好啊。\n\n**傍晚**\n\n给许兄的<s>强无敌</s>六足机甲装上了灯。很久没焊过什么东西了，手非常生。还有一点没完成，明天上午应该就能 po 出效果图了。\n\n依然没想到能优化数据集读入的方法，h5py 的几种 driver 都狂吃内存，查到线索似乎 numpy.memmap 实现了对大文件的访问和缓存机制。那么问题来了，我怎么将数据转成 numpy 格式的大文件呢……\n\n## 2019-09-04\n\n拜读了邱锡鹏编写的《神经网络与深度学习》的前两章和全部附录，重温一下数学基础与机器学习的常用符号表达。\n\n完成了习题的 warmup 部分，然后在第一章实现线性回归的习题里被 tensorflow 的实现卡了。\n\n另外，整个习题部分错漏百出，目测是临时工编写的？也有可能刚刚才出来还没全部 check 完成\n\n尝试克隆并构建 <https://github.com/peteanderson80/bottom-up-attention> 和 <https://github.com/markdtw/vqa-winner-cvprw-2017> 都失败\n\ntrainval_resnet101_faster_rcnn_genome_36.tsv 整个文件有足足 45GB 实在是太大了\n\npython 读到一半内存占用率超过 95.7%然后直接宕机\n\n希望能寻找到能够处理它的方法\n\n或是换个思路……自行提取出特征然后分块做成 mmap？\n\n阅读《Learning Visual Knowledge Memory Networks for Visual Question Answering》( <http://openaccess.thecvf.com/content_cvpr_2018/html/Su_Learning_Visual_Knowledge_CVPR_2018_paper.html> )\n\n依然没有找到较好的融合图像知识（visual knowledge/image knowledge）的方法\n\n希望明天能获得一些收获\n","tags":["研究日志"]},{"title":"大一总结","url":"/university-life-as-a-freshman/","content":"\n一句话概括版：碌碌无为，琐事缠身。大一啥也没干基本都在玩，所幸结识了诸多志趣相投的良师益友，也算是不枉这一年的摸索与尝试。<!-- more -->\n\n# 2017年\n\n## 08月\n\n通过联系学长加入了校ACM队，开始制定刷题计划\n\n和女友到处玩\n\n阅读《C和指针》\n\n阅读《房思琪的初恋乐园》\n\n阅读《艰难的一跃：美国宪法的诞生和我们的反思》\n\n尝试使用AndroidStudio进行软件开发\n\n\n\n## 09月\n\n通关《猎魔人3：狂猎》一周目\n\n阅读《卢梭与休谟：他们的时代恩怨》\n\n阅读《C++ Primer Plus》（然而非常粗略）\n\n加入管弦乐团（然而没多久退了）\n\n被班长带着夜跑（然而印象中只坚持了两天）\n\n开始了早上跑4km中午洗澡的生活作息\n\n\n\n## 10月\n\n和女友与她闺蜜一起各种玩（体验了和两个女~~高中~~生一起出游的人生巅峰）\n\n参加学生会面试，加入信息学院学术创新中心\n\n怒刷各个学院的迎新晚会\n\n重新调整算法训练计划，正式开始备战ACM-ICPC\n\n编写《高级数据结构入门——线段树篇》\n\n编写《从零开始切颗树：树链剖分原理及实现详解》\n\n\n\n## 11月\n\n继续怒刷各个学院的迎新晚会\n\n参与学院迎新晚会策划组\n\n购买并架设了Minecraft服务器\n\n阅读《Linux内核设计与实现》\n\n重读《数据结构与算法分析》\n\n开始刷《算法设计编程实验》\n\n\n\n## 12月\n\n我院迎新晚会顺利举办\n\n加入电子信息创新中心\n\n和女朋友一起看《烟花》\n\n通关《Gorogoa》\n\n背完N4词汇\n\n参观CP21\n\n参加南京四校骇客马拉松\n\n\n\n【2018年】\n\n## 01月\n\n开始刷洛谷训练场\n\n阅读《C程序设计语言》\n\n阅读《线性代数及其应用》\n\n通关《看门狗2》主线\n\n\n\n## 02月\n\n参加数模美赛\n\n阅读《代码之殇》\n\n阅读《人类简史》\n\n阅读《视觉SLAM十四讲》（暂时弃坑）\n\n刷完洛谷训练场普及组\n\n刷完《算法设计编程实验》例题\n\n\n\n## 03月\n\n阅读《富兰克林自传》\n\n阅读《你永远都无法叫醒一个装睡的人》\n\n开始准备英特尔杯、博创与智能互联等嵌入式开发比赛\n\n入门Python\n\n入门ROS\n\n骑自行车掏手机结果摔伤x1\n\n加入学院科研项目\n\n试着运行了OrbSLAM2感觉很好玩\n\n开始使用燕麦片代餐\n\n\n\n## 04月\n\n阅读《影响力》\n\n阅读《鲁迅全集》\n\n阅读《解码生命》\n\n阅读《深入理解计算机系统》\n\n一天内烧坏树莓派x2\n\n尝试编写Unity3D脚本\n\n第一次打CodeForce\n\n带着酒给付哥哥庆生\n\n金马五校上大站签到\n\n和同学一起在课上围观WorldFinal\n\n\n\n## 05月\n\n回顾《房思琪的初恋乐园》\n\n阅读《恶之花》\n\n阅读《Solidworks零件与装配体教程》\n\n阅读《Effective C++》\n\n和女友分手\n\n沉迷造车/简单机械设计\n\n金马五校赛华师大站三等获得鼠键套装x1\n\n结束学生会工作\n\n参与“互联网+”答辩\n\n\n\n## 06月\n\n参与了一场辩论赛\n\n入手NS和塞尔达\n\n阅读《蝴蝶效应：走近分形与混沌》\n\n刷完《钢之炼金术师FA》\n\n刷完《线性代数的本质》\n\n第一次洛谷橙名\n\n创客空间社团POV项目结项\n\n金马五校东华站签到\n\n提交智能互联初赛材料\n\n跟着艺设学姐用雪弗板制作了场景的模型并喷漆上色\n\n尝试在Unity3D中使用光照烘焙等工具\n\n参加博创初赛，公费旅游常数理工学院\n\n\n\n## 07月\n\n第一次翻墙回寝\n\n阅读《情人》\n\n建立开发团队\n\n参加智能互联，公费旅游中国计量大学\n\n参加英特尔杯，公费旅游浙江大学\n\n参加大都会赛，被队友带了块铜\n\n期末考试后选择整个暑假留校训练\n\n开始夜跑\n\n\n\n## 08月\n\n阅读《朝骚》\n\n阅读《性存在》\n\n阅读《恋人絮语》\n\n阅读《荣耀与丑闻：反思德国浪漫主义》\n\n刷完洛谷训练场提高组\n\n参加上海书展\n\n放弃夜跑\n\n编写了一个可持久化多线程爬虫程序\n\n第一次前往金山校区现场进行调试\n\n"},{"title":"Unity3D开发学习日志（下篇）","url":"/unity3d-learning-logs-18-07-18/","content":"\n弃坑啦~（因为苦心制作的作品连三等奖都没有拿到……看来还要继续学习……）\n\n目录：\n\n1. 资源加载\n\n2. 视频播放\n\n3. 场景烘焙\n\n4. 全息效果\n\n5. 物品切换\n","tags":["Unity3D","学习日志"]},{"title":"Unity3D开发学习日志（上篇）","url":"/unity3d-learning-logs-18-05-09/","content":"\n\n## 前言\n\n　　这个博客好像已经很久没有发过技术性文章了╮(╯▽╰)╭\n\n　　正如上篇博文所言，笔者自本周起将进入多个项目的开发迭代阶段（如果真觉得我上篇文章只是篇拗口的酸诗的话就当我没说吧23333）。而在某个项目中，笔者需要借助Unity3D编写一个演示程序。这就是这篇博文的起源。我试图将我探索的思路、过程以及踩到的坑如实记录下来，藉以自鉴，也希望能帮到其他初学者。<!--more-->\n\n　　还有一点要题一下，本篇文章名为“Unity3D开发学习日志”，其含义为“对使用Unity进行开发的过程进行学习的日志”。即本篇文章将**以特定的开发目标为线索，为读者构建出最简单的认知模型，随后给出必要的知识点**，而**绝非对Unity3D事无巨细的全面介绍**。如果有需要百科全书式的教程的话，还**请读者回头去读Unity3D的官方文档**吧。\n\n　　废话不多说，让我们开始动手吧。\n\n## 安装\n\n　　Unity3D的安装十分简单，没什么值得说的。注意如果需要交叉编译，需要在安装时勾选目标平台构建工具包。还有就是如果安装完成之后发生了无限加载打不开项目的情况，请**关闭杀毒软件以及Windows自带的防火墙**。\n\n## 工作区概览\n\n　　快速解除对一个陌生的软件的恐惧感的最佳方法是熟悉其工作区的组成。\n\n　　让我们来看看下面这张对Unity3D默认工作区的不同组成进行了标注的图片，然后一个个认识它们：\n\n　　![](/uploads/unity3d-learning-logs-18-05-09/1.jpg)\n\n　　①层级视图：**层级视图(Hierarchy)**描述了游戏场景中的所有**游戏对象(GameObject)**及其层级关系。游戏对象可以为模型、Unity3D内建实体，光源以及相机等等。游戏对象也可以是一个没有内容只有名字的**空对象(Empty Object)**。游戏对象之间可以存在着类似单继承的层级关系。所有子对象的位置、姿态以及尺寸等属性均随着父对象的改变而一同改变。空对象常用于组合多个游戏对象。\n\n　　②场景视图：**场景视图(Scene View)**在编辑模式下是一个交互式沙盒，你可以在此快速游览游戏的场景，以及选择、放置并移动游戏对象。场景视图里的物体通常与特定游戏对象绑定在一起。同时，点击相机时，右下角会显示出当前相机的视场预览。右上角的指示器能提醒你此刻镜头的俯仰角，点击中间的立方体能够快速切换透视模式，而点击其各个面的对应椎体则可快速将镜头于该平面对准。\n\n　　③工程面板与控制台：工程面板可以直观的展示项目所使用的所有资源，包括场景、脚本、模型、纹理等等。工程面板内的文件与实际项目文件夹内的文件一一对应。你可以直接在工程面板里创建脚本等素材，或者把外部素材拖拽到面板内以获得该素材的一份副本。控制台页面则常用于输出编译与调试的信息，你也可以通过C#代码向控制台发送消息。\n\n　　④属性面板：**属性面板(Inspector)**又被称为监视面板，选择一个游戏对象后面板就会显示其相关的数据，包括位姿、属性、脚本、成员等等内容。在属性面板上对游戏对象的修改会立刻应用到游戏对象上。\n\n　　⑤工具栏与菜单：位于整个工作区顶部的工具栏主要由其左侧的场景视图工具与其中央的试玩控制组成。点击中央的播放按钮即可编译脚本并在场景视图中进行试玩。再次点击即可结束试玩，回到编辑模式。菜单则包含了文件、编辑等常用功能的栏目。\n\n## 场景构建\n\n　　我们的目标是在游戏里创建一个立方体的测试房间。具体操作十分简单，但需要注意的是，默认情况下，平面只有单面材质。所以在做天花板时，我们需要把平面旋转180度。其它的面亦然。\n\n## 脚本系统\n\n### 脚本概述\n\n　　Unity3D使用C#作为其脚本的编程语言。简单的说，脚本即指控制游戏对象的行为与表现的代码。Unity3D的脚本系统使用了Mono项目，使得C#代码（.NET框架）能够被编译成跨各个不同平台的机器码。\n\n### 脚本的生存周期\n\n　　脚本的生命周期见下图：\n\n　　![](/uploads/unity3d-learning-logs-18-05-09/2.jpg)\n\n　　这张图片对脚本的执行流程的描述已经非常清楚了。在编写脚本时，我们的主要工作是实现Unity3D提供的接口函数（如OnGUI等函数)，而具体的调用过程则由Unity3D的脚本引擎负责实现。\n\n### 我的第一个脚本\n\n　　在工程面板的左侧选中`Assets`文件夹，`右键`-`Create`-`C# Script`，此时你的第一个脚本文件已创建完毕并显示在了工程面板的右侧。其图标为一个大大的C#。随后你还需要将其拖拽至层级视图中的`MainCamera`上。完成这些操作后，你的脚本将会在游戏开始时被加载。如果要编辑脚本文件，双击其图标即可。\n\n## 图形化用户界面\n\n　　在本节，笔者将具体描述如何实现两个基本的**图形化用户界面(Graphical User Interface, 简称GUI)**控件：调试输出框与按钮。\n\n### 实现原理\n\n　　首先，在Unity3D里实现GUI的途经通常有两种：直接在场景里画出一个平面然后让相机正对着它，或是使用代码在相机渲染完成的屏幕上绘制控件。至于这两者的差别，首先是更新的渲染阶段不同：前者的更新是在场景渲染阶段，而后者的更新是在专门的GUI渲染阶段。其所导致的结果是，前者在生成立体、动态GUI的能力上要强于后者，而在编写简单控件时使用后者则更加方便。\n\n　　为了简化难度，笔者选择使用后一种方式实现GUI。\n\n### 绘制一个调试输出框\n\n　　我们要做的首先是一个调试输出框。由于Unity3D自带的调试输出的位置是控制台面板，这就使得游戏测试时阅读调试信息不是很方便。于是，我们希望在游戏画面的左上角添加一个能立刻显示调试信息的区域。\n\n　　首先考虑用于储存调试信息的数据类型：显然最符合直觉的数据结构是一个定长的消息队列，新的消息从队列末尾入队，被显示过的消息从队列头出队。于是我们首先在脚本文件的末尾追加一个包含了链表的新类`DebugInfoManager`，其对应的完整C#代码如下：\n\n```csharp\npublic class DebugInfoManager\n{\n    LinkedList<string> infos;\n    public void Init()//初始化\n    {\n        infos = new LinkedList<string>();\n        this.Info(\"Debugging mode has been Enabled. \");\n    }\n\n    public void Info(string info)//将消息加入队列\n    {\n        infos.AddLast(info);\n        while (infos.Count > 7) infos.RemoveFirst();\n    }\n\n    public void Render()//绘制调试输出框\n    {\n        string str = \"\";\n        foreach (string info in infos) {\n            str += info + '/n';\n        }//获得当前调试输出的文字内容\n        GUIStyle style = GUI.skin.box; style.fontSize = 20;//放大字体\n        style.alignment = TextAnchor.UpperLeft;//使字符左上对齐\n        GUI.Box(new Rect(10, 10, 400, 170), str, style);//绘制\n    }\n}\n```\n\n　　随后修改主类的Start方法，并添加OnGUI方法。完成后，你的主类看起来应该像这样：\n\n```csharp\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class UserInterface : MonoBehaviour {\n    DebugInfoManager debugger = new DebugInfoManager();\n\n    void Start ()\n    {\n        debugger.Init();//初始化调试输出器\n    }\n \n    void Update ()\n    {\n    }\n\n    void OnGUI()\n    {\n        debugger.Render();//转移控制权\n    }\n}\n```\n\n　　以下是试玩时的效果图：\n\n　　![](/uploads/unity3d-learning-logs-18-05-09/3.jpg)\n\n### 绘制两个按钮，处理点击事件\n\n　　接下来我们要在屏幕的右下角绘制两个按钮，并编写其相应的处理程序。为了简化难度，我们仅让按钮在被点击时，输出一段文字。由于本段内容比较简单，这里直接给出修改以后OnGUI方法的代码。代码内对相关内容均已给出注释。\n\n```csharp\n    void OnGUI()\n    {\n        debugger.Render();\n        //更改样式（增大字体，居中对齐）\n        GUIStyle style = GUI.skin.box; style.fontSize = 20; style.alignment = TextAnchor.MiddleCenter;\n        //绘制控件\n        if (GUI.Button(new Rect(Screen.width - 200, Screen.height - 60, 80, 40), \"Left\", style))\n            //设置响应处理\n            debugger.Info(\"You press the LEFT button!!!\");\n        if (GUI.Button(new Rect(Screen.width - 100, Screen.height - 60, 80, 40), \"Right\", style))\n            debugger.Info(\"You press the RIGHT button!!!\");\n    }\n```\n\n　　效果图：\n\n　　![](/uploads/unity3d-learning-logs-18-05-09/4.jpg)\n\n## 相机转动\n\n　　接下来我们的目标是在按下右下角的那两个按钮之后，让摄像头向左或向右旋转一个直角。在开始编程之前，先来补充一点数学知识。\n\n### 欧拉角、万向锁与四元数\n\n　　首先引入用于描述姿态的两种常用的数据结构：**欧拉角(Euler angles)**与**四元数(Quaternion)**。\n\n　　让我们先从相对直观的欧拉角入手。下面给出了一张来自Wikipedia的欧拉角旋转演示。\n\n　　![](/uploads/unity3d-learning-logs-18-05-09/5.gif)\n\n　　可以看到，物体围绕着自己的三个自然坐标轴分别进行了旋转。而我们构造欧拉角时所需要的三个参数，正是这三个自然坐标轴的旋转角度。欧拉角的实质是一个三维向量，我们并不需要关注其具体实现细节。\n\n　　在Unity3D中构造欧拉角也非常的简单，只需要使用如下构造函数：\n\n```csharp\n　　Vector3 eularAngle = new Vector3(x, y, z);\n```\n\n　　其中的数值 x, y, z 分别为物体在各个自然坐标轴上旋转的角度。\n\n　　虽然欧拉角能相当直观的描述物体的旋转，但是单单使用欧拉角描述旋转时会遇到一个不可避免的问题：**万向锁(Gimble lock)**。\n\n　　注意到使用欧拉角描述旋转过程时，如果将Y轴旋转90度，会使得Z轴与X轴重合，进而导致旋转表示系统失去一个维度。其结果如下图所示：\n\n　　![](/uploads/unity3d-learning-logs-18-05-09/6.gif)\n\n　　此时，无论旋转X轴还是旋转Z轴，物体本身的姿态变化都是相同的。因此，使用欧拉角描述物体的姿态变化具有缺陷。此时，就需要引入另一个数学工具，四元数。\n\n　　四元数是一种超复数，也即对复数的扩展，由实数加上三个不同维度的虚数组成。对四元数及其描述变换的原理的理解需要引入旋转群等高等代数的概念，限于篇幅，本教程不作过多陈述，感兴趣的读者可以自己去查阅相关定理以及证明过程。在本篇教程中，我们只需要知道，Unity3D(以及其它几乎所有需要描述物体三维姿态的程序)的内部使用四元数描述物体的姿态。\n\n　　在Unity3D中，可以很容易的使用如下代码从欧拉角生成四元数。\n\n```csharp\n    Quaternion quat = Quaternion.Euler(new Vector3(x, y, z));\n```\n\n### 左转与右转\n\n　　在脚本与游戏对象绑定后，可在脚本主类内使用`transform.Rotate`方法使游戏对象旋转。该方法的参数可以是欧拉角或四元数。\n\n　　现在让我们来修改一下那两个按钮的响应处理代码，使主相机能够进行旋转：\n\n```csharp\n//(在OnGUI内)\nif (GUI.Button(new Rect(Screen.width - 200, Screen.height - 60, 80, 40), \"Left\", style))\n{\n    transform.Rotate(new Vector3(0, -90, 0));\n    debugger.Info(\"You press the LEFT button!!!\");\n}\nif (GUI.Button(new Rect(Screen.width - 100, Screen.height - 60, 80, 40), \"Right\", style))\n{\n    transform.Rotate(new Vector3(0, 90, 0));\n    debugger.Info(\"You press the RIGHT button!!!\");\n}\n```\n\n　　接着，让我们试玩一下：\n\n ![](/uploads/unity3d-learning-logs-18-05-09/7.jpg)\n\n 可以由墙上的标注文字与左上角的调试输出容易的推断出旋转的代码运行成功。\n\n### 平滑化处理\n\n　　虽然我们实现了主相机的固定角度转动，可是此时的效果只是“画面快速一闪，旋转随即完成”。而作为优秀的美工师，我们一定不会愿意接受这种呈现。于是在这里，我们将使用**球面线性插值(Spherical linear interpolation, 常简称 Slerp )**技术对表示旋转的四元数进行平滑插值，进而实现镜头平滑转动的效果。\n\n　　下面给出实现了该效果的主类代码，重要的地方均已加上注解。\n\n```csharp\npublic class UserInterface : MonoBehaviour {\n    DebugInfoManager debugger = new DebugInfoManager();\n    Quaternion targetRotation;//目标姿态\n    bool rotating = false;//是否处于旋转过程，用于防止用户在旋转的过程中点击转向而改变目标姿态、\n \n\n    void Start () {\n        debugger.Init();\n    }\n \n void Update () {\n     //根据球面线性插值的结果改变位姿。Slerp的第三个参数影响了插值的密度也即转动的速度。\n        if (rotating) transform.rotation = Quaternion.Slerp(transform.rotation, targetRotation, Time.deltaTime * 3);\n        //这里的IF有两个作用：1. 提前结束最后缓慢的镜头移动 2. 结束旋转过程\n  if (Quaternion.Angle(targetRotation, transform.rotation) < 0.5f)\n  \n        {\n            transform.rotation = targetRotation;\n            rotating = false;\n        }\n    }\n\n    void OnGUI()\n    {\n        debugger.Render();\n        GUIStyle style = GUI.skin.box; style.fontSize = 20; style.alignment = TextAnchor.MiddleCenter;\n        if (GUI.Button(new Rect(Screen.width - 200, Screen.height - 60, 80, 40), \"Left\", style))\n        {\n            debugger.Info(\"You press the LEFT button!!!\");\n            if (!rotating)\n            {\n       //从当前的姿态计算出目标姿态\n                targetRotation = Quaternion.Euler(transform.eulerAngles + new Vector3(0, -90, 0));\n    //开始旋转\n                rotating = true;\n            }\n        }\n        if (GUI.Button(new Rect(Screen.width - 100, Screen.height - 60, 80, 40), \"Right\", style))\n        {\n            debugger.Info(\"You press the RIGHT button!!!\");\n            if (!rotating)\n            {\n                targetRotation = Quaternion.Euler(transform.eulerAngles + new Vector3(0, 90, 0));\n                rotating = true;\n            }\n        }\n    }\n}\n```\n\n### 一个坑点\n\n　　在完成了镜头转动的代码之后，笔者本来想让镜头两边的墙向外移动，让视野看上去变得更加广阔一些。随后却发现无论如何调整房间的大小，相机预览都没有任何改变。后来一拍脑袋发现，让相机始终位于场景中央的话，由于其视场角约为100度，而正好始终大于正方形内其正对的面的两个侧楞与正方体中心的夹角（一个直角）。现在考虑的解决方案是让相机绕着房间中心做圆形轨迹的运动的同时转动其视角。等实现以后回头再来更新这一段内容。\n\n## 结语\n\n　　至此，本篇Unity3D初窥之旅即将划上句号。本教程参阅了包括Unity3D官方文档、Wikipedia等多篇在线内容，而教程中的代码、Unity3D界面截图等均为笔者原创。在此，笔者要感谢所有不辞辛劳地将自己的经验总结后发布在互联网上的博主们。笔者也相信并期待着与他们一同成为促进互联网时代知识传播的重要力量。笔者也衷心希望每位读者都能够在读完本文后有所收获。如果发现文章内容有误，或是存在难以理解的内容，欢迎发送邮件或在下方留言。\n\n　　从下周开始，笔者将尝试着在Unity3D内动态加载模型文件，并试着实现一些简单的前后端逻辑。届时如果发现了有趣的经历，笔者也会适当挑选一部分内容编著成另一篇开发学习日志。\n\n　　最后给出本篇所编写的脚本文件的最终代码：\n\n```csharp\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class UserInterface : MonoBehaviour {\n    DebugInfoManager debugger = new DebugInfoManager();\n    Quaternion targetRotation;\n    bool rotating = false;\n \n    void Start () {\n        debugger.Init();\n    }\n \n void Update () {\n        if (rotating) transform.rotation = Quaternion.Slerp(transform.rotation, targetRotation, Time.deltaTime * 3);\n   if (Quaternion.Angle(targetRotation, transform.rotation) < 0.5f)\n  \n        {\n            transform.rotation = targetRotation;\n            rotating = false;\n        }\n    }\n\n    void OnGUI()\n    {\n        debugger.Render();\n        GUIStyle style = GUI.skin.box; style.fontSize = 20; style.alignment = TextAnchor.MiddleCenter;\n        if (GUI.Button(new Rect(Screen.width - 200, Screen.height - 60, 80, 40), \"Left\", style))\n        {\n            debugger.Info(\"You press the LEFT button!!!\");\n            if (!rotating)\n            {\n                targetRotation = Quaternion.Euler(transform.eulerAngles + new Vector3(0, -90, 0));\n                rotating = true;\n            }\n        }\n        if (GUI.Button(new Rect(Screen.width - 100, Screen.height - 60, 80, 40), \"Right\", style))\n        {\n            debugger.Info(\"You press the RIGHT button!!!\");\n            if (!rotating)\n            {\n                targetRotation = Quaternion.Euler(transform.eulerAngles + new Vector3(0, 90, 0));\n                rotating = true;\n            }\n        }\n    }\n}\npublic class DebugInfoManager\n{\n    LinkedList<string> infos = new LinkedList<string>();\n    public void Init()\n    {\n        infos = new LinkedList<string>();\n        this.Info(\"Debugging mode has been Enabled. \");\n    }\n\n    public void Info(string info)\n    {\n        infos.AddLast(info);\n        while (infos.Count > 7) infos.RemoveFirst();\n    }\n\n    public void Render()\n    {\n        string str = \"\";\n        foreach (string info in infos)\n        {\n            str += info + '/n';\n        }\n        GUIStyle style = GUI.skin.box; style.fontSize = 20;\n        style.alignment = TextAnchor.UpperLeft;\n        GUI.Box(new Rect(10, 10, 400, 170), str, style);\n    }\n}\n\n```\n","tags":["Unity3D","学习日志"]},{"title":"摘抄整理（18.04.30）","url":"/clippings-18-04-30/","content":"\n　　（以下内容摘录自《房思琪的初恋乐园》，林奕含著）\n\n　　刘怡婷要过好几年才会理解，运用一个妳其实并不懂的词，这根本是犯罪，就像一个人心中没有爱却说我爱妳一样。<!--more-->\n\n　　……\n\n　　席上每个人的嘴变成笑声的泉眼，哈字一个个掷到桌上。关于逝去青春的话题是一种手拉手踢腿的舞蹈，在这个舞蹈里她们从未被牵起，一个最坚贞的圆实际上就是最排外的圆。\n\n　　……\n\n　　思琪她们在暑假期间南来北往探视亲戚、采购生活用品。思琪在家一面整理行李，一面用一种天真的口吻对妈妈说：「听说学校有个同学跟老师在一起。」「谁？」「不认识。」「这么小年纪就这么骚。」思琪不说话了。她一瞬间决定从此一辈子不说话了。她脸上挂着天真的表情把桌上的点心叉烂，妈妈背过去的时候把渣子倒进皮扶手椅的隙缝里。后来老师向她要她的照片，她把抽屉里一直摆着的全家福拿出来，爸爸在右边，妈妈在左边，她一个人矮小的，穿着白地绣蓝花的细肩绑带洋装，被夹在中间，带着她的年纪在相机前应有的尴尬笑容。把爸爸妈妈剪掉了，拿了细窄油滑的相纸条子便给老师。她的窄肩膀上左右各留着一只柔软的大手掌，剪不掉。\n\n　　……\n\n　　什么样的关系是正当的关系？在这个你看我我看你的社会里，所谓的正确不过就是与他人相似而已。每天读书，一看到可以拿来形容她和老师的句子便抄录下来，愈读愈觉得这关系人人都写过，人人都认可。\n\n　　……\n\n　　每一个见不到妳的日子都只是从腌渍已久的罐子里再拿出一个，时间不新鲜了。\n\n　　……\n\n　　她沉默了很久很久，两个人都感觉这沉默像在一整本辞海里找一片小时候夹进去的小手掌枫叶，厚厚的沉默，翻来覆去的沉默，镶上金边的薄透圣经纸翻页的沉默。\n\n　　……\n\n　　他全身都睁开了眼睛，吃吃地流泪。只有眼睛没有流泪。\n\n　　……\n\n　　「毛先生真的是艺术家。」\n\n　　「哪里，钱太太客气了。」\n\n　　「太谦虚这点也很艺术家。」\n\n　　「其实做完这个，我心里蛮骄傲的。」\n\n　　两个人都笑了。\n\n　　「心里头骄傲也非常艺术家呢。」\n\n　　妳笑起来真美，想把妳的笑风化了收在绒布盒子里。\n\n　　……\n\n　　为妳浪费的时间比其他时间都好，都更像时间。\n\n　　……\n\n　　没有黑色幽默或反高潮的意思，他只是婉曲地感到本属于伊纹的就一定会到伊纹手上。\n\n　　……\n\n　　写实主义里，爱上一个人，因为他可爱，一个人死了，因为他该死，讨厌的角色作者就在阁楼放一把火让她摔死──但现实不是这样的，人生不是这样的。我从来都是从书上得知世界的惨痛，忏伤，而二手的坏情绪在现实生活中袭击我的时候，我来不及翻书写一篇论文回击它，我总是半个身体卡在书中间，不确定是要缩回里面，还是干脆挣脱出来。也许我长成了一个十八岁的自己会嫌恶的大人。\n\n　　……\n\n　　铝箔包里掺了丝丝柳橙果肉的浓缩还原果汁，就像长得好看这件事一样，是赝品的乡愁，半吊子的田园诗，装模作样，徒劳。\n\n　　……\n\n　　「其实我们两个很像，你是一个比较温柔的我。」忍住没有说：你对我就像我对他一样。这是爱情永不俗滥的层递修辞。\n\n　　……\n\n　　我愿意堕入面团地狱里，生生世世擀面皮。用一辈子擀一张妳可以安稳走在上面饿了就挖起来吃的面皮。\n\n　　……\n\n　　在这个人人争著称自己为输家的年代，没有人要承认世界上有一群女孩才是真正的输家。那种小调的痛苦其实与幸福是一体两面：人人坐享小小的幸福，嘴里嚷着小小的痛苦──当赤裸裸的痛苦端到他面前，他的安乐遂显得丑陋，痛苦显得轻浮。\n\n　　……\n\n　　我们都是学艺术的人，可是我犯了艺术最大的禁忌，那就是以谦虚来自满。\n\n　　……\n\n　　思琪，她真的爱过，她的爱只是失禁了。忍耐不是美德，把忍耐当成美德是这个伪善的世界维持它扭曲的秩序的方式，生气才是美德。\n\n　　……\n\n　　没办法的，我们都没办法从此过着幸福快乐的日子，诚实的人是没办法幸福的。\n\n　　（以下内容摘录自《虐恋亚文化》，李银河著）\n\n　　相比之下，“弗洛伊德只是在我们的个人和集体生活的大门前礼貌地徘徊了一下；马克思不过重新分配了一下家务劳动而已；而萨德却兴高采烈地摧毁了全部私人与公共的大厦，并且宣称，那些碎砖乱石才是我们真正唯一应得的命运。”\n\n　　……\n\n　　想像是快乐的刺激物，它是一切的源泉，它最伟大的成就、最杰出的快乐可以超越一切强加于它的界限。\n\n　　……\n\n　　法国知识界和思想界人士一直对萨德评价很高。尤其是自由左派，甚至认为他就是自由的化身。贝夫将萨德与拜伦并列为浪漫主义的两位天才先驱，是后世作家们最重要的两个灵感源泉。波特莱尔认为，对于自然人的任何研究必须自萨德始，他是恶之花。福楼拜称他为“伟大的萨德”，说他为哲学和历史提供了“光辉的见识”。文学评论家们则公认萨德是一位伟大的哥特式作家。巴塔利对文学中的恐怖感十分着迷，认为它可被利用来解放人的精神，而他认为萨德是一位百折不回的社会与道德禁忌的真诚探索者，一位一切人类经验的无畏的讲述者。作家和存在主义者加缪认为他是针对荒谬的反叛者，是“对敌意的上天的伟大冒犯者”，是“第一位绝对反叛的理论家”。20世纪60年代的巴黎激进知识分子团体称他为世界级的颠覆分子。波伏瓦为他写过专论。罗兰·巴特虽然不赞成萨德的思想，但他认为萨德创造了一套革命性的话语。福柯也十分重视萨德的贡献。当他说虐恋出现的精确时间是18世纪末年时，他心里想的很可能是萨德，那正是萨德生活、写作的年代。 在英国，\n\n　　……\n\n　　残忍的快乐是完全自然的。而社会却是阻碍自然发展进程的一个不自然的结构。\n\n　　……\n\n　　一旦接受了萨德关于自然是生命更新工厂的观点，所有的道德标准就都失效了：伦理成为多余的东西。\n\n　　（以下内容摘录自《富兰克林自传》，富兰克林著）\n\n　　这种方法我连续使用了几年，渐渐就弃而不用了，仅仅保留了用谦虚谨慎的话表达自己看法的习惯，每当提出可能有争议的观点时，我从来不用“肯定地”，“无疑地”，或别的使一种意见有武断气息的字眼；而宁可说，我心想，我恐怕一件事情是如此这般，由于某种理由，在我看来，或我倒认为它如何如何，或者我想象事情如何如何，或者如果我没有弄错的话，事情就是这样。当我需要反反复复坚持自己的见解并说服人们相信我时不时地鼓动宣传的措施时，我相信这种习惯对我好处极大。由于交谈的主要目的是提供信息或者获取信息，使人心悦或使人信服，所以我希望善意明达之人不要以武断自负的方式说话，而使行善的力量减弱，原因是用这种方式往往使人反感，容易造成对立，使我们专靠语言达到的这些目的——即提供或获取信息或者提供或获取快乐——一一泡汤：因为如果你要提供信息，在你提出自己的见解时，一种武断教条的态度可能招致反驳，也阻碍了坦诚的关注。要是你希望从别人的知识中获取信息和改进，同时又坚决用目前的观点来表达自己，那么谦虚明达之士由于不爱争辩，也许就听之任之，让你坚持错误，不思悔改好了；如果采取这种态度，你就很难指望让听你讲话的人心悦，诚服，达成你所期望的共识。蒲柏的话很有见地，\n\n　　“教人时要让人觉得你不是在教他，人所不知的事情你就说他是忘啦，”\n\n　　进而又劝告我们，\n\n　　“与其言之凿凿，不如故显怯懦。”\n\n　　……\n\n　　那时候我穿的是工装，因为像样的衣服还在绕道从海上往这儿运呢。我折腾了一路，身上脏得不成样子，口袋鼓鼓囊囊，塞满了脏衬衣和臭袜子；我人生地不熟，不仅一个人都不认识，而且不知道去哪儿找住处。我旅途劳顿，又是走路又是划船，又得不到充分的休息。我饿得前胸贴后背，身上的全部盘缠就是一元荷兰币和约合一先令的铜板，铜板我给了船家当路费，起初他们不肯收，因为我也出力划过船了；但我执意要他们收下。有时候一个人钱少时比钱多时出手更大方，也许是怕被人小瞧的缘故吧。\n\n　　……\n\n　　这么看来，做一个理性的动物倒是一件十分方便的事情，因为人想做一件事，它总能使人找出一个或造出一个理由来。\n\n　　……\n\n　　眼下牺牲一点虚荣，往后会得到厚厚的回报。如果一时难以确定是谁的功劳，那么某个比你还要虚荣的人就会觉得理直气壮，便当仁不让，到那时候，连嫉妒也愿意还你一个公道，拔掉这些冒领的羽毛，还给它们真正的主人。\n\n　　……\n\n　　他把长期持续的健康归功于节制，它至今还给他留下一副好身板。多亏了勤奋和节俭，他早年景况顺遂，获取了财富，还学得了种种知识，使他成为一位有用的公民，为他在学术界赢得了一定的声誉。\n\n　　……\n\n　　实际上，在我们的性情中最难制服的也许就是骄傲了，你尽可以千方百计地将它伪装，跟它拼搏，把它打翻在地，掐住它的脖子，将它狠狠羞辱一顿，但就是弄不死它，一有风吹草动，它又窥间伺隙表演一番。\n\n　　……\n\n　　最后我们成了莫逆之交，我们的友谊一直延续到他去世的那一天。这又一次证实了我学的那句至理名言，谁若一次施恩与你，必将二次施恩与你，其乐意之情为受恩于你者所不及也。这也表明冤仇宜解不宜结，冤冤相报弊无穷。\n\n　　……\n\n　　此人的回答是，霍普金森朋友，换了别的什么时候，你可以随便向我借；但现在不行；因为你好像脑子犯潮了。\n\n　　……\n\n　　有一次他从英国抵达波士顿，便写信告诉我不久要来费城，但不知道来了以后在哪里投宿，因为他听说他的好心的老房东贝尼泽特先生搬到德国城去了。我的回答是：你知道我的住处，如果你能在寒舍将就几天，你会得到最热诚的欢迎。他回信说，如果我看在基督的分上出此义举，我将不会错过一份回报的。我回话说，别弄错了；那并非看在基督的分上，而是看在你的分上。我们俩都认识的一位熟人开玩笑说，大家都知道圣徒们有个习惯，该他们领情的时候，他们总觉得这份人情自己担待不起，便将这个包袱从自己肩头移开，搁到天上，我倒是想方设法把它死死放在地上。\n\n　　……\n\n　　对这句至理名言我也深有体会：第一个一百镑赚到手，再赚一百就很顺溜。钱生钱，利滚利，天经地义。\n\n　　……\n\n　　人的幸福，因撞到千载难逢的大运而得者为数寥寥，由日积月累的小惠而生者比比皆是。如此说来，你若教会一个穷小伙如何刮脸，怎样保养剃刀，也许你对他一生的快乐做出的贡献胜于给他一千几尼。钱可以很快花光，剩下的只是胡花滥用的悔恨。但若教会他刮脸，他就免去了一连串的苦恼，不必对理发师苦苦等待，不用碰他们脏兮兮的手指，不用闻他们臭烘烘的气息，不必挨他们老刀子硬刮的疼痛。他什么时候刮脸，全看自己的方便，工具顺手，操作自如，天天享受着这方面的乐趣。怀着这样一些想法，我贸然写下了前面几页东西，希望能给城市提供一点有朝一日能派上用场的提示。我在这座城市里生活了多年，非常快乐，所以深深地爱上了它；这些建议也许对我们美洲的一些城镇也有用处。\n\n　　……\n\n　　将茫茫人间用眼一扫， 知善行善者何其稀少。\n\n　　……\n\n　　在这个世界上，除了死和税，什么也不能说是肯定的。\n","tags":["阅读"]},{"title":"摘抄整理（18.04.29）","url":"/clippings-18-04-29/","content":"\n　　（以下内容摘录自《你永远无法叫醒一个装睡的人》，周濂著）\n\n　　当以牛顿为代表的近代科学家终于用纯数学这门语言谱写完自然这本大书的时候，哲学—科学的脐带彻底发生断裂，哲学与科学开始分道扬镳。奥斯汀对此有形象的比喻，哲学好比“处在中心的太阳，原生旺盛、狂野纷乱”，过一阵子它就会甩出自身的一部分，成为这样那样的一门具体科学，这些具体科学像行星一般远离母体，“凉冷、相当规则，向着遥遥的最终完成状态演进”。<!--more-->\n\n　　……\n\n　　当村上说“假如小说家站在高墙一边写作——不管出于何种理由——那个作家又有多大价值呢？”，他不仅仅是在宣告一种政治立场和价值理想，同时也在传达一个艺术创作的秘密：只有从鸡蛋的角度才有可能说出真正的故事，反过来，任何为高墙所作的正面辩护都只能是面目丑陋的教化和训诫。\n\n　　……\n\n　　十二怒汉最后离开陪审室的时候，并没有走出柏拉图的洞穴，他们没有看到光芒普照的太阳，而是满腹狐疑心事重重地消失在暮色里。但，这对于一个以无罪推定为前提的法律体系来说，就足够了。 也许真理还在某处，但真理不在这里。\n\n　　……\n\n　　在信中维特根斯坦重提他们散步时的那次讨论：“你关于‘民族性格’的议论，它的简单幼稚使我吃惊。我因而想到：研究哲学如果给你的只不过是使你能够似是而非地谈论一些深奥的逻辑之类的问题，如果它不能改善你关于日常生活中重要问题的思考，如果它不能使你在使用危险的语句时比任何一个……记者都更为谨慎（而这种人是为了他们自己的目的而使用这种语句的），那么，它有什么用处？”\n\n　　……\n\n　　在马尔康姆的记忆里，维特根斯坦最本质的特点是极端纯正的严肃性和高度的智慧。当他在课堂上进行紧张的思考时，他常常觉得自己搞糊涂了，而且会毫无顾忌地把这点说出来，譬如说：“我是一个傻瓜！”“你们的老师糟透了！”“今天我确实太笨了！”\n\n　　……\n\n　　相比赵汀阳在思想上的自由不羁，慈继伟简直就是另一个极端，《正义的两面》在形式上是一本中规中矩的纯学术著作，里面大量地援引了各种正义理论，上至康德、休谟下到罗尔斯、哈贝马斯，最难能可贵的是，虽然穿梭在规矩林立的理论丛林里，慈继伟却始终保持着真切的道德直觉和清醒的问题意识。\n\n　　……\n\n　　“原著是务必为人所知、所尊重的东西……我总是理所当然地认为，我们正在研究的这些人物比我要聪明得多。如果他们不比我聪明的话，我为什么要在他们身上浪费我的时间和同学们的时间呢？如果我在他们的论证中发现了一个错误，我便假定他们也发现了它，并且确信他们已经对它作了处理。那么，他们是在哪里处理它们的呢？我考查他们的解决办法，而不是我自己的解决办法。……我不愿意向这些榜样提出反对意见；因为那样做太容易，而且会忽视一些重要的东西。”\n\n　　我相信罗尔斯的这个断言同样适用于罗尔斯本人。剑桥大学的教授奥诺拉·奥尼尔曾经在一篇辩护文章中说过一句很不谦虚的话：“罗尔斯再一次想在了批评者的前头。”当然，想在批评者的前头，并不意味着能够成功地回应每一个批评者，而只是说罗尔斯对于正义及其相关的所有问题有过通盘的考察，并对于每一种可能的批评都做出过自己的解释。《正义论》绝非无可指摘，但是如果有人认为三言两语就能驳倒罗尔斯，并因此自鸣得意雀跃不已，那我只能对他表示遗憾，因为“那样做太容易，而且会忽视一些重要的东西”。初看起来，《正义论》和《哲学研究》简直风马牛不相及。但世界就是这么的奇妙，维特根斯坦的学生马尔康姆正是罗尔斯的大学启蒙老师，这让我一直深信罗尔斯在最根本的精神气质上与维特根斯坦有着非常隐秘的关联——真正的哲学家都在以不同的方式教会我们差异。不过仅仅认识到差异性仍然不构成全面的理解。按维特根斯坦的想法，“我们对某些事情不理解的一个主要根源是我们不能综观语词用法的全貌”，而所谓理解，就是在看到差异的同时又“看到联系”。这个说法让我想起圆明园里的“黄花阵”，这是一座乾隆年间修建的迷宫，我曾先后去走过三五回，每一次我都比别人更快地走出迷宫，不是因为我更加聪明，而是因为我的个子高，所以我可以探出迷宫的围墙看清楚哪一条是死路哪一条是活路。 思想同样如此，只有站在思想的高墙上，我们才可能看清楚那些沟壑，明白哪里是死路哪里是活路。\n\n　　……\n\n　　虽然极少数国人拥有无限发达的联想能力，看到民主、自由、人权就想起普适价值，看到普适价值就想起西方霸权，看到西方霸权就想起1840年以来我们遭受过的无数屈辱和苦难，就会满腔热血地想到中国崛起，然后就一路顺理成章滑到中国可以说不，中国不高兴。\n\n　　……\n\n　　“人具有正义的能力，使民主成为可能；人具有不正义的倾向，使民主成为必要。”——雷茵霍尔德·尼布尔\n\n　　……\n\n　　共同体对于同质性的偏执追求必然会导致对异质性的决然排挤。共同体的一面是善良、容忍、友爱、确定性和幸福，另一面则是封闭、不宽容、压迫、排他和不自由。\n\n　　……\n\n　　一种未经反思的人生是不值得过的人生，一个无从选择的幸福生活不是真正的幸福生活，而只是“被幸福”。\n\n　　……\n\n　　年轻的维特根斯坦在罗素的房间里像头野兽一样来回奔走。三个小时过去了，困惑不已的罗素忍不住打断他：“你到底是在思考逻辑还是在思考你的罪？”“两者皆是！”维特根斯坦回答道，然后继续他的奔走。\n\n　　……\n\n　　早在八岁的时候，维特根斯坦就曾经伫立门前苦苦思索：“如果说谎对一个人有好处，为什么他还应该说真话？”这个问题既是维特根斯坦最初的哲学思考，也是纵贯其一生的焦虑所在。\n\n　　……\n\n　　有人赞扬G.E.摩尔孩子般的单纯，但是这对于维特根斯坦毫无价值：“我不能理解，除非一个孩子也值得为之得到赞扬。因为你谈的单纯不是一个人为之拼争而来的单纯，而是出自天然的免于诱惑。”对于维特根斯坦而言，人生的确就是一场彻底的自我清算，一场与自己的本性进行的战斗。 因此，在这本传记中，我们读出最多的不是浑然天成的哲学天才和道德圣徒，而恰恰是在担负起天才的责任之后，维特根斯坦对自身的褊狭、软弱、伪善以及绝望的永恒克服。维特根斯坦总体人生态度的核心是成为“自己之所是”，这意味着“真实于自己是不容违背的责任”。其中，对他而言也许是最重要的一个面向就是--成为一个卓越的人，但不要设法表现是一个卓越的人。 罗素曾说维特根斯坦也许是他所见到过的“传统观念里的天才的最完美范例，激情、深刻、强烈和强势”。蒙克的独到之处在于，他能够始终保持克制，虽然全书充满了激情，但是这些激情不是蒙克本人的激情，他把自己藏在后面，通过排列组合各种硬事实和硬材料，让维特根斯坦的激情去推动整本书。\n\n　　……\n\n　　“当一切有意义的科学问题已被回答的时候，人生的诸问题仍然没有触及到。”\n\n　　“在我做哲学的方式中，哲学的全部目标是给出某种形式的表达，从而使特定的不安消失。”\n\n　　——维特根斯坦\n\n　　……\n\n　　人们不能以他们的活动具有更大的内在价值为借口，利用强制的国家机器来为自己争取更大的自由权或更大的分配份额。\n\n　　……\n\n　　由于启蒙运动割裂了宗教与政治的关联，导致现代政治把政治社会的本性理解成为“人造之物”，任何人造之物就其定义而言都是虚构的，其正当性都得不到来自超验领域的绝对保障，所以这些人造之物也即“地上的政治”的根本问题就是“正当性的空虚”。换句话说，由现代性构建起来的所有价值理念，如人民主权、个人自由、权利、民主、分配正义、普遍幸福等等，就“虚构”这一本性而言都在一个水平面上，都不是对根本问题的思考，因此也就都注定将停留在表面上，不同的主义和意识形态之间的差异也就可以被抹平。而一旦来自宗教的、绝对意义上的正当性不复可得，则陷入诸神之争的人类就只能诉诸生存决断论的政治来解决冲突。\n\n　　……\n\n　　彼得说：“文明人与野蛮人的差异，在于前者了解到个人信念只具有相对的有效性，但却能够坚定不移地捍卫这些信念。”\n\n　　……\n\n　　帕斯卡尔说：“我们知道得太少因而当不了独断论者，但又因为知道得太多不能成为怀疑主义者。”罗尔斯、哈贝马斯这些“浅俗”的自由主义者们，孜孜以求、苦心践履的正是帕斯卡尔这个论断：左右开弓，同时拒绝和狙击“道德实在论”以及“现代价值怀疑论”。反观某些保守主义者，恰恰是要么因为焦虑知道的太少所以成了怀疑主义者，或又自以为知道的挺多而成为独断论者。\n\n　　……\n\n　　健全的现实感是探讨政治哲学必须拥有的第一美德。\n\n　　……\n\n　　赛亚·伯林尝言：“我已厌倦阅读那些人，他们总是站到一列，有着几乎完全一致的观点，毋宁说，我更愿意阅读敌人，因为敌人会穿透那些思想的防线。”我从不厌倦阅读与我站在一列的朋友们，因为我总是从他们身上汲取到足够的养分，同时我也不认为存在着什么敌人，在面对转型时期的中国问题时，“我们”有的只是论友而非敌人。就共同关切而言，我们只不过是站在一列的、有着不同观点的朋友。\n\n　　……\n\n　　民主作为一种政治设计，它的优点之一就是坦诚面对“人性是不完善的”这样一个事实。保罗·伍德拉夫在《最初的民主》中说：“你无法通过杀死民主的辩护者来杀死民主，但是你可以通过坚持至善，坚持反对一切人性的和有瑕疵的东西来杀死民主。\n\n　　……\n\n　　卢梭在《社会契约论》开宗明义：“人们或许要问，我是不是一位君主或一位立法者，所以要来论述政治呢？我回答说，不是；而且正因为如此，我才要论述政治。假如我是个君主或者立法者，我就不会浪费自己的时间来空谈应该做什么事了；我会去做那些事情或者保持沉默。”\n\n　　……\n\n　　而新左派、新保守主义者一直坚定地面向执政者，也正是因为他们相信——借用德鲁里对施特劳斯学派的分析——“知识分子可以在政治中扮演重要的角色。让他们直接去统治是不明智的，因为大众倾向于不信任他们；但是他们一定不能放过在权势者的耳边低声细语的机会”。\n\n　　……\n\n　　“一切深奥的推理都伴有一种不便，就是：他可以使论敌哑口无言，而不能使他信服，而且它需要我们做出最初发明它时所需要的那种刻苦钻研，才能使我们感到它的力量。当我们离开了小房间、置身于日常生活事务中时，我们推理所得到的结论似乎就烟消云散，正如夜间的幽灵在曙光到来时消失一样；而且我们甚至难以保留住我们费了辛苦才获得的那种信念。在一长串的推理中，这一点更为显著。” 如果休谟的这个判断是对人类理性以及哲学论证之限度的正确描述，那就迫使我们思考这样一个问题：既然道德哲学和政治哲学旨在改变人们的性格与行动，那么传统的理性论辩和论证的方式是否真正有效？如果在这个时代，“大部分人们似乎都一致地把阅读转变为一种消遣，而把一切需要很大程度注意才能被人理解的事物都一概加以摈弃”，那么当代英美政治哲学那些技术化的、长程而且复杂的理性论证与推理就真的只能面对专家学者，而与普罗大众无缘。这是一个相当纠结的难题。我倾向于接受伯纳德?威廉斯对于苏格拉底工作的一个基本判断：对于“一个人应该如何生活”这样基本的生活问题，学院式的专题化研究很难给读者提供一个真正能够导致行动的答案，除非像苏格拉底所相信的那样，读者本人认识到这个答案其实是“他本人赋予他自己的”。\n\n　　……\n\n　　见事太明，行事则失其勇。对于行动者而言，果敢或许是一种美德，但是对于思想者而言，却需要用更加谨慎的态度去面对这个复杂的世界。据说，一个人在30岁之前不是一个自由主义者是没有良心的，到了30岁之后仍旧是一个自由主义者则是没有头脑的。我认为这个判断过于简单。事实上，这个时代对于思想者的要求会更多，它要求我们不要做没有头脑的愤青，不要做浅薄的自由主义者，不要做没有心肝的保守主义者，不要做替既得利益说话的国家主义者，不要做不负责任的无政府主义者，不要做一个理想高蹈的空想主义者。在设定了如此之多的禁区之后，最后你成为一个什么样的人，要每一个思想者细细斟酌。\n\n　　……\n\n　　自由、平等、博爱的真义时赋予人民太过崇高的权力和地位，将会释放出堪比长岛原子弹一样恐怖的能量。法国大革命的确唤醒了人民，法国大革命时期的人民也的确没有完全准备好，所以才会在雅各宾派的恐怖统治时期，至少16 594人因反革命罪而丧生断头台。毕希纳在《丹东之死》中描写的场景虽富戏剧感，但绝对真实： 市民们纷纷高呼：“谁能念书认字，就打死谁！”“谁想溜走，就打死谁！”“他有擤鼻涕的手帕！一个贵族！吊到灯柱上！吊到灯柱上！”“什么？他不用手指头擤鼻涕！把他吊到灯柱上！”然后，那个卢梭的信徒、道德纯洁到与死神一样“谁都无法收买”的罗伯斯庇尔登场了，面对一片打死他、打死他的叫嚷，他的回复是：“以法律的名义！”市民反问：“法律是什么？”罗伯斯庇尔答：“法律是人民的意志。”市民答：“我们就是人民，我们不要什么法律；‘所以’我们的这种意志就是法律。”从这个想想都让人不寒而栗的场景很容易得出一个结论：千万不要相信人民！在人民尚未准备好之前，不要发动人民！\n\n　　……\n\n　　读《旧制度与大革命》可知，当时法国人民服从统治者是出于习惯而非出于意愿，这是一种坏的服从，除此之外，还有出于恐惧而非出于意愿的服从，以及出于利益而非出于意愿的服从。出于习惯的服从是真睡，出于恐惧的服从和出于利益的服从则是装睡，前者被迫，后者不但心甘情愿可能还暗自窃喜。三种服从的可能中，出于利益的服从最糟糕，因为真睡可以被叫醒，被迫的假寐有一天会忍无可忍，而心甘情愿的假寐却永远都无法被叫醒。利益之争的确可以引发革命，但唯有价值之争才真正成就革命。因为只要还停留在利益之争的层面，就是可以用人民币收买的人民内部矛盾，而一个可以被收买的民族就不值得拥有革命的果实。\n\n　　……\n\n　　“人们原先就倾向于自顾自：专制制度现在使他们彼此孤立；人们原先就彼此凛若秋霜：专制制度现在将他们冻结成冰。在这类社会中，没有什么东西是固定不变的，每个人都苦心焦虑……金钱已成为区分贵贱尊卑的主要标志……如果不加以阻止，它很快便会使整个民族萎靡堕落。”——托克维尔\n","tags":["阅读"]},{"title":"摘抄整理（18.04.08）","url":"/clippings-18-04-08/","content":"\n　　（以下内容摘录自《解码生命》，克雷格·文特尔著）\n\n　　本杰明·弗兰克林曾说过：“自传通常只是作者回忆录，它不会提供任何不利于作者的信息。”乔治·奥维尔也认为如果写自传的人一味美言自己，那他很可能是在撒谎。所以他说：“自传只有在它反映作者一些不光彩的事情时才是可信的。”山姆·戈尔德温更是语出惊人：“我认为任何人至死都不应该写自传。”<!--more-->\n\n　　……\n\n　　无论如何我们都必须承认（包括我本人在内），尽管人类具有各种崇高的品质，但是，在他的躯体内仍然保留着他出身低微的永不磨灭的烙印。 ——查尔斯·达尔文\n\n　　……\n\n　　我对战争既厌烦又恶心。它的荣耀全是鬼话……战争就是地狱。 ——威廉·T·谢尔曼将军\n\n　　……\n\n　　医院附近不断地遭受到炮轰，就在我已做好心理准备，我要用我的M16避免成为5万多名年轻殉难者之一时，我再也不用执行这样的任务了。相反，我和每一个能用得上的人一起处理伤员。春节攻势改变了美国公众对战争的态度，也改变了我。关于治疗类选法的常识，我比任何一个20岁的年轻人应该知道的还要多，我学会了把那些你能救治的伤员和那些你不能救治的伤员分开处理，后者我只能在他们死去时帮他们减轻点痛苦。我不是在生命大学学习，而是在死亡大学学习，死亡是一名强悍的老师。\n\n　　……\n\n　　我认识到如果我对死亡和毁灭说再见的话，那么我也就对一个医生所关切的和我知道自己只有经过10年多的平民生活中紧张学习和训练才能恢复的那种医疗水平说再见了。我可能再也无法达到那种水平了，谁都知道我的受教育程度低，我连最基本的单词都拼不出，因此首先被送到越南。我还要向不确定的人生致意。\n\n　　……\n\n　　晚餐时我快迷失方向了，这时一群共和党的权贵们边喝酒抽烟边讨论要是杀死几个共产党和亚洲人的自豪感。对于他们来说，越共的顽强抵抗使我们更有理由杀死男人、女人和孩子，更容易做一些荒唐的事，比如把死水牛扔到井里使井水有毒性。关于无数死伤人员，我想大声呼吁，告诉他们上千名已致残或伤痕累累或已死的年轻人其实什么都没得到——除了向我们的敌人证明我们更愿意牺牲我们的青春。我离开了这个晚餐讨论，我借口说我有点飞机时差反应，所以回家了。\n\n　　……\n\n　　我带着一辆新摩托和一个妻子返回了密尔布，可是这两样没有一样特别受父母的欢迎。不过我现在的心理素质比刚从越南回来时好多了。我要试图理解在岘港看见的事情，而返回学校上学是最难迈出的一步。为了发现生命，我渴望开始我的教育，即使是从零开始。\n\n　　……\n\n　　这些变化——心跳加快、呼吸加深、血糖增加和肾上腺素分泌——是不同的并且看起来互不相关。在考虑了大量的这些变化后的一个不眠之夜，一个念头划过我的脑海，如果把它们认为是身体为最大努力地去战斗和搏斗做准备的话，它们就是一个很好的整体反应。 ——沃尔特·布拉德福·坎农，《一个研究员的处世之道》\n\n　　……\n\n　　当天，超过一万人参加了游行。我是带头人，后面跟着一副象征性的棺材。 由于肾上腺素激增，那天的事件除了一个细节外就是一个污点。一辆白色有篷货车一直慢慢地跟着我们。它的滑行门开着，里面的人不断地给我和其他学生领袖照相，我以为是新闻工作者，后来才知道他们是警察和美国联邦调查局的人。游行以和平的方式结束了。肯特州立大学枪击事件导致了一场历史上美国全体学生总罢课。其中4万人抗议，900多所美国高校停课。在整个骚乱、催泪瓦斯弹和棒棍中，有一个抗议形象仍然清晰地停留在我脑海里：那是一张加利福尼亚大学圣迭戈分校的新闻照片，上面有个学生自焚。\n\n　　……\n\n　　格米勒建议用鸟作为试验品。鸟是没有任何尿酸氧化酶的——所以鸟的粪便是白色（这就是尿酸）的。根据我的酶反应堆的大小，可以处理整个循环系统的鸟只能是一只很大的鸟。事实上，依据主治兽医所说，我需要一只重量在26～36千克的鸟。他知道附近农场可以帮我提供这样大小的一只火鸡，不过他还警告我说这只鸡相对较老，可能不可靠。结果发现这是一个保守陈述。 那只34千克的火鸡用卡车运来了，虽然它行动困难，翅膀庞大但它还是不停挣扎，引起一阵骚动。只有足够大的心脏血管实验室外科室可以进行这项工作。我们把两张手术桌摆在一起，架起我们的设备，用绳子系住火鸡的脖子，把它哄出笼子。到现在为止，我们的实验对象看起来更大更难驾驭了，但是一旦这只大鸟被固定住后——这项工作用了4名技术员——我就设法从它身上取了一些血液样本去测试它的尿酸值。 兽医不确定该推荐什么麻醉剂，建议我们试试戊巴比妥，一种巴比妥酸盐，每磅体重使用和狗一样的剂量。我给那只仍受制的鸟注入了合适的剂量。然后兽医又告诉我，他想起了有关火鸡生理功能的一些东西：我们可能需要更多的戊巴比妥。正好在这时，这只鸟好像也同意他的说法，它转动它的头，险恶地看着我。兽医要求我耐心等待，但是几分钟后，没有变化，我就重复注入了一定剂量。大鸟松弛了一些，但是没有睡意——一点不像我想要的一只昏昏欲睡的34千克重的火鸡的样子。我们决定加双倍剂量，也许大鸟现在看起来有点晕了。我注射了3倍多的剂量，最后，大鸟不省鸟事了。\n\n　　正当我再次放松时，火鸡醒来了，它试图鼓翼而飞，桌子、酶反应堆、静脉注射瓶和人们都跟着跳起来。主技术师的忍耐已经到达了极点，他给那只翻跳得挺欢的火鸡注射了整瓶麻药。他问试验是否能结束了，我同意了；试验很明显失败了。即使尿酸值已迅速下降，包括我自己在内，没有一个人再想证实这一事实。\n\n　　在那只大鸟到达之前，很多争论是关于实验后怎么处理这只大鸟。多数人的意见是我们应该在海滩开的毕业生晚会上把它烤了。那只曾经是我们尊贵客人的34千克重的死鸟现在出现问题了。我们以前没有考虑怎样给它褪毛，一只那样大的火鸡得煮半天时间。兽医带着忏悔和一个计划走上前来，原来他和他的同学们曾经因为学会了怎样用高压灭菌器烹饪大型动物才得以在兽医学校幸存下来：在这个美其名曰为压力锅的容器里煮了一段时间后，火鸡就很容易去毛了，然后拿去烧烤，在炉子上烧得焦黄。我很奇怪他如何精确地预先就知道用高压锅煮火鸡冒气后加压的时间。至今我也不知道呢。\n\n　　当100多人都聚集在火鸡和啤酒周围时，我是这时候的主角。我不能吃自己失败的试验品，仔细看了看学生们想从他们当中找到带睡意的，但是我好像是唯一感到疲乏的人。\n\n　　……\n\n　　利普曼在他的《一个生物化学家的遐想》一书中，描述了一项研究结果是怎样成为下一项研究的脚踏石的。在卡普兰描述他怎样把利普曼当做他的科学之父，而把奥图·迈耶霍夫当做他的科学曾祖父时，他旷达宁静，但是也有点激动。奥图·迈耶霍夫是德国人，1922年的诺贝尔奖获得者，他是一种基本新陈代谢的发现者——尤其是承担能量分子作用的三磷腺苷。卡普兰突然停下说我实质上是他的儿子，但是他明确表示这只是他的感觉。我愿意接受他作我的科学领域的父亲。\n\n　　……\n\n　　另外一个常客是威廉·麦克伊劳，大学校长，他以研究出萤火虫发光的生物化学成分而出名，他对我小里小气地使用小酒杯感到很吃惊，教我“像生物化学家那样猛灌”。他把苏格兰威士忌的瓶子倒立在一个大杯子里，然后慢慢数到三，这个仪式在一个晚会上他可以重复四次。\n\n　　……\n\n　　有记载说，一个怀抱大志的年轻人问法拉第他能成为一个成功的科学家的秘诀是什么，法拉第回答道：“秘诀有三个——工作、完成、发表。” ——J·H·格莱斯顿，《迈克·法拉第》\n\n　　……\n\n　　而当我们的私人生活出现裂痕时，我在布法罗的职业生涯开始的第一天也简直糟透了。我到学院的那天早上，就被邀请参加彼特·吉斯纳的研究生的论文答辩，他是系里资格较老的教授，我想他不过是想在从西海岸来的新同事面前炫耀他的学生。问题是我刚从一个治学严谨、爱挑剔的、不讲私情的大学氛围中来到这里，在那里任何傻瓜都不能愉快地混下去，你很快就学会无须私下去对别人品头评足。\n\n　　……\n\n　　当我因为一个女学生论文的浅薄、专业领域的无知和科学想象的贫乏而抨击她时，却没有想到我也不经意地攻击了她的导师和系里一位老资格。因为我在拉荷亚是一个做事主动的人，我从来就没有想到过研究生会不做他自己的工作而是扩展他的导师的工作。我也不知道在大学的文化中，学术有一个潜规则：“如果你让我的学生通过答辩，我就让你的学生通过。”我肯定给我的新同事留下了深刻印象，留着长发，扎着马尾辫，凌乱的胡须，一条20世纪70年代流行的涤纶喇叭裤，使我更增添了生气。怪不得我在布法罗剩下的那段时间中，我的那些著名的教授同事都没有向我这个暴发户科学家咨询有关他自己学生的品质的想法了。\n\n　　……\n\n　　回到布法罗，我计划在父亲节那天给他打电话，但是1981年6月10日的清早，妈妈打电话告诉我说父亲已经在睡眠中去世了。他只有59岁；他的医生诊断说是突发心脏病死亡。克莱尔和我第二天乘飞机回去安慰我母亲，并且安排父亲的后事。我们把他的遗体葬在旧金山要塞的军事墓地里，因为父亲觉得宗教带来的损害比好处多，我母亲拒绝在他的墓碑上有任何宗教符号，只让它矗立在十字架和星星中间。我哭了，因为他的逝去对我和我的家庭来说是一个痛苦的转变。我感到高兴，我父亲至少活着时看到了我的成功，而且对我来说，也与他建立了良好的关系。而越南已经教会我生命是有限的，而我的父亲的早逝又特别强调了这一点。\n\n　　……\n\n　　考虑到他有这么多的显著纪录，桑格是双诺贝尔奖获得者就不足为奇了（第一次诺贝尔奖，是由于1958年他对于蛋白质结构的工作，当时他拆开了大约50个组成胰岛素分子的氨基酸），尽管他的学术影响巨大，得到同行的敬重，但是桑格是一个安静的、谦虚的、不招摇的人。他说：“我没有多少学术才气。”\n\n　　……\n\n　　我现在知道在一个陷入困境的领域里，是不可能启动任何东西的。在实验室政治中，科学和数据只能位居第二，次于人格、骄傲和自负。\n\n　　……\n\n　　他询问起我的科学师承，我告诉他我怎样跟着生物化学家内森·卡普兰受训，“这就可以解释一切了，”吉姆说，“你是一个生物化学家。” 甚至今天，一想起我是如何误解这个评论我就发笑。我当时就以其字面意义上把它当做对我的恭维，因为我自己对于我的训练很自豪，它延续了四代生物化学家，只是后来我才知道沃森对生物化学家并不十分尊敬。几年后，在一个国家卫生研究院组织的庆祝我们的人类基因组序列的座谈会上，我开玩笑说我很愿意回首过去的好日子，那时最坏的事情莫过沃森曾叫我“生物化学家”。\n\n　　……\n\n　　罗伯特·库克迪根回忆说，测序政治是“多么的强烈，因为在分子生物学家中，对于大规模的测序，有相当多的反对者，甚至对于典型有机体，比如酵母、线虫和果蝇的测序也一样。当开始为人类DNA测序时，这些反对甚至更强烈……关于理想的测序方法和最好的策略也有相当多的争执……这些激烈的反对迫使沃森减少了他当初的承诺。”\n\n　　……\n\n　　我们最后在5月22日凌晨两点钟到达百慕大，这已是出发后第8天，共行程1500千米。我的两名船员直奔飞机场，我给克莱尔打电话，她那时确信我已经丧生了。就在我感到最兴奋、感到生存有望的时候，她已经核查了保险金条例（我把另一条船命名为百慕大快感号纪念我的这种感觉）。克莱尔第二天来看我，但是我没有陪她多久，我连续睡了两天。那时我并不知道，百慕大之旅将标志一场战斗的开始，这是一场更漫长、更艰辛、更有意义的生存之战，在这场战争里，我的科学、我的婚姻和我的名誉几乎处于危如累卵态势。当我完成了人类基因组的测序这段航行时，我同样感到难以置信地高兴，那种震撼人心的喜悦与11年前去百慕大时感受到的一样。\n\n　　……\n\n　　在这次沉闷的相遇几年后，几乎每个委员会的成员都接着申请由自己的中心来做基因组测序工作。那天我出现在他们面前时他们似乎为一个目的所联合，现在想来这个目的就是：在他们做之前，阻止任何其他人得到任何钱。询问列表很清楚表明，委员会认为技术尚不成熟，基因图谱不够，我们没有计划一个新方法。当托马斯·卡斯基正准备飞回得克萨斯时，他告诉我这是他职业生涯中最感到羞辱的一次经历。\n\n　　……\n\n　　那时甚至直到今天，我仍相信成功是感动那些批评家的最好策略：好的数据将最终战胜争论。\n\n　　……\n\n　　答案最终取决于世界实际上是怎样工作的，而不是取决于当前的权威说法。\n\n　　……\n\n　　科学进步所依赖的因素，按先后顺序可能是这几个：新技术，新发现，新思想。 ——悉尼·伯伦纳，2002年诺贝尔生理及医学奖得主\n\n　　……\n\n　　在科学界，荣誉属于使全世界信服的人，而不属于首先有这种想法的人。那些播下种子，收获它，研磨它并让全世界受益的人比那些止步于灵光一闪的人更有价值。 ——弗朗西斯·达尔文爵士，第一次优生学会高尔顿演讲\n\n　　……\n\n　　说我很沮丧是过于轻描淡写了。我对沃森很生气，因为他没有履行自己最初的诺言，也因为他让我经历了一个拖延了几年的评审过程，而我实在讨厌这个评审过程。我感到评审的最高议程不是科学，而是对金钱的支配。我知道我已经有了一个能改变基因组科学的突破性的方法了，我也知道我正在浪费时间、能量和情感与一群没有兴趣让我这样一个局外人分析人类基因组的家伙们做斗争。\n\n　　……\n\n　　阿德勒拜访了我的实验室，在我反对任何专利申请这件事上逼我。原因很简单，我告诉他，我们想让每个人能够利用我们的新方法和我们新发现的基因，并以不受阻的方式推动我们的研究。但是当然，这并不简单。就像许多科学家一样，我把秘密和专利等同起来，主要因为专利代理人的最初的所作所为确实延误了科学发现的公共推广。但是我现在懂得了一项专利就是政府与发明家之间成交的协议，它实际上是设计出来做相反的事：使信息可被更普遍利用，同时也给予发明家商业发展权。\n\n　　……\n\n　　在听证会上，我不仅描述了EST方法和由此产生的人类基因发现的快速发展，而且表达了我对国家卫生研究院的专利成就的关心，这个问题我很高兴把它公开。许多人被这个信息惊呆了，房间里一片寂静，然后沃森突然大叫道申请这样的专利是“彻底的精神病”，还说“事实上，任何猴子”都会用EST方法，他对此感到“恐惧”。杜克大学的与会者库克·迪根描述了整个事件，“沃森正在埋伏等待着，用大炮瞄准。”那时，库克·迪根是沃森的助手，他后来告诉我沃森已经在听证会开始前就作了准备。 我当然被他的反应惊呆了，因为沃森几个月前就已经知道了专利这件事，作为基因组中心的领导人他有许多机会正式地发表看法。一个旁观者描绘了我的震惊反应：“你可以看见匕首插进去——杀了他。”没有经过可能缓解或甚至防止冲突的非正式沟通，沃森选择了在媒体和两名参议员面前哗众取宠，针对该项专利的申请强烈谴责我，作为一个诋毁他已经感到的对其预算的威胁的手段，甚至沃森后来也承认他对我太苛刻了。 沃森说的对，我是一个灵长类动物。\n\n　　……\n\n　　在这段时期，拜访我的实验室的一个高级政府官员告诉我：“年轻人，你明显做得不错啊。”他没有说我是精通科学之人，所以我问他为什么我的成功如此明显：“这是华盛顿，我们通过他们敌人的质量来评价人，年轻人，你有一些最好的敌人。”\n\n　　……\n\n　　一旦我们确定了一个策略，我们就开始测序得病率最高的亚洲主要种族，孟加拉1975，而俄罗斯将测序一个次要的种族，所有的活动都将在世界卫生组织的监督下进行。 按协议上所要求的，我们的计划中涉及了一个国际小组，包括来自中国和俄罗斯的科学家们，以及从我实验室来的专业测序技术师特里·厄特拜赫。一切都进行得很顺利，除了我们的俄罗斯科学家，一个和蔼可亲的爱好喝酒的人。我到实验室经常发现尼古拉在长椅下睡着了，旁边放着空伏特酒瓶。起初我被告知尽力而为，因为大惊小怪可能会引起一个外交事件。但是他饮酒达到了必须送医院的地步，并且连续三天不醒来。后来他被送回家了。\n\n　　……\n\n　　吉娜描绘了奇怪但是熟悉的科学家们的画面，他们怨恨打破了他们的生活安逸的突破，好像他们是15世纪的抄写员，抱怨古滕堡新研制的印刷方法：“他通过一条通常不能识别功能的捷径从人类基因上拽出了新基因片段。批评家们说艰难的工作在于计算出一个基因的整个结构，并且测定它在人体内的作用。”但是她很好地描述了科学，而且使我感到轻松的是，她清楚地表明多数有争议的专利不是我的主意而是国家卫生研究院的。\n\n　　……\n\n　　告诉你我成功的秘密吧，我的力量完全来自于我的坚忍不拔的毅力。 ——路易斯·巴斯德\n\n　　……\n\n　　我的一位批评者约翰·萨尔斯顿指责我想利用它名利双收：“以他的科学工作获得同行的承认和赞誉，同时又迎合了他的商业伙伴的保密需要，从而从中渔利。”我请求宽恕，因为基于最后一点人性，我犯下了最为可憎的罪行：既拥有蛋糕又想吃掉它。\n\n　　……\n\n　　逆流游泳的人才知道河流的力量。 ——伍德罗·威尔逊\n\n　　……\n\n　　如果说一个同行吸引了主流媒体的注意力，科学家们感到有一点痛苦和愤恨的话，那么他们最不能原谅的就是当一个对手也挣了钱。像多数人们的努力一样，科学很大程度上是被嫉妒推动的。\n\n　　……\n\n　　我和法律顾问史蒂夫·派克以及几个TIGR的科学家一起走进了黑暗、浅褐色的会议室，当我看见在我们面前聚集着史克和HGS各个级别的人物时，我吓了一跳，大约总共有25个，还有超过一打的律师。经过四天的紧张详细的争论后，我终于领会到一个数百万美元的离婚协议是怎样流产的了，因为双方都在谁拥有银相框或者为什么购买房子或者谁将得到毛巾架之类事情上互不让步。在争议中，最后的关键点在于那份二级数据，这份174页的手稿的上面显示什么器官、组织或细胞系是被用来做EST分析的。在“骨”这个类下，是五个子类：骨髓、软骨肉瘤、胎儿骨、骨肉瘤和破骨细胞。破骨细胞会腐蚀骨头，这成为激烈争论的主题。 破骨细胞被认为在骨质疏松症中发挥作用，病症以骨头变软、脆弱为特征，这种病折磨了50%的65岁以上的高加索和亚洲妇女。我们从破骨细胞的cDNA文库中分离出几个新的蛋白酶基因，史克在黑塞尔廷和HGS的支持下坚持排除表格中的以“O”开头的单词，然后用无特征的“骨头”替换它。我们所不知道的是，史克为了发展治疗骨质疏松症的抑制剂已经专心细读了蛋白酶。连续4个小时，我们认真考虑了这根特别的骨头；到了激动的第4天，我们开始互相大声争吵起来了。我希望我的论文能发表出来，更重要的是，我想逃离这些愚蠢行为和苦恼之争，所以我屈服了，然后我离开了。我认为没有一个读者注意到基因组指南中第18页的表格2中的单词“骨头”。但是我注意到了，我的同事们也注意到了。这次妥协没有使我们感到自豪，但是至少我们现在可以继续在《自然》上发表我们的文章了。\n\n　　……\n\n　　如果你最终都不能让大家明白你的研究成果，那么你所作的工作就是没有价值的。 ——欧文·薛定谔，1933年诺贝尔物理学奖获得者\n\n　　……\n\n　　尽管我有了第一个活物种的基因组，但是有意思的事才刚开始。我叙述了我们曾怎样使用这个基因组去探究该细菌的生活规律，以及它是怎样导致脑膜炎和其他传染病的。作为这一重大事件的补充说明。事实上我们已经测序了第二个基因组来确信我们的方法有效，它是生殖支原体，已知的最小的基因组。当我的演讲结束时，全场观众一致起立给我长时间的诚挚的鼓掌。我几乎被掌声淹没了，因为它是这样地突如其来，让我意想不到，我之前从来没有在科学会议上看到过这样的自发行为。\n\n　　……\n\n　　就像在HGS数千专利申请变成现实一样，缪尔曼在离开HGS成为塞雷拉专利律师后还会继续这类专利申请，专利申请的真正价值就是让专利律师自己挣钱。这种极具侵犯性的专利策略的唯一可见社会效应就是它在科学界引起的令人难以置信的愤慨。\n\n　　……\n\n　　如果有谁像我一样沉醉于自己的研究领域那他就是受到了恶毒的诅咒。 ——查尔斯·达尔文\n\n　　……\n\n　　如果你正向一座没有被征服的山峰攀登时，你看见另一队登山者们在一条平行小路径向上攀缘，你会说什么？在做科学研究时，你可以建议一起工作——合作看起来比竞争更具有创造力——但是在DNA这件事上，看起来绝无可能。 ——莫里斯·威尔金斯，《双螺旋的第三人》\n\n　　……\n\n　　短暂的激动过后，我的科学直觉告诉我它认为这项计划不可行，然后它加了一句，“但是如果你要去尝试，那么我要和你一起。”\n\n　　……\n\n　　较之托尼·怀特，董事局是令人愉快的一群人。许多人私下告诉我如果他们花钱所完成的是比公众提前得到的人类基因组序列，那么他们就相信每股有几美分的风险是值得的。董事局赞成开办基因组公司，我将担任领导。我害怕接下来的冷静的财政盘问，我就走出来了，我感到这项计划比我长期以来所有的都好。这段温暖模糊的激情不会持续太久，因为当我私下与托尼·怀特见面时，他实际上说，他没有买进或者理解这个科学废物：他需要一个胜者，而且“很明显你就是一个赢家”。至少我们还有一个共同点：我们都不喜欢输。\n\n　　……\n\n　　我经常被指控在TIGR发展狂热追随者，如果那是指我曾经劝我的小组成员不要老盯着工资本，让他们相信自己的使命，让他们勇于承担一次科学圣战的话，那么我承认我的罪行。但是现在，当我正开始一场新的更大的圣战，独自测序人类基因组时，我没有带走所有的人。克莱尔不是唯一感到被抛弃的，我相信我理解其中包含的复杂感情。但是我仍然不能理解的是，被抛弃的感情是怎样转变成敌意的，敌意来自我一些最亲密的朋友们和同事们以及我曾雇用过、鼓励过和支持过的人们。\n\n　　……\n\n　　参与会议的40来人中，只有坐在U形桌子边的几个人——我们没有几个朋友——在我们出现时和我们打招呼。浏览一遍我们周围的脸庞，我们感到我们已走进一个葬礼队伍和行私刑的暴民之间。他们毫不掩饰他们的强烈郁闷。\n\n　　……\n\n　　这时，一个红头发的很眼熟的家伙发出了一声大叫，“但是，克雷格，你已经完全误用了兰德沃特曼模型，我当然知道了，我就是兰德。”\n\n　　……\n\n　　几年后，罗宾回忆说，“我不知道我是否该抽他一顿或是别的什么，但是我马上说，‘太好了，任何想帮助完成果蝇研究的人都是我的朋友，只要你将把所有的数据放进基因银行。’”因为期待他的回答，所以我许诺基因组一被测序和分析，我们就发表它。格里的肯定答复令人喜悦，并且他解释说如果他拒绝我，让我改为测序蠕虫，那么辛苦研究果蝇遗传学的“飞行团队”将会一枪毙了他。他还说，他希望弗朗西斯不会切断他的资助，以便他能完成补充工作。这个请求是明智的，因为弗朗西斯那时看起来有点苍白。他温顺地说，这可能是切实可行的，但是他必须搞清楚格里想的是什么。格里和我热情地握手。我发动了我科学生涯中最好的合作项目之一——如果不是唯一的话。我们三个人走回房间，在迈克完成了他的陈述后，我们告知大家测试项目将是什么。沃特斯顿和兰德问了几个问题，但是大部分问题充满敌意。就像一个深涉其间的人回忆的“每个人都像无头鸡一样乱跑”。“吉姆正在连呼犯规，弗朗西斯中风了。”还有人“低声咕哝格里正与魔鬼合作这样的话”。\n\n　　……\n\n　　迈克和我一离开，沃森就加入了人群，沃森拒绝和我们待在相同的房间，他被那个老鼠提议激怒了。正如他所说的，“保守地说，这种提议方式非常无礼。”沃森已经明显地把我比作希特勒（“克雷格想拥有人类基因组，就像希特勒想拥有世界”），而且，那天早饭时，他叫出弗朗西斯，问他是要成为温斯顿·丘吉尔还是内维尔·张伯伦；后来在与格里·罗宾的谈话中，他说：“我知道果蝇要变成波兰了。”我被安排在冷泉港会议上发表一篇主要演说，但是就算没听懂沃森所说的话的意思，这天受的刁难和恶意也已经足够了，所以我离开会场去了罗克维尔。 那天晚上，我的对手们开始出现内讧。较小的测序实验室的成员们被踢出随后的紧急会议，会议实际上由沃特斯顿和兰德一类经营的基因组的人所主持。正是埃里克为公共计划出了大力，才使得他们和我们在同一时间得到序列草图，虽然它存在许多不足，被像梅纳德·奥尔森这样的纯化论者们所诅咒的。在科林斯看来，尽管他发现与我合作是非常不愉快的，但是他至少表面上好像认真地采取了我的提议，或者他顾虑国会将因为他拒绝一份公私合作关系而攻击他，因为这份合作可以节省纳税人数以亿计美元。\n\n　　……\n\n　　并不是每个在公共计划中的人都被激怒了。萨尔斯顿评论那天晚上，他怎样在座谈会部分参与者们脸上看到了微笑，这些人没有涉足大规模的测序，当他们看见基因组实验室的成员们面无表情地挤在角落里……他们对这些高额资助的人类序列小团队的尴尬处境多少有些幸灾乐祸。28 刚刚从会议回来之后不久，\n\n　　……\n\n　　一个人在选择他的敌人时要特别仔细。 ——奥斯卡·王尔德，《道利·格雷的肖像》\n\n　　只有圣洁的头脑才能为了一个实验结果监视隔壁实验室与他们竞赛的某些人，并且丝毫不会心烦意乱。 ——詹姆斯·沃森，《倾情DNA：基因，基因组和社会》\n\n　　……\n\n　　对你的攻击者来说，不让他们看见你的畏缩和不安，可能比咆哮着回击他们更好（尽管后者可能十分让你满意）。\n\n　　……\n\n　　遗传的基本方面最后应该是格外简单的，这个信念支撑着我们的希望，即毕竟自然可能是完全可接近的。她被过分宣传的神秘莫测再一次被发现是由于我们的无知而引起的错觉。这是令人鼓舞的，因为如果我们生存的世界像我们的一些朋友要我们相信的那样复杂，我们可能会相当失望，因为生物学将永远也不能成为一门精确科学。 ——托马斯·亨特·摩根，《遗传的本质》\n\n　　……\n\n　　很多人问我，为什么在这个星球的所有生物中我选择了果蝇，就好像也有很多人问我为什么不直接测序人类基因组。事实是我需要一个测试平台；我需要进行概念验证。在我花费近一亿美元用我未经试验的方法测序人类基因组之前，我需要某些安心尺度。而每个生物学家都知道，在这个小飞虫上开展的研究曾扩大了生物学尤其是遗传学的阵地。\n\n　　……\n\n　　我为安慰自己准备了这样的冷敷：如果我们失败了，至少是很快地在果蝇这个项目上失败的，这比拖到人类基因组时失败还是要好点。但是事实是如果完全的失败都会是生物学最为壮观的灾难。现在格里也已经把他的名声拴在了这条线上，我们所有塞雷拉的人员都不会让他倒下的。在该项计划后期，我要马克·亚当斯领导这一计划，因为格里在伯克利有一个一流的团队，所以合作进行得很顺利。 如同我们在所有的基因组计划中所做的一样，我们开始认真考虑我们要排序的DNA。\n\n　　……\n\n　　最初的计划要求在6个月内完成果蝇基因组测序，即在1999年的4月，以便我们准备好对人类基因组发起进攻。我很难想象再有什么更为理想和公开的方法去证明我们的新策略是奏效的了。我为安慰自己准备了这样的冷敷：如果我们失败了，至少是很快地在果蝇这个项目上失败的，这比拖到人类基因组时失败还是要好点。但是事实是如果完全的失败都会是生物学最为壮观的灾难。现在格里也已经把他的名声拴在了这条线上，我们所有塞雷拉的人员都不会让他倒下的。在该项计划后期，我要马克·亚当斯领导这一计划，因为格里在伯克利有一个一流的团队，所以合作进行得很顺利。 如同我们在所有的基因组计划中所做的一样，我们开始认真考虑我们要排序的DNA。\n\n　　……\n\n　　整个事件中我都坚持一个想法：我们所做的一定要成功。有一千个理由我们会也应该失败，但是对我来说失败是绝不可能让我接受的。\n\n　　……\n\n　　由于纯粹的科学发现的刺激让每个人都极度兴奋，会议变得更加有趣了。我们正在提供对一个新世界的第一次观察，划时代的一瞥大大地超过了每一个人的想象。讨论我们想要的和理解所有这一切的意义的时间很快就不够了。马克举办了一个晚宴，但是它没能持续多长时间，因为每个人都很快地又溜回了实验室。午餐和晚餐很快就都在满是果蝇数据的电脑屏幕前解决。长期寻找的受体家族基因第一次被发现，同时还有令人吃惊的大分量的人类疾病基因的果蝇匹配物。每一次发现都伴随着相互击掌、口哨和惊叹声。令人惊讶的是，一对情侣竟然找到时间订了婚。\n\n　　……\n\n　　一般来说，一想到被抢先报道的前景，第一反应就是既绝望又希望，希望你的对手“某人”死去。你可能会考虑要放弃，但是这可能会让你没有任何明确的东西显示这几年的辛劳结果……所以很难不考虑重新尝试用你的对手相同的方法去和他竞争。虽然你现在落后，但是只要稍微比他聪明点你就可能赶上他。然后你的对手可能会彻底气疯了。 ——詹姆斯·沃森，《倾情DNA：基因、基因组和社会》\n\n　　……\n\n　　《华尔街日报》的一位编辑打电话问我成为美国经济最强大的人物之一有什么感受。“更穷了”就是我的答案。我正要成为第一名生物技术亿万富翁时，我的股票暴跌了，开始几个小时就直线下跌3亿美元。\n\n　　……\n\n　　在人类历史（还有动物）的长河中，那些学会合作和随机应变的人（或动物）最流行。 ——查尔斯·达尔文\n\n　　在一定的时间跨度内，某种重复劳动可能是唯一达到目的的途径。没有两个人会确切地走相同的路，如果你有钱并且想行动得快一点的话，那么把你所有的努力都放在一个人的直觉上是不合逻辑的。 ——詹姆斯·沃森，《倾情DNA：基因、基因组和社会》\n\n　　……\n\n　　几乎两个世纪之前，在这个大厅，这层楼，托马斯·杰斐逊和一个可以信任的助手传播了一张壮丽的地图——一张杰斐逊曾长时间祈祷，在他的有生之年会看到的地图。那个助手就是梅里韦瑟·刘易斯，地图是他勇敢地探险美国边境，一直到太平洋的产物。这张地图确定了轮廓线，永远地扩大了我们的大陆以及我们想象的边界。\n\n　　……\n\n　　33年前，作为一个年轻人在越南的医疗队服役时，我直接感受到我们的生命是多么的脆弱。那些经历激发了我对我们体内无数的细胞是怎样互相作用从而创造和维持生命的研究的兴趣。当我直接目击了一些人经受了他们身体遭受的破坏性的伤残而活下来，而另一些人放弃了对非致命外伤的治疗而死去之后，我意识到人的精神至少和我们的生理机能一样重要。我们清楚人类的总数比我们基因的总数多得多，就好像我们的社会比我们个人的总数大得多一样。在我们的基因里，我们的生理机能建立在复杂、表面上有无数相互作用的基础之上；就像在社会的环境里，我们的文化建立在我们的互相作用之中一样。在解读20多个物种的DNA密码时，从病毒到细菌到植物再到昆虫，现在是人类，我的同事和我最好的一个发现是在进化过程中，我们都与遗传密码的共性有联系。当生命简化到它的最本质之处，我们发现我们与地球上的每个物种都有许多共同的基因，我们并非如此地与众不同。你可能会惊奇地发现你的序列比90%蛋白质相同的其他动物的序列大一些。我相信我们提供给世界的基本知识将对人类环境、疾病的治疗以及生物连续性中我们对于我们的处境的看法有深远的影响。基因组序列描绘了科学和医学的一个新起点，它对每一种疾病有潜在影响。拿癌症来说，在美国每天几乎有2000人死于癌症。你们今天早上已经听到的科林斯博士和我所描述的基因组工作和将要开展的研究都是被这个信息所催化，鉴于此，在我们有生之年，有可能减少癌症死亡数目到零。新的治疗方法的发展需要在基础研究上继续加大公共投资，也需要生物技术和制药公司把新发现转化为新药物。\n\n　　……\n\n　　有人曾对我说测序人类基因组将有损人性，因为把生命的奥秘暴露无遗。诗人们也争论说基因组测序把世界简化成杀菌与还原，这将剥夺他们的灵感。殊不知事实恰恰相反，组成我们的遗传密码的无生命的化学物质是多么复杂和奇妙，它们将引发人类精神不可估量地升华，这应该可以使诗人和哲学家们感动数千年。\n\n　　……\n\n　　总统感谢我，因为我的“那些不同寻常的陈述”，以及“当我们把这一切都完成时，我们将能活到150岁，那时，年轻人仍然能相爱，老年人仍将可以争吵一些50年前就该解决的事——我们有时候都将做愚蠢的事，我们都将看见高贵的人类难以置信的能力。这是伟大的一天。”它确实是。\n\n　　……\n\n　　一个科学家应该没有愿望，没有感情——仅仅有一颗石头心。 ——查尔斯·达尔文\n\n　　……\n\n　　作为最后一招棋，兰德和科林斯威胁说，如果不拒绝我的文章，那么他们就不在《科学》杂志上发表他们自己的基因组文章，而是把文章投向了它的对手《自然》。也许他们已经忘记了沃森是怎样告诉《自然》杂志，当他1994年阻止我发表我的人类基因组说明性文章时，美国基因组科学家没有一个会再在《自然》上发文章了。这件事再次说明，为了正当目的，可以不择手段。\n\n　　……\n\n　　对基因总数做较大估计的失误基于简单的假设，人们假设基因是均匀分布于基因组上的，这个假设最后证明是不正确的。事实上，有一些区域（我们称之为沙漠）包含数百万的遗传密码碱基对，但是包含的基因很少甚至没有，比如13和18号染色体，还有X染色体。相比较而言，一些区域或染色体基因密集地聚集在一起，比如19号染色体。对我来说，这个分布令人着迷，我马上提出问题，关于人类的进化到底是什么。比较果蝇的密码可以给出强烈暗示。因为我们有一个共同的祖先，我们和果蝇共享一大套基因，而我们不共享的关于6亿年进化的基因很有意义。这些基因，包括与后天免疫力，细胞内和细胞间的信号传导途径，尤其是中枢神经系统有关的基因数目的迅速增长使我们成为唯一的人类。这类增长发生在我们染色体的基因密集的区域多于其他区域，尤其是通过复制一个给定范畴的基因。比方说，与细胞间沟通有联系的基因一再复制，能够在这些基因丰富的区域发生突变并且进化出新的功能。沙漠易于连接到更古老的区域和我们密码的功能，后者与维持生命的基本过程有联系。 看见发表于《科学》上的文章得以出版，这给了我所经历的最强烈的满足感。尽管有激烈的战斗，荒谬的言行，鸡毛蒜皮的挑剔和不断的埋怨，以及我们做的事是毫无希望的、不可能的和不能实行的预言，但是我们已经成功了。这是一个万分甜美的时刻：我已成功地测序了人类基因组，不是在15年内，而是在9个月内，由最棒的一个科学小组创造了历史。任何回报、奖品和赞扬都不可以代替这种美妙的感觉。 很明显，当我们在《科学》杂志上按计划发表我们的成果文章时，公共计划采取威胁政策联合抵制《科学》杂志，他们开始只在英国杂志《自然》上发表文章。这对我是好的，因为我们现在将拥有自己的《科学》封面了。直至今天，一些《科学》杂志的职员仍然很不安，因为兰德和科林斯等人仍然只在《自然》上发表他们的基因组文章。\n\n　　……\n\n　　不幸的是，我的对手们继续努力一点点地破坏塞雷拉的成就。他们下一个攻击是发表在《国家科学院学报》上的一篇文章，它声称我们的序列并不优于政府/威尔康信托基金序列，他们说它很强地依赖于他们的序列。根据萨尔斯顿所说，全基因组霰弹枪法没有声称的那样奏效，尽管桑格中心的理查德·德宾已经承认了塞雷拉的序列在某些方面“比我们的好些”。兰德认为它是一个“彻底的失败”和“基因组的凉拌色拉”而一笔带过。他们利用一些他们原本甚至都不相信的数学论据来严重地损害我们的工作信誉。我们的吉恩·梅尔斯，是由此受伤最深的人，他既痛苦伤心又愤怒。尽管我们考虑过采取法律行动，但是我决定用科学杂志上的数据和科学事实来反击更好些，永远铭记我的良师益友内森·卡普兰的话，“真相终将大白于天下。”\n\n　　……\n\n　　在一件能使我快乐的事情上寻求安慰：我启动我的船，动身前往圣巴特斯碧蓝的大海航行，它位于法国的时尚区加勒比海。无论何时我努力理解我的生命和科学，无论何时我寻求新的挑战，我都面向广阔的大海，它是我的一个避难所。\n\n　　……\n\n　　我在一件能使我快乐的事情上寻求安慰：我启动我的船，动身前往圣巴特斯碧蓝的大海航行，它位于法国的时尚区加勒比海。无论何时我努力理解我的生命和科学，无论何时我寻求新的挑战，我都面向广阔的大海，它是我的一个避难所。航行到看不见大陆了，接受不到手机和电视信号了，我找到了平静，并且有时间去思考、重新振作和恢复元气。\n\n　　……\n\n　　有机生命在无尽的波涛之下产生，在海洋的珍珠洞里孕育成长；先为幽芥之形，虽球面镜下不可观，泥上移动或水中穿梭；他们，世代繁盛，获得了新的能力，呈现了大的肢体…… ——伊拉兹马斯·达尔文，《自然的殿堂》\n\n　　……\n\n　　虽然我发表了第二篇辩驳的文章，但是我一直都很清楚，数据是赢得科学争论的唯一方法。\n\n　　……\n\n　　我们可以继续深入研究。我们是否可以利用我们当前的知识去设计和用化学方法创建一种新物种的染色体，从而产生第一个自我复制的人工生命体，该人工生命体可以用来充当新的替代能源的来源？这个提议肯定会导致基础生物学家的反感，但是这只是对上千年来无数人利用生物学过程制造有用产品的早期研究的自然扩展。生物技术可以上溯到几千年前，当时的酿酒发酵制作了第一种生物燃料：酒精。\n\n　　……\n\n　　已有证据表明这些微生物可以在石化工业方面实现革命性突破。杜邦是许多传统的石化公司之一，它依赖便宜的石油供给，把石油转化为各种聚合物，这些聚合物在衣物、地毯、绳子和防弹背心中广泛使用。现在他们正在开展最新的商业试验，该试验从使用石油转换到使用饲养在糖培养基上的工程细菌作为一个可更新的碳原料，他们采用的方法和植物从空气中固定二氧化碳的方法相同。\n\n　　……\n\n　　第一批人工合成基因组是一个自然有机体的精简型版本，只是开始。我现在想再往前走。我的合成基因组公司正试图开发盒子——基因模块——把有机体转化成一个可以从太阳光和水制造干净氢燃料或吸收更多二氧化碳的生物工厂。从这里，我想把我们带离海滨进入到未经探索的水域，一个进化新阶段，直到一天，一个DNA基因物种可以坐在电脑前设计另一个物种。我梦想，有一天我们通过产生真正的人造生命来展现我们理解生命的软件。以这种方式，我想发现一个被解码的生命是否真的是一个被理解的生命。\n","tags":["阅读"]},{"title":"摄影练习（18.02.17）","url":"/photography-practice-on-18-02-17/","content":"时间：2018-02-17\n地点：吴淞炮台湾湿地森林公园\n设备：索尼 ILCE-6000 + SELP1650\n\n![](/uploads/photography-practice-on-18-02-17/1.jpg)\n<!--more-->\n\n![](/uploads/photography-practice-on-18-02-17/2.jpg)\n\n![](/uploads/photography-practice-on-18-02-17/3.jpg)\n\n![](/uploads/photography-practice-on-18-02-17/4.jpg)\n\n![](/uploads/photography-practice-on-18-02-17/5.jpg)\n\n![](/uploads/photography-practice-on-18-02-17/6.jpg)\n\n![](/uploads/photography-practice-on-18-02-17/7.jpg)\n\n![](/uploads/photography-practice-on-18-02-17/8.jpg)\n\n![](/uploads/photography-practice-on-18-02-17/9.jpg)\n\n![](/uploads/photography-practice-on-18-02-17/10.jpg)\n\n![](/uploads/photography-practice-on-18-02-17/11.jpg)\n","tags":["摄影"]},{"title":"数模美赛2018流水账及反思总结","url":"/american-math-modeling-contest-2018/","content":"\n## 　组队\n\n　　去年十月初的一个阳光明媚的下午，笔者突然收到天王发来的一同参加美赛的邀(you)请(pian)。我想，一来高中时就学过数学建模的拓展课程，虽然学得不深但还是有着一些兴趣，二来大学生活如此悠闲，也想给自己找点事情做（结果后面这句被日后的自己实力打脸），于是两人一拍即合，在初步了解了美赛的大致参赛时间与背景之后，我便当即同意加入了天王的队伍。随后天王又拉了一位理院同学来，我们的队伍也就此正式组建完成。<!--more-->\n\n　　我们伊卡斯特皇家建不出模型队（此为非官方队名）有三名成员：天王、吃瓜陈和买饭陈（即笔者）。我来自计算机专业，先前有点编程基础；天王与吃瓜陈则都是数学专业的，理论水平相当强劲。我和天王的英语水平差不多，而吃瓜陈在这方面稍胜我们一筹。因为都是大一萌新，所以我们团队并没有严格的划分出程序员、建模员与写手这三个职位。基本上，由我来负责买饭……\n\n## 　散漫学习期\n\n　　组队完成以后，就开始比较自由地学习了。在十月份到十一月份期间，我主要学习并掌握了MATLAB的语法、语言特性等等内容，以及一些简单的规划模型。然而期中考之后我莫名其妙地蜜汁跑去研究LINUX操作系统源代码然后就把数模扔到了一边……嗯……直到期末考试之前就再也没动过。\n\n## 　寒假前的宣讲会与大扫荡\n\n　　寒假正式放假之前（18.01.25），在MITA学长学姐的带领下，我们队全员和其他几个萌新一起去吃了韩式自助烤肉火锅。然而笔者依旧没能摆脱“一吃烤肉就会拉肚子”的神秘诅咒……听着学长大致解释完数学建模的意义以及如何备战后，笔者又和天王跑去了图书馆。在充满学习气息的优雅氛围中宣泄了一番自我后，我们扫荡了一波图书馆，借走了几本英语、MATLAB应用以及数据分析相关的书。其中的一本《数据挖掘与分析：概念与算法》的印刷、装订质量都非常好，内容难度较大但应用性强，特此马克，希望日后能有机会仔细研读。\n\n## 　全力备战阶段\n\n　　随着寒假的开始，距离美赛的到来只剩下了十数天左右，我们都进入了全力备战状态。我先试着粗略刷了一遍蓝书，感觉跨越性确实太大而且前置知识完全不够，一轮下来基本全程懵逼脸。随后笔者回头重温了一遍MATLAB，可感觉在完全不了解对矩阵的相关操作的意义下去学实在是太吃力，于是赌了一把，找了本评价非常好的线性代数教材（《线性代数及其应用》）先开始啃了起来。事实证明，这一选择带来了非常好的效果：对MATLAB的直觉性使用的正确率大大提升，并且对理解其他教材上与矩阵、向量有关的公式带来了极大地便利。随后试着精读了一遍黄书，然而能真正理解的只有前数章……接着去找了本概论与统计的教材，精读了几篇O将论文，又和小伙伴约了几次饭（其实是约学习），然后就迎来了美赛。\n\n## 　选题\n\n　　DAY1的一早准时从床上跳起来把外文论文的下载的页面先全准备好，然后点开题目发布页静静地狂按F5。在正式比赛开始之前的十分钟左右，有一个镜像站点不负众望地提前公布了题目，于是立刻下载并随手转发到周围的几个群里。队友此时也以及上线了，稍微分工了一下阅读内容，然后开始读题。我读的是AB题，A题物理性太强，跳。B题数据太烦，跳。遂询问队友情况。C题，跳。D题，跳。E题，跳。F题……我屮艸芔茻F题是来压轴的嘛怎么这么难（黑线脸）果断跳。嗯，然后发现没题目了……\n\n　　现把各个题目大意罗列于此：\n\n　　A题：分析电波在海面的反射传播\n\n　　B题：分析主流语言使用人口的变化\n\n　　C题：分析各州能源发展概况\n\n　　D题：优化充电桩的分布策略\n\n　　E题：分析地区稳定性受气候变化的影响\n\n　　F题：量化私人信息的价值\n\n　　和队友交流了一番之后，感觉D题可能会更适合我们，遂开始全员查找D题文献。\n\n## 　换题\n\n　　你想啥呢，不存在的……\n\n## 　找数据\n\n　　研究了一下特斯拉的官网，发现他们给的充电站地图用的是GoogleMAP的API做出来的，然后看了一下源代码发现……他丫的居然把整个地球上的所有充电桩的位置当做常量放在了发送来客户端的脚本代码里（第二次黑线脸）……不过也好方便我处理数据。随后发现，除了原始数据以外还有一些需要一个个访问查询的附加数据（地址、所属国家、具体的充电器数量及功率、提供的充电站类型以及服务类型等等……）。于是直接把我之前准备的某吧某图板爬虫程序拿出来魔改了一番，测试了几个数据后开始跑。但是，蛋疼的来了，他特斯拉返回的数据里的\"supercharger\"字段玩出了三种错误！我读文献读到一半切回爬虫发现爬虫崩溃了……遂查错，修改代码，再跑，然后读文献。过十分钟切回来发现爬虫又崩溃了……于是重复上述操作然后再等……\n\n　　终于把令人智熄的数据整理上传之后，又上wiki去查了其他可能用得到的相关数据，也访问了几个大型的数据库，下载下来一个两百多兆的高速公路的拓扑结构数据，然后解压下来1.5G，遂尝试用MATLAB读取。结果MATLAB卡死……然后换了台I7_7700K+GTX1060+16G内存的台式机读取，依旧卡死……内心有些崩溃，随手把数据上传，队友试了几下也都表示放弃。\n\n## 　胡乱建模\n\n　　第一天主要是找文献和处理数据，第二天才开始认真地读起文献来。仔细阅读了几篇文献后发现有个叫巴斯扩散模型的东西，遂wiki之，发现居然可以直接那来解决电动车市场份额问题，窃喜。随后试着导出抄代码用MATLAB画出了图，发现是个S曲线，天王看后马上敏锐地联想到了逻辑回归模型的图形，随后也搞出了个方程式，至此一个问题基本解决。然后看天王那边已经开始试着用图论解决问题了，他首先提出了“宏观”与“微观”的概念，分别指人口密集的居住区之内与之外（或者可以理解为研究城市之间的高速公路上的分布情况与研究城市内的分布情况的两种不同的方法）。天王上来先用一套图论组合拳（Floyed最短路加上线性规划解网络流）解决了宏观也即高速公路上的问题，然后微观模型他没想到什么可行的方法。随后我读了几篇论文，略加思索，连抄带蒙闭眼糊出来了一套自以为可以解决微观尺度上的问题的模型，发群里，队友读后表示还算可行（可实际上我忘记考虑农村、城市、城镇之间的差异了Orz还存在着其他各种明的暗的问题……）。然后又去抄了一篇论文的方法，借了冈珀茨模型来预测车辆市场的增长情况。至此，建模阶段基本完成。最后确定下来的微观模型是在我原先设想的基础上进行了修改的一个基于条件限制的优化模型。\n\n![巴斯扩散模型演示图表](/uploads/american-math-modeling-contest-2018/1.png)\n\n## 　写程序\n\n　　简直丢人。我一个计算机专业的学生，瞪着那几个应该是已经被我完全理解了的破方程，硬是没能把程序给倒腾出来。天王还算争气，把那个图论程序写了出来，还找到了爱尔兰的数据，然后把程序跑了一遍，得到了非常满意的结果。\n\n## 　闭眼编数据\n\n　　写不出程序，情况就相当尴尬了……无奈之下我只好去编结论……首先是大致猜测了一个可能作为答案的数值，然后用了某种不太离谱的随机数生成算法在美利坚合众国的国土上随意建站。当然，对爱尔兰共和国也是如此操作了一番。在论文中，我美其名曰“在使用模拟退火算法计算出合理的分配量后使用计算机模拟程序利用随机化方法生成的可能的分布方案之一”\n\n## 　美术建模\n\n　　上传了生成好的坐标数据和结果示意图后，天王看了一下，略加思索：不行，你看这个站它被你建到海里了。我：！（第三次黑线脸）我气冲丹田，刚欲打开源代码修改一番参数时，天王说道，“没关系，小问题，我拿QQ截图处理一下就行。实在不行开一下Photoshop也肯定能解决。”我一惊，顿然感觉似乎领悟到了“美术建模”的真谛……\n\n![最终可选分布方案预览](/uploads/american-math-modeling-contest-2018/2.png)\n\n## 　最后的润色\n\n　　最后一天的下午六点左右，各项工作趋于完成，然后天王试着审核了一下草稿，结果……“这里什么逻辑啊！我要报警啦！”天王卖萌的声音不绝于耳，同时也暗示着我们一整晚艰苦卓绝的重写工作即将拉开项目。究其原因，是初期队友间的沟通不够以及一开始选择的论文框架有着很大的问题。在我和天王找数据、建模、编程、话题期间，吃瓜陈一直在跟随者我们的进度做翻译工作，但是很多时候我们并没有能够清晰表达自己的思想，也没有在其翻译完成后对内容立刻进行审核，导致不少译文逻辑不通或缺少了后来增加的意义重大的修改。具体的重写过程太过纷繁芜杂，此处不加赘述。总之我们一直改到了第二天四点，期间论文框架经过一次大变动，超过60%内容被重写，而摘要更是被反复重写了多次，而且改完内容之后还要通读全文查找语法错误和拼写错误……于是最终在天王的带领下，我们逐一完成了对最终成品论文的审核。\n\n## 　提交论文\n\n　　天王那边刷新几次都进不了官网，我挂了VPN等了会儿就成了，然后进去迅速打钩。随后我去洗了个澡，期间天王他们成功发出了邮件，再之后大家互道“新年快乐”、“晚安”就结束了这次紧张刺激的美赛。现在已确认邮件被官方接收并录入成功。\n\n## 　☆和小姐姐一起去看展☆\n\n　　嗯第二天睡了大半天后第三天和女票喜马拉雅美术馆参观了「奇迹:贝利尼家族与文艺复兴」特展。展品超多，也很有意思。什么？照片？别想了不会给你们看的。\n\n## 　经验反思与总结\n\n　　我啥都不会，也没想到什么经验……建议工科专业同学大一参赛前先学一下线性代数？还有，模型写出来即使解不出来也可以编个结论吹水一番（还是别学我了……）。\n\n##### 　关于编程\n\n　　用Java写爬虫真的会比较痛苦……有空还是得学一下Python……Matlab是万金油但是用来写出了矩阵操作以外的内容都会感觉浑身难受。另外，用Matlab自带的工具箱对数据进行拟合比一次次改原码求结论再画图要高效多了（感谢天王指出）。\n\n##### 　关于英语\n\n　　英语弱鸡表示无话可说。感觉吹水部分你直接照着写作文的方式用华丽的词语堆上去把……\n\n##### 　其他\n\n　　如果可以，还是让所有成员聚在一起比赛比较好。这次线上合作让我感觉到了身边没有同学刺激一波的自己是多么的懒散……嗯博主和天王以及决定参加今年九月份的国赛了，不出意外的话各位到时候再见！\n\nUPD：后来拿了谢谢参与奖……所幸之后国赛拿了一次上海市一等，这几年建模的时间还算没有白费。\n\nUPD2：后来分手了。\n","tags":["数学建模","破事水"]},{"title":"摄影练习（17.12.22）","url":"/photography-practice-on-17-12-22/","content":"时间：2018-02-17\n地点：南京航空航天大学将军路校区\n设备：索尼 ILCE-6000 + SELP1650\n\n![](/uploads/photography-practice-on-17-12-22/1.jpg)\n<!--more-->\n\n![](/uploads/photography-practice-on-17-12-22/2.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/3.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/4.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/5.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/6.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/7.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/8.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/9.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/10.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/11.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/12.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/13.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/14.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/15.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/16.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/17.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/18.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/19.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/20.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/21.jpg)\n\n![](/uploads/photography-practice-on-17-12-22/22.jpg)\n","tags":["摄影"]},{"title":"摄影练习（17.11.19）","url":"/photography-practice-on-17-11-19/","content":"时间：2017.11.19\n地点：华东理工大学奉贤校区\n设备：索尼 ILCE-6000 + SELP1650\n\n![](/uploads/photography-practice-on-17-11-19/1.jpg)\n<!--more-->\n\n![](/uploads/photography-practice-on-17-11-19/2.jpg)\n\n![](/uploads/photography-practice-on-17-11-19/3.jpg)\n\n![](/uploads/photography-practice-on-17-11-19/4.jpg)\n\n![](/uploads/photography-practice-on-17-11-19/5.jpg)\n\n![](/uploads/photography-practice-on-17-11-19/6.jpg)\n\n![](/uploads/photography-practice-on-17-11-19/7.jpg)\n\n![](/uploads/photography-practice-on-17-11-19/8.jpg)\n\n![](/uploads/photography-practice-on-17-11-19/9.jpg)\n\n![](/uploads/photography-practice-on-17-11-19/10.jpg)\n\n![](/uploads/photography-practice-on-17-11-19/11.jpg)\n\n![](/uploads/photography-practice-on-17-11-19/12.jpg)\n\n![](/uploads/photography-practice-on-17-11-19/13.jpg)\n\n![](/uploads/photography-practice-on-17-11-19/14.jpg)\n","tags":["摄影"]},{"title":"摄影练习（17.11.22）","url":"/photography-practice-on-17-11-22/","content":"时间：2017-11-22\n地点：华东理工大学奉贤校区大学生活动中心大剧场\n设备：索尼 ILCE-6000 + SELP1650\n\n![](/uploads/photography-practice-on-17-11-22/1.jpg)\n<!--more-->\n\n![](/uploads/photography-practice-on-17-11-22/2.jpg)\n\n![](/uploads/photography-practice-on-17-11-22/3.jpg)\n\n![](/uploads/photography-practice-on-17-11-22/4.jpg)\n\n![](/uploads/photography-practice-on-17-11-22/5.jpg)\n\n![](/uploads/photography-practice-on-17-11-22/6.jpg)\n\n![](/uploads/photography-practice-on-17-11-22/7.jpg)\n\n![](/uploads/photography-practice-on-17-11-22/8.jpg)\n\n![](/uploads/photography-practice-on-17-11-22/9.jpg)\n\n![](/uploads/photography-practice-on-17-11-22/10.jpg)\n\n![](/uploads/photography-practice-on-17-11-22/11.jpg)\n\n![](/uploads/photography-practice-on-17-11-22/12.jpg)\n\n![](/uploads/photography-practice-on-17-11-22/13.jpg)\n\n![](/uploads/photography-practice-on-17-11-22/14.jpg)\n\n![](/uploads/photography-practice-on-17-11-22/15.jpg)\n","tags":["摄影"]},{"title":"从零开始切颗树：树链剖分原理及实现详解","url":"/arp-heavy-light-decomposition/","content":"\n## 引言\n\n广义的**树链剖分**指对树上的一系列节点按照某种规则进行划分，使得对树的操作能够转化成对链的操作，并使用其他高效的数据结构来维护链的状态，从而有效地减少了某些运算或操作的代价。而狭义的树链剖分，即指**轻重链剖分**（_Heavy-light Decomposition_），又称**启发式剖分**。本文要讲述的是最简单的一种树链剖分的实现，即**使用线段树维护的树链剖分**。有兴趣的读者可以试着在理解本文的基础上，尝试使用其他数据结构来代替线段树。\n\n<!--more-->\n\n## 原理\n\n为了便于讲解，笔者将整个算法的实现过程分为以下几个步骤：剖分、映射、维护、查询。接下来让我们依次看看每个过程的实现方式及其原理。\n\n### 剖分\n\n剖分即将树分解为一条条链。轻重链剖分的核心技巧是构造出了**轻重结点**的概念。正如树可以递归定义一样，我们也可以递归地定义轻重结点。让我们选取某个结点 u 作为讨论的对象，则有：\n\n**重结点**：若 v 是 u 的一个子结点，且以 v 为根的结点的个数最多，则称 v 是一个**重结点**，或称 u 的**重子结点**是 v （亦称 v 是 u 的**重儿子**）。\n\n**轻结点**： u 的其他子结点。\n\n**重边**： u 与其重子结点所连成的边。\n\n**轻边**： u 与其轻子结点所连成的边。\n\n**重链**：重边连接而成的链。\n\n**轻链**：轻边连接而成的链。\n\n经由上文的定义，我们不难推出以下两个性质：\n\n１. 若 v 是 u 的一个轻子结点，则 v 的子结点数必定小与 u 的子结点数的一半。（提示：反证法。）\n\n２. 从根结点到任意结点的路所经过的轻重链的个数必定都小与 logn。\n\n（笔者的参考资料里有两位作者都提到了这两个性质，其中之一在表述时还出现了笔误。笔者以为第二个性质是保证了整个算法的效率，但对于第一个性质，笔者其实并不明白它有什么卵用。如有了解的读者欢迎发送邮件或在 QQ 上为笔者点明。）\n\n接着我们来考虑剖分的具体实现步骤：\n\n**父结点**、**结点的深度**、**子结点的数量**以及**重子结点**都可以通过一次**深度优先搜索（Depth-First-Search, 或称 DFS）**得到。（有文章提到使用 BFS 也可以，笔者并未验证，欢迎读者自行测试。）而通过第二次 DFS，我们可以得到**重链**以及两个非常重要的序列：**每个结点的 DFS 序**，以及**某个 DFS 序所对应的结点**。这两个序列将是后续操作的基石。\n\n### 映射\n\n映射操作是把剖分得到的链以**线段树**的形式储存并进行维护。在本文的例题里，数据以点权的形式存储。如数据为边权，则只需将某个结点与其父结点之间的边权记作该结点的权值即可。（感谢 julaoczf 指出）\n\n那么，为什么要用线段树来存储？让我们重新回顾一下上一步的操作。在上一步里，我们通过两次 DFS 得到了每个结点的几乎所有有用的信息，而在其中，我们特地保存了结点于 DFS 序互相之间的映射关系（即指**每个结点的 DFS 序**与**某个 DFS 序所对应的结点**）。注意一下这里有个技巧：第二次 DFS 时我们优先选择重子结点作为下一层搜索的开始，那么我们得到的 DFS 序会有以下的特性：**任意重链上的边在线段树上的位置必定为一个连续的区间。**同时，由于 DFS 序本身的特性，我们还会得到一个附带效果：**以某个结点为根节点的所有结点在线段树上的位置必定为一个连续的区间。**\n\n这样，我们就可以把所有针对树上的路以及子树的查询与修改操作转化为区间操作，而线段树正是用于高效区间操作的利器！\n\n映射操作的具体实现步骤则相对简单，只需以**某个 DFS 序所对应的结点**为下标对原数据数组构建线段树即可。\n\n### 查询\n\n树链剖分主要支持两种类型的查询：**任意两结点所连成的路的权值之和或其极值**、以及**以任意结点为根节点的子树的权值之和或其极值**。前一种查询的过程本身和求某两个结点的**最近公共祖先（LCA）**的过程极为相似，而后者更为简单，所以笔者先从后者开始讲解。\n\n假定 u 和 v 是树上的两个结点，且 u 的深度小于 v ，则我们可以按照以下步骤查询 LCA：\n\n１. 判断 u 和 v 是否在同一条重链上，如果是，则 u 就是 LCA(u, v) 。反之，跳转到２。\n\n２. 使 u , v 分别等于他们所在的重链的顶端结点的父结点。\n\n３. 使 u 的深度小与 v ，然后跳转到 1 。\n\n算法的思路十分直观，即让 u 和 v 不断向上收束，直到 u 和 v 在同一条重链上，然后返回其中深度小的那个。\n\n**任意两结点所连成的路的权值之和或其极值**的查询步骤与求 LCA 相似，只需要在第二步中加入对重链在线段树上对应的区间进行求和与求极值操作即可。\n\n**以任意结点为根节点的子树的权值之和或其极值**则更为简单。根据**映射**时得到的**附带效果**，该问题可以被直接转化为**区间求和以及区间求极值问题**。这里有个技巧：我们进行 DFS 时首先记录下每一个结点的**以其为根节点的子树的大小**，随后查询或修改时只需对 [ **每个结点的 DFS 序** , **每个结点的 DFS 序** + **以其为根节点的子树的大小** ] 这个区间进行操作即可。\n\n### 维护\n\n维护与查询十分类似，第一种维护的核心思想也是在求 LCA 的过程中逐步对线段树进行区间修改操作，而后一种维护则只要直接对区间进行修改操作。具体原理可参照上文的**查询**，此处笔者不再加以赘述。\n\n## 复杂度分析\n\n**这里我不会，等以后学好了再来补。（其实是懒）**\n\n## 实现样例\n\n```C++\n//Solution to https://www.luogu.org/problemnew/show/3384\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\ntypedef long long INT64;\nconst int MAXN = (100000 << 2) + 10;\nINT64 tag[MAXN];//Lazy_Tag\nint val[MAXN];//Original Data\n\nstruct Node {\n    int left, right;\n    INT64 val;\n};\n\nNode tree[MAXN];//Segment Tree\n\nvoid pushdown(int i) {\n    int lc = i << 1;\n    int rc = (i << 1) + 1;\n    tree[lc].val += (tree[lc].right - tree[lc].left + 1) * tag[i];\n    tree[rc].val += (tree[rc].right - tree[rc].left + 1) * tag[i];\n    tag[lc] += tag[i];\n    tag[rc] += tag[i];\n    tag[i] = 0;\n}\n\nvoid update(int i, int x, int y, INT64 k) {\n    int lc = i << 1, rc = (i << 1) | 1;\n    if (tree[i].left > y || tree[i].right < x) return;\n    if (x <= tree[i].left && tree[i].right <= y) {\n        tree[i].val += (tree[i].right - tree[i].left + 1) * k;\n        tag[i] += k;\n    } else {\n        if (tag[i]) pushdown(i);\n        update(lc, x, y, k);\n        update(rc, x, y, k);\n        tree[i].val = tree[lc].val + tree[rc].val;\n    }\n}\n\nINT64 query(int i, int x, int y) {\n    int lc = i << 1, rc = (i << 1) + 1;\n    if (x <= tree[i].left && tree[i].right <= y)\n        return tree[i].val;\n    if (tree[i].left > y || tree[i].right < x)\n        return 0;\n    if (tag[i]) pushdown(i);\n    return query(lc, x, y) + query(rc, x, y);\n}\n\n//Heavy-light Decomposition STARTS FORM HERE\nint siz[MAXN];//number of son\nint top[MAXN];//top of the heavy link\nint son[MAXN];//heavy son of the node\nint dep[MAXN];//depth of the node\nint faz[MAXN];//father of the node\nint tid[MAXN];//ID -> DFSID\nint rnk[MAXN];//DFSID -> ID\n\nstruct Edge {\n    int next, to;\n};\n\nEdge edg[MAXN];\nint head[MAXN];\nint cnt;\nint n, m, r, p;\n\nvoid dfs1(int u, int father, int depth) {\n    dep[u] = depth;\n    faz[u] = father;\n    siz[u] = 1;\n    for (int i = head[u]; i; i = edg[i].next) {\n        int v = edg[i].to;\n        if (v != faz[u]) {\n            dfs1(v, u, depth + 1);\n            siz[u] += siz[v];\n            if (son[u] == -1 || siz[v] > siz[son[u]]) {\n                son[u] = v;\n            }\n        }\n    }\n}\n\nvoid dfs2(int u, int t) {\n    top[u] = t;\n    tid[u] = cnt;\n    rnk[cnt] = u;\n    cnt++;\n    if (son[u] == -1) {\n        return;\n    }\n    dfs2(son[u], t);\n    for (int i = head[u]; i; i = edg[i].next) {\n        int v = edg[i].to;\n        if (v != son[u] && v != faz[u]){\n            dfs2(v, v);\n        }\n    }\n}\n\nvoid add_edge(int u, int v) {\n    edg[cnt].to = v;\n    edg[cnt].next = head[u];\n    head[u] = cnt;\n    cnt++;\n}\n\nvoid build(int i, int l, int r) {\n    tree[i].left = l;\n    tree[i].right = r;\n    if (l == r) {\n        tree[i].val = val[rnk[l]];\n    } else {\n        int mid = (l + r) >> 1;\n        build(i << 1, l, mid);\n        build((i << 1) | 1, mid + 1, r);\n        tree[i].val = tree[i << 1].val + tree[(i << 1) + 1].val;\n    }\n}\n\nvoid update_path(int x, int y, int z) {\n    int fx = top[x], fy = top[y];\n    while(fx != fy) {\n        if (dep[fx] > dep[fy]) {\n            update(1, tid[fx],tid[x], z);\n            x = faz[fx];\n        } else {\n            update(1, tid[fy], tid[y], z);\n            y = faz[fy];\n        }\n        fx = top[x], fy = top[y];\n    }\n    if (x != y)\n        if (tid[x] < tid[y]) update(1, tid[x], tid[y], z);\n            else update(1, tid[y], tid[x], z);\n    else update(1, tid[x], tid[y], z);\n}\n\nINT64 query_path(int x, int y) {\n    INT64 ans = 0;\n    int fx = top[x], fy = top[y];\n    while (fx != fy) {\n        if (dep[fx] >= dep[fy]) {\n            ans += query(1, tid[fx], tid[x]);\n            x = faz[fx];\n        } else {\n            ans += query(1, tid[fy], tid[y]);\n            y = faz[fy];\n        }\n        fx = top[x], fy = top[y];\n    }\n    if (x != y) {\n        if (tid[x] < tid[y]) {\n            ans += query(1, tid[x], tid[y]);\n        } else {\n            ans += query(1, tid[y], tid[x]);\n        }\n    } else ans += query(1, tid[x], tid[y]);\n    return ans;\n}\n\nINT64 query_subtree(int x) {\n    return query(1, tid[x], tid[x] + siz[x] - 1);\n}\n\nvoid update_subtree(int x,int z) {\n    update(1, tid[x], tid[x] + siz[x] - 1, z);\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin >> n >> m >> r >> p;\n    for (int i = 1; i <= n; i++) cin >> val[i];\n    int u, v, k, x, y, z; cnt = 1;\n    for (int i = 1; i < n; i++) {\n        cin >> u >> v;\n        add_edge(u, v);\n        add_edge(v, u);\n    }\n    for (int i = 1; i <= n; i++) son[i] = -1;\n    cnt = 1;\n    dfs1(r, -1, 1);\n    cnt = 1;\n    dfs2(r, r);\n    cnt = 1;\n    build(1, 1, n);\n\n    while (m--) {\n        cin >> k;\n        switch (k) {\n            case 1 :\n                cin >> x >> y >> z;\n                update_path(x, y, z);\n                break;\n            case 2 :\n                cin >> x >> y;\n                cout << query_path(x, y) % p << \"\\n\";\n                break;\n            case 3 :\n                cin >> x >> z;\n                update_subtree(x, z);\n                break;\n            case 4 :\n                cin >> x;\n                cout << query_subtree(x) % p << \"\\n\";\n                break;\n            default : break;\n        }\n    }\n    return 0;\n}\n```\n\n## 参考资料\n\n[剖分操作](http://blog.csdn.net/acdreamers/article/details/10591443)\n、[原理与实现](http://blog.sina.com.cn/s/blog_6974c8b20100zc61.html)、[原理与证明](http://www.cnblogs.com/sagitta/p/5660749.html)、[查询与修改](http://www.cnblogs.com/jinkun113/p/4683299.html)\n","tags":["算法（广义）","数据结构","树链剖分"]},{"title":"高级数据结构入门——线段树篇","url":"/arp-segment-tree/","content":"\n## 引言\n\n　　线段树是一种**二叉搜索树**，能够**对区间进行高效询问与修改**（只要该操作**满足结合律**）。它常被用于解决**区间最值查询**（*RMQ，即 Range Minimum/Maximum Query*）、**区间和查询**，**区间修改**等问题。常见的线段树的实现方式分为两类：**递归式**与**非递归式**。相对来说，递归式线段树的灵活性更强，但其时空复杂度的常数往往更大；而非递归式线段树的代码更加简单，但其处理单点的复杂度要高于递归版线段树。当线段树应用于大规模数据时，通常会把多个分散区间提取出来，单独作为线段树的一个结点对待，以减少整个程序的内存消耗。这一技巧被称为线段树的**离散化**。<!--more-->\n\n## 原理\n\n　　为了便于讲解，笔者将本段分为以下几个步骤：**构建**、**维护**、**查询**。（非递归式线段树的原理部分仍在施工中……）\n\n### 构建\n\n　　递归版线段树的构建过程是自顶向下的，其实现的关键在于**构建函数**。我们先将整个区间作为参数传入构建函数，随后构建函数会检查该区间是否为单元素。如果是，则将数据存入该结点，反之，则将区间平分然后分别传入下一层构建函数，当下一层的构建函数执行完成时，该结点的左右子节点都必定已得到对应的区间的值。那么，将其求和并存入当前层结点内即可结束构建操作。\n  \n　　（以下为部分草稿，请读者先跳过该段。）（而非递归式线段树则是自底向上的，它的本质是一颗**完全二叉树**。为了便于操作，我们需要将整个线段树“压扁”然后存进数组里。首先，我们假设根结点所在的位置为 0 ，那么当我们选取的某个结点在数组中的位置是 N 时 ，其左子树的位置为 (N << 1) + 1，而其右子树的位置为 (N + 1) << 1，其父结点的位置则为 (N - 1) >> 1。）\n\n### 维护\n\n>　“懒惰即是美德。”——《代码之髓》\n\n　　线段树实现高效区间修改的原理，即是**懒惰标记**（*Lazy-Tag*）思想。简单地说，当我们进行区间修改的时候，我们并不是真正的修改与区间有交集的每一个结点，而是把修改信息储存在第一次访问到的被修改区间完整覆盖的结点上。那么，当我们在另一次修改里经过这些结点时（即此时这个被存放了修改信息的结点与修改区间存在交集但不被完全覆盖），我们只需将该结点储存的修改信息传递给这个结点的左右子结点即可。这一操作被称为**下推**（*Pushdown*）。\n\n　　对某一区间进行维护操作时，我们只需要将修改区间从根结点依次向下传递即可。在处理每次修改时，我们检查某一结点所对应的区间与修改区间的关系。如果交集为空，则直接返回；如前者被后者包含，则给该区间打上懒惰标记；如果交集非空，则将懒惰标记下推并向左右子树传递修改区间。\n\n### 查询\n\n　　查询操作与维护操作十分相似。进行区间和查询时，我们只需要将询问区间从根结点依次向下传递即可。在处理每次询问时，我们检查某一结点所对应的区间与询问区间的关系。如果交集为空，则返回零；如前者被后者包含，则返回区间长度与懒惰标记的值的乘积；如果交集非空，则将懒惰标记下推并向左右子树传递询问区间，随后返回左右子树之和。\n\n## 复杂度分析\n\n（偷懒先不写）\n\n## 实现\n\n```C++\n//Solution to https://www.luogu.org/problem/show?pid=3372\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\ntypedef long long INT64;\nconst int MAXN = (100000 << 2) + 10;\nINT64 data[MAXN], tag[MAXN];\nint n, m;\n\nstruct Node {\n    int left, right;\n    INT64 val;\n};\n\nNode tree[MAXN];\n\nvoid build(int i, int l, int r) {\n    tree[i].left = l;\n    tree[i].right = r;\n    if (l == r) {\n        tree[i].val = data[l];\n    } else {\n        int mid = (l + r) >> 1;\n        build(i << 1, l, mid);\n        build((i << 1) | 1, mid + 1, r);\n        tree[i].val = tree[i << 1].val + tree[(i << 1) + 1].val;\n    }\n}\n\nvoid pushdown(int i) {\n    int lc = i << 1;\n    int rc = (i << 1) + 1;\n    tree[lc].val += (tree[lc].right - tree[lc].left + 1) * tag[i];\n    tree[rc].val += (tree[rc].right - tree[rc].left + 1) * tag[i];\n    tag[lc] += tag[i];\n    tag[rc] += tag[i];\n    tag[i] = 0;\n}\n\nvoid update(int i, int x, int y, INT64 k) {\n    int lc = i << 1, rc = (i << 1) | 1;\n    if (tree[i].left > y || tree[i].right < x) return;\n    if (x <= tree[i].left && tree[i].right <= y) {\n        tree[i].val += (tree[i].right - tree[i].left + 1) * k;\n        tag[i] += k;\n    } else {\n        if (tag[i]) pushdown(i);\n        update(lc, x, y, k);\n        update(rc, x, y, k);\n        tree[i].val = tree[lc].val + tree[rc].val;\n    }\n}\n\nINT64 query(int i, int x, int y) {\n    int lc = i << 1, rc = (i << 1) + 1;\n    if (x <= tree[i].left && tree[i].right <= y)\n        return tree[i].val;\n    if (tree[i].left > y || tree[i].right < x)\n        return 0;\n    if (tag[i]) pushdown(i);\n    return query(lc, x, y) + query(rc, x, y);\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) {\n        cin >> data[i];\n    }\n    build(1, 1, n);\n    int t, x, y; INT64 k;\n    for (int i = 1; i <= m; i++) {\n        cin >> t;\n        if (t == 1) {\n            cin >> x >> y >> k;\n            update(1, x, y, k);\n        } else {\n            cin >> x >> y;\n            cout << query(1, x, y) << endl;\n        }\n    }\n    return 0;\n}\n```\n","tags":["数据结构","算法（广义的）","树","线段树"]},{"title":"摄影练习（17.10.07）","url":"/photography-practice-on-17-10-07/","content":"\n时间：2017.11.19\n\n地点：奉献海湾\n\n设备：索尼 ILCE-6000 + SELP1650\n\n后期：博主\n\n<!--more-->\n\n![](/uploads/photography-practice-on-17-10-07/m_1.jpg)\n\n后期：m兄\n\n![](/uploads/photography-practice-on-17-10-07/2.jpg)\n\n后期：博主\n\n![](/uploads/photography-practice-on-17-10-07/3.jpg)\n\n后期：博主\n\n![](/uploads/photography-practice-on-17-10-07/m_2.jpg)\n\n后期：m兄\n\n![](/uploads/photography-practice-on-17-10-07/4.jpg)\n\n后期：博主\n\n![](/uploads/photography-practice-on-17-10-07/5.jpg)\n\n后期：博主\n\n![](/uploads/photography-practice-on-17-10-07/6.jpg)\n\n后期：博主\n\n![](/uploads/photography-practice-on-17-10-07/7.jpg)\n\n后期：博主\n\n![](/uploads/photography-practice-on-17-10-07/8.jpg)\n\n后期：博主\n\n![](/uploads/photography-practice-on-17-10-07/9.jpg)\n\n后期：博主\n\n![](/uploads/photography-practice-on-17-10-07/10.jpg)\n\n后期：博主\n\n![](/uploads/photography-practice-on-17-10-07/11.jpg)\n\n后期：博主\n\n![](/uploads/photography-practice-on-17-10-07/m_3.jpg)\n\n后期：m兄\n\n![](/uploads/photography-practice-on-17-10-07/m_4.jpg)\n\n后期：m兄\n\n![](/uploads/photography-practice-on-17-10-07/12.jpg)\n\n后期：博主\n\n![](/uploads/photography-practice-on-17-10-07/m_6.jpg)\n\n后期：m兄\n\n![](/uploads/photography-practice-on-17-10-07/m_5.jpg)\n\n后期：m兄\n","tags":["摄影"]},{"title":"摘抄整理（17.09.26）","url":"/clippings-17-09-26/","content":"\n　　（以下内容摘抄自《美国宪法的诞生和我们的反思》，易中天著）\n\n　　在我们这些见惯了庄严肃穆场面的中国人看来，1787年美国费城制宪会议是一点都不神圣的。会议室里没有高高在上的主席台，没有可以让代表们并排坐在一起的巨型长桌和圆桌，只有一些小型的方桌和靠背椅。桌子的大小，大约只够四个人围在一起吃快餐。这些方桌看上去七零八落，散乱地摆放在会议室里，代表们则三五成群地围而坐之。如果不是因为有一套主席专用的桌椅，你会觉得整个会场更像一个沙龙、酒吧或者咖啡厅。坐在这里的代表们也似乎并不是来制定宪法，而是来喝下午茶。<!--more-->\n\n　　……\n\n　　几乎所有的历史学家都认为，在美国的建国史上，有三份文件堪称伟大。这就是独立宣言、邦联条例和联邦宪法。独立宣言提出了美国的理想，开始了她的独立；邦联条例确定了美国的国名，开始了她的联合；联邦宪法则使理想成为现实，使14个有着各自宪法和政府的政治实体（它们的英文名字是state，如何译为中文回头再说）变成一个完整的实实在在的国家。不过，在1787年那个闷热的夏天之前，很少有人认为还有制定第三份文件（联邦宪法）的必要。对于这些蛮荒大陆上的乡巴佬，尤其是那些宁愿当乡巴佬也要自由的人来说，什么总统，什么政府，什么首都，都不重要。重要的是《独立宣言》宣布的那个观点：人人生而平等，造物主赋予他们一些不可剥夺（转让）的权利，其中包括生命权、自由权和追求幸福的权利。为了保障这些权利，人类才在他们中间建立政府。政府的正当权力，是要经过被治理者的同意才能产生的。当任何形式的政府违背这些目标时，人民便有权改变或者废除它，并建立一个新的政府。这个新政府赖以奠基的原则及其组织权力的方式，务使人民认为唯有这样才最可能获得他们的安全和幸福。 这就是所谓的“美国理想”。在许多美国人看来，只要产生并说出这个理想，他们就算有了自己的国家。所以，他们就把发表《独立宣言》的那一天（1776年7月4日）定为自己的建国日。何况在《邦联条例》通过以后，他们又有了一个国名？剩下的事情，也就是得到国际社会的承认，尤其是英国的承认。这当然只能靠拳头来说话。 所以，1783年9月3日《巴黎和约》签订以后，这些胜利了的乡巴佬，包括那些拿起武器的农民，也包括他们只有小学文化程度的总司令乔治.华盛顿，便欢天喜地一哄而散，解甲归田，会自己的农庄过日子去了。直到4年以后，这些傻乎乎的（或者说天正的）美国人才发现事情并没有这么简单，一个名副其实的国家，可不是只有理想就行的。\n\n　　……\n\n　　而在他看来，只要邦政府存在，贪婪、野心、利益，所有这些主宰大多数人和公共机构的激情，就会源源不断地流进邦政府的小溪，不会流到总体政府的大河里。一旦各路诸侯施展他们的地方主权，很快就会找到蚕食总体权力的门道，最后把国家的主权贬低到只剩下一块门面。因此，唯一的办法，就是把全部主权都集中到一个总体政府。至于平等表决权，虽然各小邦必欲得之，但大邦决不会同意。因为这不符合人类的本性。一个政府如果建立在坏的基础上，它就总有一天会垮台。 这就是汉密尔顿对佩特森方案的反应。\n\n　　……\n\n　　他（富兰克林）说，我们关起门来开会，已经四五个星期了。大家都在黑暗中努力摸索，却很少有人想想事情怎么会弄成这样！我已经活了一大把年纪。活的时间越长，就越相信是上帝在主宰着人间的事务；而会议的进程则证明，人的悟性绝非完美。看来，我们只有祈求上帝保佑了。他建议，聘请牧师，在每天开会之前主持祈祷仪式，让万能的主引导我们前进。 然而北卡罗来纳的代表威廉森却对大家说，制宪会议没有这笔经费。\n\n　　看来，上帝也帮不了他们的忙。\n\n　　……\n\n　　因为正是这一条款，体现了法治和宪政的精神。法治不是法制。它不是“依法治国”，而是“以法治国”。依法治国（法制）是以人（统治者）为主体，法律为手段，因此仍可能（当然不一定）是人治，只不过这个“治国之人”在行使治权的时候，要以法律为手段和依据而已。以法治国（法治）则是以法律为主体，人（执法者）为手段。在法治制度下，治国的不是人，而是法。立法官员也好，行政官员也好，司法官员也好，都不过是法律体现自己意志的工具和手段。行政官员执行立法机构所立之法，司法官员解释立法机构所立之法，立法官员则根据宪法来立法。立法官员所立之法如果违宪，就不能成立。从这个意义上讲，他们都是执行法律的人（执法者），只不过立法官员执行的是宪法规定和赋予的责任而已。而且，无论立法、执法、司法，最终都必须服从宪法。也就是说，在人（执法者）与法的关系中，法是第一位的；在法与法的关系中，最高法律是第一位的；在最高法律中，宪法是第一位的。应该说，这是制宪会议达成的最根本的共识，也是会议最重要的成果。\n\n　　……\n\n　　会议刚开始，富兰克林就拿着一份讲稿站了起来，并请他的同事、宾夕法尼亚代表詹姆斯.威尔逊代为宣读。由于年事已高，身体不好，富兰克林不能久站，每次书面发言都由威尔逊代读。在这篇深情而智慧的讲稿中，富兰克林说，他承认，对这部宪法的若干部分，他到现在也仍然不能同意，但他没有把握说永远不会同意。想法，活了这么大年纪，深知没有人能够一贯正确。因此，年纪越大，越倾向于怀疑自己的判断，更尊重别人的意见。富兰克林说，的确，大多数人，也和宗教里的大多数教派一样，以为自己拥有全部的真理。凡是和他们意见不同，就认为是谬误。就连许多平民，也都这样。这种自以为是，曾被一位法国太太表现得极为自然。她在和妹妹发生争执时说：我也不明白这是怎么回事，妹妹，可是我从来也没有遇到过永远正确的人，除了我自己。 富兰克林接着说，先生，从这种感觉出发，我同意这部宪法，连同它所有的瑕疵，如果他们确实是瑕疵的话。因为我们的人民需要一个总体政府，而现在我们还没有。如果人民能够得到良好的治理，就是他们的福音。我甚至进而相信，这一次可能天下大治若干年，然后以专制收场，就像以前那些共和国一样。历史的经验告诉我们，人们一旦过于腐败，就会需要专制政府，没有能力建成其他形式。但我也怀疑，无论召开多少次制宪会议，也未必能制定一部更好的宪法。不管是这一次还是下一次，每个人来参加会议，固然会带来自己的智慧，但也不可避免地会同时带来他的偏见、激情、错误观念、地方利益和私人之见。我们能指望这样的会议产生完美无缺的成果吗？ 先生，令人惊诧的是，现在制定的这套方案，如此地近乎完美。我认为，这部宪法也会使我们的敌人惊诧。他们正幸灾乐祸地等着，认为我们开会，也会和巴比伦造通天塔一样，每次都是劳而无功；一为我们各邦正处在分崩离析的边缘，此后每次见面，都不过是为了彼此掐断对方的喉咙。先生，为此，我同意这部宪法，因为我不指望还有更好，也没有把握说它就不是最好的。为了公众利益，我决定牺牲自己认为宪法中还有谬误的私人之见。 富兰克林说，我从未在外面窃窃私语。我的话语在此四壁之内诞生，也将在此消失。我不希望每个回到选民当中去的人，都向他们报告自己的反对意见。在世界各国和我们人民中间产生高尚效果和巨大好处的，只能是我们的全体一致，不管这种一致是真实的还是表面的。任何政府，为了获得和保障人们的幸福，必须有力量和效能。大部分力量和效能，取决于民众对政府、对治理者智慧和人格的良好印象。为此我希望，作为人民的组成部分，为了我们自己，为了子孙后代，我们采取全心全意、高度一致的行动，尽我们力所能及推荐这部宪法，以便将我们的思想和努力转向安邦治国。 最后，富兰克林说，我希望制宪会议中每位对宪法或许还有异议的代表和我一起，就此机会略为怀疑一下自己的一贯正确，宣布我们取得一致，在这个文件上签下自己的名字。 在威尔逊宣读完富兰克林这份感人至深的书面发言后，伦道夫接过话头，起立对自己拒绝签字表示深深的歉意。\n\n　　……\n\n　　当最后几名代表签字的时候，弗兰克林对身边的人说了本书开头饮用过的那番话。他说他一直不知道自己面对的太阳，究竟是旭日还是落日。现在终于有幸知道，它是在升起，不是在落下。富兰克林确实可以这样说，因为这部经过了569次表决才制定出来的宪法，总算可以交给人民了，尽管这是一次阴云与曙光并存的艰难的日出。\n\n　　……\n\n　　在民权主义者看来，世界上最重要的东西就是公民的权利。一个国家，如果她的公民的权利能够得到充分俄保障，那就是一个好国家。她的政府如果能够很好地保护公民的权利，那就是好政府，又没有效能倒在其次。当然，政府应该有效能，但不能为了效能牺牲公民的权利。如果效能和民权是熊掌与鱼不可得兼，那么，应该舍去的是效能。因为正如《独立宣言》所说，人人生而平等，造物主赋予他们一些不可剥夺（转让）的权利，其中包括生命权、自由权和追求幸福的权利。为了保障这些权利，人类才在他们中间建立政府。这就很清楚了：政府，是为了保障这些权利才建立的。如果不能保障，要它做什么？\n","tags":["阅读"]},{"title":"Delta Vault 玩家手册","url":"/a-guide-for-players/","content":"\n### 服务器信息\n\n**UPD：已弃坑**\n\n- *简介*\n\n　　本服务器名为 Delta Vault ，是由华东理工大学 Minecraft 交流部负责运营与维护的非盈利性质的多模组生存服务器。当前版本以群峦传说为主打模组，力求增强游戏的乐趣与体验。服务器端与客户端均由 TNFC 整合包修改而来。服务器当前采用玩家邀请制度，即由已经获得游戏资格的玩家向管理员申请添加白名单。由于服务器目前无本地化计划，所以要想获得较好的游戏体验需要一定的英文基础。不过服务器的相关教程正在被逐步完善，我们也鼓励并欢迎所有玩家参与到教程补完计划中。\n\n<!--more-->\n\n- *这个 Minecraft 和我玩过的好像不太……一样？*\n\n　　由于服务器采用群峦传说（TerraFirmaCraft）作为核心模组，使得游戏特性与原版大不相同。相对于原版，群峦传说从现实中获得灵感，使游戏体验更加有趣，同时也增加了游戏的挑战性。群峦传说为游戏带来了季节系统。游戏内一天的时间为现实世界里的20分钟，而一年有360天，也即现实世界里的5天。一年有十二个月、四个季节，随着季节的流转，树木的叶子会逐渐变色，作物也会渐渐生长成熟。而水果的收成主要集中在秋季。除了季节系统，群峦还加入了降雨量、温度等概念。前者影响了植被类型，而后者影响了植被的生长速度与食物的腐烂速度等等。同时，海平面被提高为原版的几乎两倍，并加入了岩层的概念。而岩层也决定了可能生成的矿物的类型。玩家可以通过完成手中的任务书里的任务来逐步探索这个世界。总之，一个更为真实且充满了挑战性的世界等待着你来征服。\n\n### 入门教程\n\n- *注册与登录*\n\n　　初次进入服务器时，您需要使用指令`/auth register <您的密码>`为您的账户创建一个密码。随后，您需要输入`/auth login <您的密码>`来正式登入服务器。当您注册后，每次连接至服务器时都需要输入`/auth login <您的密码>`来确认您的身份。注意，由于服务器将**以明文形式记录所有指令操作**，这意味着服务器管理团队将能够看见您创建密码的指令，所以**不建议将常用的密码设为服务器的登录密码**，否则如果服务器的记录数据外泄将会对您的隐私造成严重的威胁。**另外，由于增加了验证系统的原因，您的背包需要在您成功登陆数秒后才可打开**。\n\n- *传送与重生*\n\n　　服务器的一切传送指令都有三秒等待时间。若在这三秒内，玩家进行移动或收到攻击，传送请求将会被取消。初次进入服务器时，玩家的重生点将被默认设置在出生地。当玩家合成出床并在其上睡过之后，玩家将从上次睡过的床附近重生。使用`/bed`可以将您传送至您的重生点。当玩家死亡后，一个墓碑将在玩家死亡的地点附近生成，而玩家的所有物品将会被保存在其中。**任何玩家都可以拿取其中的物品**。可使用`/back`指令回到死亡地点或上次传送发生之前的地点。可以使用`/tpa <玩家姓名>`向玩家发送传送到对方身边的申请，或使用`/tpa <玩家姓名> here`向玩家发送传送对方到自己身边的申请。当您收到申请后，您需要在一定时间内使用指令`/yes`来接受申请，或者使用指令`/no`拒绝申请。使用`/top`可以使您被传送至当前位置的最高处，可以使用该指令快速离开地下矿洞。玩家可以使用指令`/home set`来将当前位置设为自己的家，随后使用`/home`来传送回家。玩家可以使用指令`/warp <传送点名>`进行定点传送，公告传送点列表请关注服务器公告。每位玩家还可以为自己设置两个私人传送点。您可以使用指令`/pwarp <私人传送点名> set`来创建私人传送点，或是使用指令`/pwarp <私人传送点名> delete`删除您的私人传送点。您需要使用指令`/pwarp <私人传送点名>`来传送自己致您的私人传送点。\n\n- *领地与好友*\n\n　　服务器采用领地系统保护您的个人财产。当您通过身份认证后，您可以在背包界面的左方看到一排图标，依次是好友系统、领地系统、玩家指引、服务器信息和客户端相关设置。您可以点击第二个图标打开领地系统的操作界面。您可以通过左键点击标注为`Wilderness`的区块来将其宣称为您的领地，或者右键点击您的领地来解除宣称。**领地的宣称依循先到先得原则**。界面右下角的第二行为您可以宣称的领地的数目与其上限。同时，您可以按住Ctrl键后点击您的领地，将其转化为持续加载的领地，或是按住Ctrl键后右键点击以取消。界面右下角的第一行为您可以保持持续加载的领地的数目与其上限。界面右上角的三个图标分别为确认并关闭界面、刷新当前领地宣称状态与取消您所有宣称的领地。当领地保持持续加载时，领地内的装置（主要指带有红石的自动化多方块结构，也包括各类树场等）将持续工作。**原则上，服务器要求所有玩家在下线前关闭自己的所有装置，否则管理员有权拆除并没收其所得**。在被宣称的领地内，任何不是您的好友的玩家将无法放置或破坏方块，也无法与任何装置进行交互。**如果发生任何领地纠纷，请联系管理员参与解决**。您可以点击第一个图标打开好友系统的操作界面。在左侧点击其他玩家后，您可以选择发送好友申请。如果对方已经是你的好友，您可以选择删除好友。当对方向您发送好友申请后，您可以选择接受或是拒绝。更多操作细节可查询 FTB Utilities 模组的相关教程。\n\n- *经济与交易*\n\n　　服务器装有虚拟货币系统。您可以输入指令`/wallet`来查询您的余额。您可以使用`/pay <玩家姓名> <金额>`来向某位玩家支付一定数量的货币。服务器支持玩家间的一对一交易。您需要用手拿着您想出售的物品，然后输入`/trade <玩家姓名> <物品单价>`来向某位玩家发起交易申请。**当双方都输入指令`/yes`后**，交易将完成。您手中拿着的物品将以您定下的单价被全部出售给对方。如果任意一方使用了指令`/no`，交易将会被取消。服务器**暂不支持设立公共商店**。服务器虚拟货币的流通将依赖于出生地附近的系统商店（待建设）。\n\n- *聊天与频道*\n\n　　您可能已经注意到，服务器的聊天框与原版并不相同。初始状态下，服务器共有两个聊天频道：`#global`和`#local`。前者为全局聊天频道，后者为本地聊天频道。本地聊天频道内发言的有效范围为以60个方块为半径的圆形区域内。使用指令`/join <频道名>`来加入或创建（如果不存在）一个频道。使用指令`/part <频道名>`离开频道。\n\n- *记录与回滚*\n\n　　服务器支持玩家行为的记录与回滚。由于记录系统会记录玩家的一切指令包括登录密码，所以记录查询**暂不对玩家开放**。如有查询需求请联系管理员。服务器每六小时备份一次地图，并保留近五天内的所有备份。如果遇到大面积地图破损行为则可能会全局回档或部分区块回档。如有相关需求请联系管理员。\n\n- *地图与边界*\n\n　　服务器的地图是以出生地为中心，2048个方块的长度为半径的方形区域。可探索区域大小约为 16,000,000 余平方方块。服务器的地图已预先生成，如有扩图需求请联系管理员。**优先受理捐款者的扩图申请**。客户端预装模组`JourneyMap`可以很容易的设置标记。按`J键`打开大地图。点击右手边第一个按钮进入标记管理界面。点击`New`按钮即可在当前位置设立标记。在标记管理界面内对标记使用`Delete`按钮即可删除该标记。灵活使用标记将大大节省您的游戏时间。\n\n- *其他技巧*\n\n　　您可以使用指令`/afk`进入离开模式。如同传送指令，离开模式的开启需要十秒等待时间。若您超过十分钟未进行任何操作，您也会被强制进入离开模式。进行任意操作或再次输入指令`/afk`将使您退出离开模式。当您的等级提升后，您的最大生命值也将得到提升。\n\n- *推荐教程列表*\n\n　　[TFC Wiki](http://wiki.terrafirmacraft.com/Main_Page)、[群峦传说教程](https://tieba.baidu.com/p/3431179104)、[悟欣 TNFC 群峦传说](http://space.bilibili.com/5707552#!/channel/detail?cid=14151)\n","tags":["黑历史"]},{"title":"对拍：科学的排错方法","url":"/a-scientific-debugging-technique/","content":"## 导语\n\n　　在做习题时，常常会遇到一类非常棘手的情况：自己写的算法能通过样例数据，提交后却总是WA。通常的原因可能是忽视处理边界情况、样例的数据过弱使非正确算法也能得到正确解、算法存在细节性错误等等。\n\n　　当遇到这种情况时，通常的想法是自己设计一些测试数据以对算法的各个模块依次进行排错，或是检查边界情况是否被考虑到以及一些常见的编程失误（如未清零临时变量以及某个变量的标识符打错等等……）。\n\n　　自己设计测试数据往往并不是一件轻松的事，对于复杂的算法更是如此，人的抽象思维能力毕竟有限。所以，这样排错的效果往往不够好。\n\n　　于是，本文正是要向读者介绍一种科学的，比自己构造样例数据更为高效和可靠的排错方法：对拍。\n\n<!--more-->\n\n## 原理\n\n　　[“对拍程序，顾名思义，一个输入给两个程序分别跑一遍，看看对不对的上。”](http://blog.csdn.net/wlx65003/article/details/51149196)\n\n　　这位博主对“对拍”一词的解释已经比较简洁而清晰了，但仍有些地方需要稍微解释一下。\n\n　　首先，“一个输入”并不是自己徒手构造出的测试数据，而是指利用随机函数生成的有效的数据。\n请注意这里使用的形容词是“有效”，或者用更专业的术语来说，“合法”。“有效（合法）”在此处仅指输入数据在形式及数值上符合输入数据的限制。\n\n　　细心的读者可能会想到，如果数据仅仅是有效，那很可能依然无法发现边界情况的问题。很好。如你所见，“有效（合法）”只是对测试数据最基本的要求。而一个精心设计出的题目，其测试数据往往会对各种边界情况或特殊情况进行考察，以此来测试算法编写者逻辑上的完备性以及所使用的算法本身的性能。这样的测试数据不仅仅是“有效（合法）”的，更是“有意义”的。\n\n　　那么，对拍是如何使得仅仅是“有效（合法）”的输入数据就能够检验出算法对“有意义”的输入产生的错误呢？\n\n　　没错，答案很简单，关键在于随机化与重复。随机函数使得测试数据“有意义”的情况可能发生，而重复测试进一步提升了其概率。实践表明，在多次随机数据的输入下，算法的错误点很容易就会表现在输出数据的细微差异上。\n\n　　这里我们可以进一步思考重复输入随机数据这一行为的实质：在对算法进行检测时，我们本身在做的就是一种黑盒测试，即不再试图从内部、从逻辑或数学上严密地论证算法的正确性及效率，而是仅仅通过观察其表现（包括输出数据与所需的时间以及占用的空间以及其跟随数据量的增长等等）对其进行评估。这一方法与科学研究时使用的最广泛而直接的方法——观察实验并统计实验数据——不谋而合。所以笔者称有着这样类似于科学方法的排错方法为：科学的排错方法。\n\n　　回过头来，再来思考随机化与重复这一技巧。直觉上很容易理解的一点就是，多次的随机性测试等效于系统性测试。（具体的论证应该需要大量的数学基础，很遗憾笔者还没有这样的功底，等大学数学学得比较好了我会再回来补上。）原来这就是使得“对拍”威力大增的魔法。\n\n　　其次是“两个程序”。这里的两个程序分别是指存在错误的程序和能够得到正确结果的程序。在日常训练过程中，后者往往是他人公布的可AC代码，而在赛场上，后者则可以是无脑爆搜的算法。总而言之，对第二个程序或者说“标准程序”的要求，只剩下了准确性一项。\n\n　　而所谓的“对不对的上”，意思就是检测错误程序与标准程序的差异之处，并以此推导出程序的错误之处（当然也可以拉出这一组随机生成的测试数据，分环节或模块对两个程序进行进一步的排错）。\n\n　　有了以上的理论基础，我们就可以开始编写对拍程序了。\n\n## 实现\n\n　　具体实现网上一搜到处都有，此处笔者不再赘述。笔者比较喜欢的是一种利用批处理的管道操作符的版本。笔者将其展示在此处。\n\n```\n@echo off  \n:loop  \n    rand.exe > in.txt\n    my.exe < in.txt > myout.txt\n    std.exe < in.txt > stdout.txt\n    fc myout.txt stdout.txt\nif not errorlevel 1 goto loop  \npause\ngoto loo\n\n```\n\n## 结论\n\n　　让我们总结一下本文的观点：\n\n　　1. 对拍程序是将大量随机生成的“有效（合法）”数据分别输入待排错的程序与正确的程序，而后找出其输出结果上的差异的程序。\n\n　　2. 随机化原则与重复使得仅仅“有效（合法）”的输入数据很可能“有意义”。\n\n　　3. 其原因是多次的随机性测试等效于系统性测试。\n\n　　4. 这一原则同样被应用于科学研究领域，因此利用对拍程序差错具有“科学性”的特点。\n\n　　最后，笔者希望所有阅读这篇文章的人都能有所收获，无论是完全没有试过对拍的读者还是已经试过对拍却对其原理不甚理解的读者。祝各位在练习时都能精神抖擞，并在赛场上取得佳绩。\n","tags":["技巧"]},{"title":"Chez Scheme 编译指南","url":"/chez_scheme_compiling_guide/","content":"\n## 该文章内容已过期，仅可用于参考，作者暂不打算更新\n\n#### 关于 Chez Scheme\n\n　　Chez Scheme 是由 R. Kent Dybvig 编写的 Scheme 的具体实现，包含了编译器、解释器与一些常用的库。它完整地实现了 [R6RS (Scheme 语言修订报告第六版)](http://www.r6rs.org/) 所描述的所有特性，而且提供了强大的外部函数调用功能，并能够编译出执行效率非常高的 Scheme 程序。\n\n　　~~营销大师~~王垠曾在其文章[《Chez Scheme 的传说》](http://www.yinwang.org/blog-cn/2013/03/28/chez-scheme)中称其“比最高级的 C 编译器还要简单很多，却生成几乎达到理论极限的机器代码”，并且对其设计理念大加赞赏。对编程语言有兴趣的话可以去试着读读这篇文章。~~当然他在扯淡。~~\n\n　　Chez Scheme 的编译组件原本被作为商业软件出售，但前些日子作者~~似乎心情大好于是~~将其在 Github 上开源了，所以现在我们能够一睹其源码的芳容。\n\n<!--more-->\n\n[Chez Scheme 项目主页](https://cisco.github.io/ChezScheme/)\n\n#### 关于本文\n\n　　Chez Scheme 作者在其“构建说明” (即 BUILDING 文件) 中将 Windows 下的编译过程描述为 “more complicated than it should be” (本不应该那么麻烦)，从作者的描述中可以隐约看出他大概为了优先兼容 Linux 和 OS X 下的编译过程做出了无奈的妥协。笔者刚开始研究编译其源码时，并不使用 Visual Studio ，在没有现成教程的情况下，自己不断尝试了两周后才摸出了正确的编译配置。为此笔者想写一篇简单的教程，帮助想要体验 Scheme 之美而又不想把时间浪费在研究 Visual Studio 与 Git 以及编译环境配置等等这些无关问题上的读者，使他们能够跳过这些无关内容，直接根据笔者提供的经验与方法对 Chez Scheme 进行编译，快速进入学习的核心环节。由于笔者本身对 Visual Studio 与 Git 没有很深的研究，行文过程中的错误在所难免，希望各位读者发现后不吝赐教，笔者在此先行致谢。\n\n　　那么回到正文。这篇文章将指导你自己动手编译~~也许是~~世界上最好的 Scheme 实现，但不会包含 Scheme 语法相关的任何内容。如果想对 Scheme 进行深入研究，笔者建议去阅读 [Scheme 程序设计语言 (The Scheme Programming Language)](http:// <http://www.scheme.com/tspl4/>) (Chez Scheme 作者所著，完美贴合 Chez Scheme 的实现)，而对于 Chez Scheme 的使用以及一些细节， 则可参阅 [Chez Scheme 9 使用指南 (Chez Scheme Version 9 User's Guide)](http://cisco.github.io/ChezScheme/csug9.4/csug.html)。\n\n#### 安装 Visual Studio\n\n　　在Windows 环境下编译 Chez Scheme 需要 Visual C 编译器的支持，为此我们需要安装一份 Visual Studio。\n\n　　[Visual Studio 官网](https://www.visualstudio.com/zh-cn/downloads/download-visual-studio-vs.aspx)\n\n　　进入后按下图下载Commmunity(即社区版，亦称个人版或免费版)\n\n　　![](/uploads/chez_scheme_compiling_guide/01.png)\n\n　　*注意，你至少需要10GB可用空间。*\n\n　　出现如下图所示页面表示已经成功开始下载，随后你会得到一个200+KB的“高速下载器”。它待会儿会把整个 Visual Studio 一股脑的塞进你的硬盘里。\n\n　　![](/uploads/chez_scheme_compiling_guide/02.png)\n\n　　打开你下载到的文件，等它加载出窗体。\n\n　　且慢，先别急着一路 Next 下去。我们只要使用 Visual C 编译器，其他功能我们全部不需要。记得在这儿选择 Custom (自定义安装内容)\n\n　　![](/uploads/chez_scheme_compiling_guide/04.png)\n\n　　把这几个都勾上\n\n　　![](/uploads/chez_scheme_compiling_guide/05.png)\n\n　　然后一路 Next 下去。好了，现在你可以选本小说，或是睡上那么一觉。等你回来时 Visual Studio 差不多就能安装好。(实际上需要约 2 - 3 个小时)。\n\n　　当出现这个画面时，说明我们已经成功地装上了~~自称是~~世界上最好的IDE(集成开发环境)。你可以选择点 LAUNCH 来看看它的样子，或者直接关闭安装程序。本篇教程不会用到它的编辑器。\n\n　　![](/uploads/chez_scheme_compiling_guide/06.png)\n\n　　接下来要做的是安装一个带 Bash 的 Git 。\n\n#### 安装 Git\n\n　　[Git 官网](https://git-scm.com/download)\n\n　　![](/uploads/chez_scheme_compiling_guide/07.png)\n\n　　如果因为某些特殊原因无法直接从官网下载，可以考虑去一些国内比较大的软件收录网站看看。\n\n　　这是笔者找到的分流点：\n\n　　[搜狗下载分流](http://xiazai.sogou.com/detail/34/16/-4212831931637133254.html)\n\n　　![](/uploads/chez_scheme_compiling_guide/08.png)\n\n　　打开你下载的安装包，一路 Next，遇到选择安装组件的时候记得这样勾：\n\n　　![](/uploads/chez_scheme_compiling_guide/09.png)\n\n　　其它的选项全部不用改动，使用默认的就行。\n\n　　安装成功后，在任意文件夹内右键，会发现多出了这两项。\n\n　　![](/uploads/chez_scheme_compiling_guide/10.png)\n\n　　选择一个*最好不要带中文与特殊字符的目录*的文件夹，然后在里面右键点开 Git Bash。这个文件夹内随后会生成一个子文件夹 chezscheme ，而这个被生成的文件夹就是我们之后要用到的**工作目录**。笔者在演示中的工作目录为`C:/Github/chezscheme`\n\n#### 获取源代码\n\n　　往你的 Bash 里敲入以下代码然后按下 Enter 键\n\n　　`git clone https://github.com/cisco/chezscheme`\n\n　　![](/uploads/chez_scheme_compiling_guide/11.png)\n\n　　当出现如下图像时，代表你成功从服务器获取了一份 Chez Scheme 的源代码。\n\n　　![](/uploads/chez_scheme_compiling_guide/12.png)\n\n　　让我们开始为编译环节做准备。\n\n#### 设置环境变量\n\n　　环境变量设置环节部分在 BUILDING 文件里并没有详细提到，笔者之前自行编译时主要在这一步上浪费了不少时间。\n\n　　此电脑-右键-属性\n\n　　![](/uploads/chez_scheme_compiling_guide/13.png)\n\n　　点击左侧的“高级系统设置”\n\n　　![](/uploads/chez_scheme_compiling_guide/14.png)\n\n　　在弹出的窗口中切换到“高级”选择夹，然后点击“环境变量”\n\n　　![](/uploads/chez_scheme_compiling_guide/15.png)\n\n　　在用户变量框里点击新建，然后分别加入如下环境变量：\n\n　　![](/uploads/chez_scheme_compiling_guide/16.png)\n\n> path\n> `C:/Program Files/Microsoft Visual Studio 14.0/VC/bin;C:/Program Files/Windows Kits/8.1/bin/x86`\n\n> lib\n> `C:/Program Files/Microsoft Visual Studio 14.0/VC/lib;C:/Program Files/Windows Kits/10/Lib/10.0.10240.0/ucrt/x86;C:/Program Files/Windows Kits/8.1/Lib/winv6.3/um/x86`\n\n> include\n> `C:/Program Files/Microsoft Visual Studio 14.0/VC/include;C:/Program Files/Microsoft SDKs/Windows/v7.1A/Include;C:/Program Files/Windows Kits/10/Include/10.0.10240.0/ucrt`\n\n　　然后点击确定回到属性面板，把它关闭，接下来我们回到 Git Bash 上。\n\n#### 配置编译目标\n\n　　如果你还没有关闭 Bash，那么只要输入\n\n　　`cd chezscheme`\n\n　　就可以使它进入工作目录。但如果你已经关闭了，没关系，打开工作目录，右键再开一个就行。\n\n　　随后使用指令\n\n　　`./configure -m=i3nt`\n\n　　你的 Bash 看起来应该像这样：\n\n　　![](/uploads/chez_scheme_compiling_guide/17.png)\n\n　　随后按下 Enter，等待其处理完成。直到再次出现输入指令等待。过程中可能出现很多字，也可能没有任何提示。这取决于你之前是否已经执行过类似指令。\n\n　　![](/uploads/chez_scheme_compiling_guide/18.png)\n\n　　好了，到这里你离编译只差一步之遥。在开始编译前，我们还要复制一次源码。\n\n　　具体操作是将整个工作目录内的 c 文件夹复制到新生成的 i3nt 里。在笔者的演示里相当于用`C:/Github/chezscheme/c`覆盖文件夹`C:/Github/chezscheme/i3nt/c`。\n\n　　复制后，你的 `工作目录/i3nt/c` 看上去应该像这样。\n\n　　![](/uploads/chez_scheme_compiling_guide/19.png)\n\n#### 开始编译\n\n　　做了如此多的准备工作之后，我们终于可以开始编译了。关闭 Bash，进入`工作目录/i3nt/c`，按住Shift+右键，在弹出的栏目中选择“在此处打开命令窗口”\n\n　　![](/uploads/chez_scheme_compiling_guide/20.png)\n\n　　然后在弹出的窗口中输入\n\n　　`nmake -f Makefile.i3nt`\n\n　　![](/uploads/chez_scheme_compiling_guide/21.png)\n\n　　等待数分钟后，你会发现编译似乎遇到了错误。\n\n　　![](/uploads/chez_scheme_compiling_guide/22.png)\n\n　　但打开 `工作目录/i3nt/bin/i3nt` 目录，你会发现其实程序已经编译成功了。但程序并不能打开，双击只会看到黑色的窗口一闪而过。要使它能够运行，我们还要再做些工作。现在可以关闭你的编译窗口了。\n\n#### 运行与测试\n\n　　要使 Chez Scheme 能够运行，我们还需要再设置一个环境变量，但笔者认为这样太过繁琐，而且一旦工作目录改变还得重新设置，所以笔者换了一种方法，即使用一个引导程序来为 Chez Scheme 设置临时环境变量。\n\n　　具体做法是在 `工作目录/i3nt/bin/i3nt` 内新建一个文本文档，打开它，输入以下代码：\n\n```\n@echo off\nset \"SCHEMEHEAPDIRS=../../boot/i3nt\"\nscheme.exe\n```\n\n　　然后将文件名保存为`launch.bat`。\n\n　　![](/uploads/chez_scheme_compiling_guide/23.png)\n\n　　是时候收获成功的喜悦了。打开你创建的引导程序。你将会见到也许是世界上最先进的编程语言的交互环境。\n\n　　![](/uploads/chez_scheme_compiling_guide/24.png)\n\n　　试着向里面输入一行表达式并执行：\n\n　　`(+ 2 3)`\n\n　　![](/uploads/chez_scheme_compiling_guide/25.png)\n\n*嘿，这真酷！你终于可以自豪地告诉朋友们，你已经成功的编译出了世界上最先进的编程语言的解释器，并用它运行了一行代码！*\n\n　　尽管这确实令人兴奋不已，但你也要知道，这仅仅是一个起点。如果你要深入体验 Scheme 之美，感受数十年来编程语言领域的发展所诞生的众多精巧的设计，你还需要花费大量时间来阅读上文列出的参考书目以及其他关于函数式编程的相关文献。正如 Matthias Felleisen 在其著作《Scheme 简明教程》中所言一般：\n\n> 最终在某个下午，你会完全理解Scheme和它的标准，但在那之前没有人会知道需要度过多少个让人觉得满头雾水的下午。\n\n　　那么，这篇教程到这里也就要结束了，但我们的 Scheme 学习之路才刚刚开始，而且这条学习之路将无疑是漫长而又坎坷的。但是无论如何，都请保持着这样的信念：*享受编程，享受生活！*\n","tags":["Scheme","过期内容"]},{"title":"NOIP2015行记与数学菜狗的日常","url":"/noip2015-and-the-daily-life-of-a-math-fan/","content":"\n　　上周双休日，我校算法竞赛小组前去参加NOIP复赛。\n\n　　刚到门口就见到了Erwin菊苣学长，讨论了一番今年题目可能出的内容，然后其他人跟着源霸陆陆续续得也来了。其实前晚我背了所有图论基本搜索算法就指望能遇到一个图论水题……然而我背得东西直到DAY2也没有用上。拿着准考证和学生证，再一次感叹了一下华二校园的广阔与华美后，我们一行人进入了教学楼。就在教学楼门口，一个身形巨大的神犇拿着准考证经过我们身边，不知道是谁的哪句话引起了他的注意，只见他瞄了一眼准考证，说：“哦，我准考证号3001”。也许是神犇的豪气震动了我，我相信这天也许不会出现什么特别难的题目。<!--more-->\n\n　　可是事实并没有像我预料的那样发展。\n\n　　跟着人群走上了楼，在机房里坐下后，坐在我左边的机友（机房里的桌友）飞快地打开了C++的IDE，开始做一系列测试，而我却坐在那儿一个劲的让自己淡定淡定再淡定。监考老师解释完了规则，开始发题目的密码。密码纸上的字符难以辨认，一开始怎么改大小写都是错的。大概老师和大家都尝试了数十次后，后排一个女生突然说“老师，我试出来了！”然后指出了密码条上的错误。随后就听见四下发出了“屌”、“屌炸了”的声音。\n\n　　在这一段花絮结束后，老师开始发试题的纸卷，DAY1就这样开始了。开局我并不是很顺，做第一题根据题目写完判断条件后还是出现了各种错误，所幸调试能力还行，在前半个小时结束前做出来了。草草看了一眼第二题，判断直接模拟的话数据会卡二位数组，就直接开了两个长数组，循环更新数组的内容，直到下标和其值相等。朴素广搜。写完后发现可以做点剪枝预判，就增加了一个布尔数组，把不可到达的数据全部忽略掉。半小时做完。做完前两题，上个厕所，感觉状态不错，开始看第三题。我初步判断是动态规划，试着写了一下状态转移方程，感觉能成，就开始屁颠屁颠打码。选数据结构想了一会儿，最后决定开个record封装一下二维数组，然后专门写个函数求剩余牌数。然后写状态转移，最后开始写状态改变的实现。\n\n　　写着写着感觉不对了，顺子的判断实现丝毫没有思路。就这样卡了半个多小时，算上前面推方程、想数据结构花的一个小时，只剩下一个小时了。最后一个小时我挣扎了一下但是最终还是没能写完。我在最后十分钟的时候，赶紧点开了被动技能[骗分]，草草写了个能过前两个点的算法。\n\nDAY1就这样结束了。由于前两题比较水，当晚我也没有去做任何练习，只是复习了一下图论的几个算法就睡觉了。\n\n　　然后是地狱般的DAY2。一大早，母上把我送到了华二的门口，再一次感叹华二的广阔和华美后，我在门口又见到了Erwin学长菊苣。\n\n　　聊了一下昨天的题目，感觉今天会有图论。果不其然，看到卷子后，第三题就是。\n\n　　先不管它，肝了前两题再说。\n\n　　第一题，恩……恩……这什么鬼……！\n\n　　没想到什么好方法，直接模拟又肯定会爆几个点，我抱着希望数据能水点的心态直接从FP库里拉了一段快排，就对整个数列的差值直接排序取n+1项输出。然后开肝第二题。一开始我以为应该挺好写的，从要匹配的内容出发，先拆成数个字符串，然后依次在所给的字符串里面找，每次找的时候从游标位置开始，找完以后更新游标。后来写着写着就发现编程复杂度太高了，于是我换了ansistring来，想直接用自带的字符串操作去实现。结果我试了将近三刻钟才试出copy这个函数的正确用法。\n继续闷头写。\n\n　　看看时间，卧槽，还有一个小时……来不及了吧……\n\n　　再看看第三题，似乎不那么好骗分，于是我决定咬咬牙继续写第二题。结果没写完ORZ 于是第二题和第三题都是直接Randomlize然后Random(数据上限)输出的。\n\n　　DAY1估分100+60+10=170分\n\n　　DAY2估分10（事实证明我这道缺少了贪心之后的处理步骤所以基本拿不到分，但样例数据都过了……运气好可能能给骗到分……）+0+0=10分\n\n　　总计180分，看样子连二等奖都没有，只能来年再战了。\n\n　　今天源码都给放出来了，拿到洛谷上给民间数据一测，居然能240分。Erwin菊苣和我同分。\n\n　　能不能二等奖就看数据水不水了。\n\n　　另外，周一的数学成绩已经出来了。毫无意外的班级垫底……祝诸君剩下几门都能武运昌盛吧……\n\n　　UPD：擦线省二。\n","tags":["破事水"]},{"title":"另一篇周记","url":"/another-lost-weekly/","content":"\nUPD：现在看来这篇文章也太中二了……\n\n<center>公正教育：我们教育体系所缺失的</center>\n\n<center>（Justice: Which was missing in our education system.）</center>\n\n<center></center>\n\n　　几天前，几名法国学生前来我校进行文化交流，并在我校食堂就餐。随后与之共同就餐的八班同学将就餐时的照片发到了网上，然后我班（其实年级内其他班也有）部分同学对他们自助餐式的午餐供应与我们强制配给的午餐的差异而感到不满。这里是一条本班某同学发的说说：<!--more-->\n\n_ _ _\n\n- 4/1日 摘录自某位本班同学的说说，原文有少许删改。\n\n　　[A同学]：宜川校领导的很多决定真的很过分，不单单是今天给法国人吃的午饭，还有其他很多事情。哎，反正作为平行班学生的我们，我们没有权利去说什么，但是希望他们能够稍稍正视一下他们自己的行为……\n\n　　[B同学]回复[A同学]：宜川又没做错什么，我们成绩差，就该这种待遇啊……从小已经被不公平待遇习惯了……\n\n　　[C同学]回复[同学B]：提高班又怎样？难道一定都比平行班强吗？\n\n　　[D同学（非本班）]回复[同学B]：平行班和提高班的差距只是成绩，有的甚至没有，享受的待遇为什么要有差距？况且判断一个人的因素只是成绩吗？\n\n　　[笔者]回复[B同学]：成绩是由天赋和后天努力决定的，前者非我们所能控制，后者也因父母所能提供的平台环境而存在着差异。像这样我们自身难以控制的东西，拼什么作为评判我们的标准呢？这样做是否有公正性的体现？成绩差就应该这样对待？那你的意思相当于残疾人就应该受到歧视？\n\n　　[同学E]：提高班只不过是成绩提高罢了，和待遇有什么关系？难道提高班连待遇也要提高吗？\n\n_ _ _\n\n　　这本并不是什么大事，就事件本身而言，我知道的信息不多，无意在此评论其公正性。然而，这位说着“我们成绩差，就该这种待遇啊”的同学，其思想却引起了我的注意。戏剧性的，在不到五分钟之后，这位同学又发了另一篇说说。\n\n_ _ _\n\n- 4/1日 摘录自某位本班同学的说说。原文评论已被删除，评论内容为笔者所回忆，与原评论大致相同。\n\n　　[B同学]：如果和法国人接触的名额只有30个，那么学校会选谁？不想着怎么考进提高班受同样待遇却只知道喷，naive（该条内容为B同学原话）\n\n　　[F同学（非本班）]：谁家有钱选谁。\n\n　　[G同学]：提高班凭什么受待遇比我们好？\n\n　　[笔者]：我认为应该先自由申请然后随机抽取或通过英语或法语等相关技能的考核择优选取。\n\n　　[笔者]：为什么要优先原则提高班的同学？他们的在这件事上比我们更应被选的理由又是什么？成绩好与和法国人接触有直接关系吗？\n\n　　[B同学]：从以前小学到初中老师不都是轻视成绩差的学生吗？\n\n　　[笔者]：现在存在着这种现象并不等于这种现象是公正的，不要混淆概念。\n\n　　[B同学]：我只是想证明宜川的这种做法没有错。\n\n　　[笔者]：先前我反驳你的话并举出例子后你并没有回复，现在又扯小学初中老师的事。你觉得你证明了什么？\n\n_ _ _\n\n　　随后这位同学放弃了与我的争论，事件以我们双方互发“节日快乐”收场。尽管事件结束了，这位同学的想法却引起了我的深思。\n\n　　非常巧合的，近期我完成了哈佛大学公开课程《公正：该如何是好》（Justice:What's the right thing to do by MichaelSandel）的学习。\n\n　　这门课程的主讲老师是迈克尔·桑德尔这位著作颇丰的作家（事实上我之前一直误解其身份为文学作家，实际上此处指的是社科文献作家）。这位老师通过在其课上举出一个个尖锐而多方面性的道德难题，来引导学生们自己进行思考，并且他善于将学生们的核心观点和依据从他们分散的、跳跃性的发言中提炼出来（这也是非常令我所敬佩的行为之一），组织同学们进行自由的辩论与思考，然后将学生们“置于两难的道德窘境中（出自百度百科）”。\n\n　　事实上，公正、道德等问题广泛地出现在我们日常生活的抉择中，无时无刻不在困扰着我们。公正、道德并不是什么“高大上”的东西，从来都不是。它们与我们的生活密切相关。而纵观那位同学的言论，我认为，中国当下缺失了对公正感和道德感的必要教育。是的，我们读孔孟之道，我们读四书五经。中国传统的道德观和公正观注重的是人和人之间的关系（出自百度学术），但相较于此，西方的道德观和公正观更注重理性和逻辑性，与中国的相比更加的现代。当然，我绝不是在否定或贬低中国传统的道德观和公正观，其价值与意义显然十分深远。但我个人跟加欣赏西方的道德观和公正观，这种具有理性之美和思维、逻辑、辩证之美的观点深深的吸引着我。因此我认为，西方的道德观和公正观应该被教育所普及。\n\n　　西方的道德公正观的发展也并非一蹴而就的。\n\n　　在初期，人们对道德的看法就自然地产生了分歧，其一是效果主义，而另一个则是绝对主义。效果主义者们也被称为功利主义者，他们认为道德取决于行为的最后后果。18世纪的英国哲学家杰里米·边沁总结出了其思想理论的核心，即“为最多的人谋取最大的利益。”而与之相对的，绝对主义者则认为道德不应考虑行为的结果，而取决于性行为的本质和特性。\n\n　　随后，功利主义的批评者们指出其缺乏或忽略了对少数群体或个体的权利的尊重，并声称有许多东西是金钱（效益）无法去衡量的（如生命、幸福感等）。\n\n　　不久后，约翰·穆勒提出了“幸福最大化原则”，进一步改善了功利主义的理论，并区分了低级乐趣和高级乐趣（在课程中的例子为看辛普森一家和读莎士比亚）。他认为人们在收教育后会更偏向于高级乐趣，这也是讲高级乐趣和低级乐趣区分的重大原则。同时穆勒提出了“个人权利应当受到特别的尊重”的思想，其理由是“从长远来看这能使每个人都过的更好”。\n\n　　于此同时，古典自由主义诞生。自由主义者们认为“人生来就有自由权”，“在尊重他人自由权的前提下，我们有权选择自己的生活”，“我们拥有自我”等。他们极力反对“家长式立法（即通过法律保证人民不会对自我造成伤害，如安全带法）”、“道德立法（即试图用法律促使人民形成某些道德共识，如禁止同性恋法）”和“财产再分配（即税收）”。自由主义者们认为，政府收税的行为违反了“我们拥有自我”这一基本原则（征税即强迫劳动，强迫劳动即奴役）。他们批判功利主义者“为了多数人的幸福而利用少数人”。而反对自由主义的人认为，富人的成功，以及财产的获得，是得益于社会搭建的自由贸易公平交易的市场的，所以他们有义务通过交税的方式来回报社会。\n\n　　再之后，约翰·洛克，这位自由主义的有力支持者，认为人生来就拥有“自然权利（生命权，财产权，自由权等）”，并认为这些权利独立于政府而存在，而且无法放弃。然而，权利无法放弃这一观点却看上去不那么合群，它似乎违背了自由主义“我绝对拥有我自己”的观点（洛克坦诚道，“最终我们还是没有拥有自己”）。最终，洛克还是认为，我们的权利是有限的。关于税收，洛克则认为应当建立在“同意”的前提之下。而经过公证的投票，剥夺他人自然权利就能变成合法的事情。\n\n　　在自由主义者和功利主义者互相争论之时，现代哲学的奠基人，伊曼努尔·康德，这位伟大的思想家提出了一个新的以其严格性而著名关于自由的概念（也可以说是自由的现代定义）：“自由，不是我们想做什么就去做什么，而是我们不想做什么就能不去做什么。换句话说，自由即我能按照我自己定的规则行事。只有这样，我们才不是欲望和冲动的奴隶，我们才是自由的。”这是人类思想的一个伟大的突破。康德反对功利主义，认为“所有人都具有尊严，都应受到尊重”，“我们自由，并非因为我们拥有自己，而是因为我们都是理性的存在，我们是独立自主的存在，能自由行动和选择”。康德赞同功利主义对于“我们都追求欢乐逃避痛苦”的观点，但否认“欢乐和痛苦主宰我们”。同时，康德对道德的价值的见解也十分深刻。“道德并非取决于行为的性质与其结果，而与行为的动机有关，与行为的意图有关”。“高尚的行为之所以高尚，因为它本身就是高尚的，即使一无所成，它也因它自身而闪耀，因为它本身就蕴含了全部价值”。康德认为行为的动机可以分为两类，出于职责和出于偏好。而唯有前者是道德的。他还提出了其他许多著名的思想见解，在此不一一赘述。\n\n　　紧接着他的现代哲学家约翰·罗尔斯则提出了“正义论”，认为人要假设去除所有背景，处于一种“面纱”背后，才能真正辨别出正义。\n\n　　而2400多年前，古希腊著名的集大成者亚里士多德认为，公正即是将物品给予那些最应得的人，因为这就是这个物品存在的目的就是为此。而从这个理论，又能举出许多看似可笑且不合理的例子……\n\n　　导师迈克尔·桑德尔带领着我们领略了各个时代的思想家们对公正、道德有着各种不同见解，共同见证了思辨性哲学的发展过程。人类花了数百年、甚至上千年的时间从“功利主义”的思想跳跃到了“古典自由主义”，再跳跃到鼓舞人心的“现代自由主义”思想，而作为活在当下的我们，去学习这些思想理论的发展过程和核心思想并不需要太多的基础和时间。然而，这显然对于我们今后的发展会起到极其重要的作用，因此我认为非常有必要普及这门课程。当然，打破自己以往一贯想当然建立的观念是困难且具有风险的，正如课程开始时导师所说的：“哲学让我们对熟悉的食物，变得陌生。它并不是提供新的信息，而只是引导者我们用新的方式看这些事物，但风险就在，一旦熟悉变得陌生，他就会永远和以前不一样了”。\n\n　　对于这门课程，我认为还有一个值得推崇的地方。导师在课程的最后，这样说道：“从一开始，我们就问为什么，为什么我们要继续进行这些争论，即使他们引发的问题最终都不太可能得到解决？理由是，我们一直都生活在这些问题的回答中。在我们的公共生活在，在我们的私人生活中，即使有时候这些问题无法回答，但我们还是无法回避哲学。开始的时候，我们谈到了康德的一个观点，即怀疑是人类理性的休憩指出。怀疑让理性能反省。但怀疑也并非是永久的安身之处，康德写道，仅仅停留在怀疑或自满，绝不足以客服理性之不安。这门课程的目的就是要唤醒你们永不停歇的理性思考，看看它将把你们带向何方。如果我们至少做到了这点，如果理性的不安继续在折磨你，现在活着将来，那我们就不是一无所获的。”说的多么鼓舞人心和引人深思！现代中国的应试教育的弊端之一，就是难以让我们自己进行理性的思考，我们没有了理性的不安感，又怎么能够自己去思考呢？我想象中的理科学习应该是这样的：老师提出一个应用问题，鼓励学生们自己组织小组在不查阅资料的情况下用现有知识建立模型，并推导出相关普适原理。试想一下，老师压迫的强制灌输和老师引导的自行探索相比，哪个会使我们得到更多的收获呢？前者我们只是“知道”了前人发现的知识，而后者，我们却能“发现”前人知道的知识。\n\n　　当然，上面的话题可能扯的比较远了。现在再回到班级里来。\n\n　　近期班里的“抄作业”现象较为严重，究其原因，数学这一科作业量的增多和思考难度的加大使一些能力不强的同学做题目要花费大量时间，完成作业十分艰难。一方面是无奈，一方面是自己想偷懒，有些同学可能就会以借鉴或询问求助等名义或方式向其他同学求取作业内容（我的做法通常是空着然后等老师讲，但事实上那些同学给数学老师留下了“我们班作业质量很好题目都不用讲”的印象，所以我这样的学生（好像只有我一个？）都是最终受害者，也造成了订正拖拉的现象。本来就不会做的题目，老师又不讲，我也基本没空找老师，再让我回家去订正，自己瞪几眼题目突然想出做法的可能实在是微乎其微……）。对于这个问题，我目前还没啥好对策。本来我们数学王老师讲课就讲的飞快（在年级进度中），讲题更是“你还没拿出参考书就已经讲完了上面所有昨天的回家作业”，而且讲课快也是为了给后面做题目留出时间……\n\n　　剩下没什么好说的了。距离期中考试还有两周，这期间要学习并复习各个学科的知识点，期中考试说实话很悬，因为急迫感来的太晚（我的急迫感在摸底考就没充分调动，后来前几天和八班一学完高二上数学内容的哥们对了一下进度才出来的……相比上个学期月考后立刻出现急迫感来比……出来的有点晚了……）。还有一点，我并没有能够强到能为了某种目的而自行调整学习状态（即放松学习状态或之类的事情）。我的状态的松懈到目前为止都是出于我本人的惰性与生物性，与自身意图无关。所以我也不会故意为了某个目的而怎么怎么样。简单的说，我做不到。\n\n　　最后祝愿同学们和自己都能在期中考试中取得佳绩。\n\n　　另：因精力有限，对文章中众多内容的出处未进行详尽考证，对此深感抱歉。还有，不建议去询问开头的内容的各个同学是谁。这是违背了我将其匿名化的目的。\n\n—— 您的学生 写于 2015.4.4 1:53\n\nUPD：我怀疑老师根本没看\n","tags":["黑历史"]},{"title":"一篇周记","url":"/a-lost-weekly/","content":"\n十二月份月考周记与一些之前就想说的话：\n\n　　十二月月考就这样以毫无悬念地挂了两科而终结。语文侥幸及格，数学挂科，英语挂科，物化发挥失常，年级排名下降约30位，达到了年级前列后半段的第75名。然而，无独有偶。八班的一个朋友的年级名次从个位掉到第20名，从本班转走的期中考年级第2名的朱弘毅这次也才第45名，而tqy更是从第8名掉到了第107名，下降了整整99名（以上信息均由其本人亲自公布）……<!--more-->\n\n　　究其原因，月考卷各个学科的难度、超前度都过大，对于通过各科平均拉分的同学来说，原本“各科分数相对平均”的优势荡然无存（按五班一位朋友的话：吃不了老本了），而对于那些单科有极大优势的同学，则是一次机遇（如果考信息科技就好了……我的优势科目是信息科技……）。举个例子，汤子文同学英语成绩85年级第一，假如她其他科目均达到年级里的平均水平，那么她的排名绝对能进年级前30。（事实上她的物理和化学似乎比较弱）。对于此次班级第一tzl，我只能说，得理化者得天下……\n\n　　以上是对此次月考的粗略分析。接下来是对于我自己的英语学习近况的分析，我将尽量做到客观合理。\n\n　　首先，小学时期我的英语是非常差的。每次默写基本全错，成了英语老师办公室的常客。到了初中，英语水平渐渐提升，在初二时达到鼎盛时期，初三时开始由盛转衰，并且现在还在稳定的逐步下降。\n\n　　究其原因，无非是我学习英语的主要途径和目的的改变。小学的时候，对英语的学习没有什么要求，分数自然也低。而在初中时，我开始接触编程，通过阅读国外论坛上的文章等，提前接触了大量初中词汇，使我初中英语的学习非常的轻松。而到了高中，这种优势变得荡然无存。我需要把更多的时间花在理解语法和语态上，同时爆炸式的词汇数量也使我无从下手。我还没能完全适应这种学习方式。这导致我的英语学习结果十分的不理想。但是我会努力改变这种现状。这一次，与往常不同，我会从这周就开始进入总复习阶段，开始全面整理语法语态句式等知识点。\n\n　　说完了英语方面的学习计划，接下来我想谈谈一些其他与我有关的事情。\n\n　　我自诩是一个喜欢把时间的利用效率提升到极致的人，对于我来说没有什么严谨的时刻表啊等等的对于我时间安排上的约束。（也就是说，对于时间的安排我常用贪心算法——即优先保证局部最优解）但这样做造成的后果也显而易见：常常会因为做某件事太入迷而耽搁了其他重要的事情。而在曾经，作业时常会沦为被耽搁的事物。（造成这样后果的另一个主要原因是我非常懒……）我已经在努力改善这种现状了。作为我的班主任，我想读到这里您应该会对我回家之后做了啥“重要”的事情以致挤掉了做作业的时间而感到好奇。而我的回答则是，发展兴趣。也许这个回答不会让您感到满意，也许甚至会让您对我产生一些偏见，但请您先暂时抛弃的以上的这些想法（如果没有那就最好），客观的听我讲述我过往的经历。\n\n　　小学毕业后，我从父亲哪儿获得了一台现在已经算得上是老古董的笔记本电脑。它是我的第一个开发平台，同时也是我对编程兴趣的发源地。经过一年的捣鼓，在我学会了重装系统并且对windows系统的构架有了一个模糊的认识后，大约在2011年底，父母购入了一台台式机。这台电脑是在父母房间里的，我只有在周末才能“合法”地使用。在这台电脑上，我理解了结构化程序设计的基本概念和面向对象的基本概念。它可以说是第一个让我的想象力得到充分发挥的平台。\n\n　　同年，我有幸得知了一款叫做Minecraft的游戏。这个游戏……简直是个奇迹。简约的令人发指，自由的让人疯狂。我初一初二甚至初三大部分的时间都是沉溺在其中的。同时这也是我编程能力真正提升的契机。由于对其的热爱，我自己上国外的论坛学习了模组与插件的编写，使我的编程水准有了质的飞越。同时，Minecraft的多人模式有个很大的特点，即大家都是毫无猜忌的互相合作。在Minecraft之中，是能非常容易的形成真正的“共产主义”的——因为实际上游戏里面的资源的获取都十分的容易。同年，我加入了一个服务器群组，与朋友们共同构筑梦想。在之后的一年里，我边学着程序开发，边学着基于Java的Minecraft的相关技术，随后成为了一个私有服务器的服主。之后我发现中国的环境不像国外，网络与硬件条件都实在是太低，无法达到要求的水准，于是放弃了开私有服务器的计划，转入了另一个服务器群组并且担任了他们的技术人员。时间一晃而过，度过了那个我因为写了程序得到了全校学生的照片然后公开而差点领到处分的初二，来到了学业相对繁忙的初三。然而在初三我也没有停止在Minecraft上的工作。初三的时候我的编程水平和现在的水平差不多，能够在见到2048这样简单的游戏后的一周内复刻出游戏的内容，并且能够实现简单的图结构和其搜索算法，对算法的效率有了初步的认识。同时，在工作时，我认识了一些国内相关技术上的先驱，在浏览他们的博客中的博文时，我惊异于他们知识面和知识深度。于是，我有了假设个人博客的愿望。随后，我成功在新浪的开发平台上建立了自己的博客。\n\n　　中考是个转折点。中考的失利曾使我灰心了一阵子。后来想想，也正是因为来到了自由时间相对较多的宜川中学，我获得了更加自由发展的机会。高一刚入学时，曾有一次要我们把各自的愿望写下来，贴在教室后黑板报上。当时我已经脱离了中考的阴影，便在上面写道：“我要开一个Minecraft班级服！”当时我是抱着自信甚至是有些自豪的心情上交我的雄心壮志的，谁知随后被告知“不能这样写”，要我改。无奈之下我只好随手写个“我希望能学好英语”草草上交。这之后竟也真的成了我的愿望之一，当然这是后话。\n\n　　说道愿望，不得不提“梦想”这个词。你的梦想是什么？我曾经试着这样问过班里的几个同学。其中，有回答想要成为教师的，作家的，摄影师的，但回答不知道的居多。看到这样的情况，我不禁想问，我们学习的源动力到底应该是什么？是为了满足父母的面子？还是为了满足自己那点微不足道的自尊？在我看来，学习的动力和目的都应该是为了能够达到自己梦想的高度。我会把我的分数与他人比较，但我从不乐于比他人的分数更高，也不悲于考的没有他人好。我知道，他的分数与我的梦想无关。分数只是我这一阶段获得的知识的检验。回到之前说的，班里有些同学并没有自己的梦想。父母给他们留下了足够的资产，他们只要高中毕业能勉强混个工作，甚至在家待着啃老，对他们来说都是不在乎的。他们顶多会感到丢脸，没面子，但绝不会为此痛心疾首。就这样的态度，如何能够去学习？\n\n　　所以我个人更倾向于把更多的时间花在发展兴趣上。对于编程，游戏，小提琴皆是如此。因为，兴趣造就梦想。\n\n　　但是我也深知成就梦想不能光靠兴趣，更多需要的是坚实的实力。所以我会不断的接触新的领域来填充我自己。我参加了校内的数学建模社团，给我的程序开发的数学基础方面打下基础；同时我也参加了校VB社（这真不是一个能够提升编程能力的地方……）和校Pascal社（第一次上课就去教了其他同学……然后第二次就和高二的坐一边了……跟着一个参加NOI的高二学长混……）（平心而论，我们年级没有编程方面有特长的人……我也顶多只能算上个半吊子……）。我的目标是在高中阶段参加各种计算机学科的竞赛，以达到增长见识、丰富自己的经验的目的。\n\n　　讲了这么多，已经快接近凌晨三点了。果然我的老毛病又犯了，一兴奋就停不下来。不过，昨天下午我特地睡了四个小时，来为今夜的周记做准备。那些本该在开学之后就说的话，我大部分都说了，如果还有其他重点等之后的周记再作补充。这次周记我用QQ发送给您的用意之一是不希望它被同学们看到（另一个原因是字太多来不及抄了……）。在结束前，我还想再提一次我的观点：有梦想就能前进！我希望，您能帮助班级里面那些没有梦想的同学，让他们找到自己的梦想。我相信，只要有了梦想，学习的热情一定能够得到提高，同时学习的成绩也能得到提高！\n\n您的学生\n\n写于2014年12月22日上午3:02分\n\nUPD：我怀疑老师根本没看\n","tags":["黑历史"]},{"title":"一个没有结局的故事","url":"/a-barren-story/","content":"\n<center> <font size=\"64\">尘埃之战</font></center>\n\n（注：本文为EVE（星战前夜）原创同人小说，因大纲遗失而弃坑。）\n\n## 引子\n\n_ _ _\n\n　　[YC114年-6月-22日 艾玛III(艾玛首星)]\n\n　　春日的暖风柔和地吹着。今天本该是个好天气，可弗兰德觉得一切都被搞砸了。\n\n　　他将三天前他所带领的科考队在某个死亡空间复合体的发现告诉女皇后，女皇就让他跟着她单独来到了皇家花园的天台上。<!--more-->\n\n　　按常理来说，能被女皇单独接见应该是无上的荣耀。可弗兰德心中可不这么想。\n\n　　他知道，关键的时刻就要到了。要是走错一步，他这一辈子就完了。\n\n　　贾米尔女皇缓步走向边上的花坛，弗兰德赶紧跟了上去。\n\n　　“爵士，你我都知道这项技术的重要性。”\n\n　　弗兰德没有立刻回答，而是细细品味每个字的含义。\n\n　　短暂的沉默过后，他答道：\n\n　　“如果把它用于军事领域……天哪，我简直无法想象……”\n\n　　“爵士，也许你是对的。”年轻的艾玛女皇停下了脚步，转过头来，\n\n　　“但现在，是战争年代。”她转过身，正视着弗兰德的双眼。\n\n　　弗兰德避开了她的视线。\n\n　　“你不会泄露关于这项技术给任何人，对吗？”年轻的女皇看着弗兰德，嘴角微微上扬。\n\n　　弗兰德立刻单膝跪下，说：“陛下，我对您绝对忠诚。”\n\n　　“那好，爵士，马上会有200E的研究资金打到你的账户上。我需要你立即开发这项技术，并将它用于军事用途。越快越好。毕竟，我们都想早点结束战争。”\n\n　　“是，我的陛下。”\n\n　　弗兰德低下头回答道。\n\n　　女皇微笑着转身，缓步离开了天台。\n\n　　[YC114年-11月-29日 艾玛III(艾玛首星) 同步轨道]\n\n　　在全宇宙的注视中，艾玛女皇贾米尔·萨拉姆缓步走上演讲台，在她的生日庆典上发表演讲。\n\n　　“我们，已为信仰付出太多牺牲，也为神灵献出无数生命……”女皇扫视着面前由各种战列舰，无畏舰、航空母舰以及数艘泰坦组成的整齐的方阵。这里聚集着艾玛80%的舰队。为了这次庆典，数十个星系的防备力量被抽空。不过没有任何人会在意。\n\n　　“……但我们的帝国，历来为上苍所保佑……”本来一艘神使级泰坦停泊在行星的同步轨道上就会引发起灾难性的悲剧，可是皇家科学院哪些疯子为了能取悦女皇，竟然不顾可能会损坏泰坦的跳跃引擎的风险，在周围使用引力场稳定装置，使得几艘泰坦能同时处在艾玛首星的同步轨道上。\n\n　　“……我将释放这全新的力量，并立刻结束战争！”女皇慷慨激昂的演讲结束后，数万搜战列舰一齐向太空的深处射出七彩色的激光。原版该用来击穿敌军装甲的超光速粒子炮却被用作了装饰品。\n\n　　何其可笑。女皇这样想着，离开了演讲台。\n\n## 一、悲剧的开端\n\n_ _ _\n\n　　[虫洞 未知死亡空间复合体(诅咒之地)]\n\n　　沉寂的太空中，原本只有一堆堆金属残片和嘈杂的电磁波。\n\n　　可是，像要破坏这违和的寂静似的，在这片残片的边缘，一艘统合部改造过的梯队级，跃迁到了这个被诅咒的地方。\n\n　　梯队级关闭跃迁引擎后，打开了它船头的两盏巨型探照灯，在附近的残骸中无序地逛着，似乎在搜寻什么。\n\n　　“找到了！”\n\n　　舰桥的操作台前，一名操作着舰载摄像头的技术员大叫到。\n\n　　他面前的屏幕上，是一个被几块金属残骸包围的完好的建筑物。\n\n　　“我们进去看看。”\n\n　　靠在舰长座上的罗克德·斯拉夫边说着边啜饮着他左手拿着的杯子中发出阵阵浓香的咖啡。\n\n　　两盏巨型探照灯一齐照射到了建筑物的入口处。\n\n　　“稍等……我试试解开入口处的密码……嗯……好了！”\n\n　　技术员操纵着飞船，飞船缓缓驶入建筑物。\n\n　　罗克德·斯拉夫望着舰长台屏幕上的梯队级外部的景象，露出了一丝不易察觉的微笑。\n\n　　[虫洞 未知死亡空间复合体(诅咒之地)-内部]\n\n　　艾玛皇家科学院首席顾问阿尔道·弗兰德，这位年过四十头发全无的爵士，带领着几位其他科学家一同从梯队级上下来，分析这个建筑物。\n\n　　“气压维持装置——正常，氧气提供装置——正常，磁力靴——正常，便携式分析仪——正常”\n\n　　检查完身上所有的设备后，弗兰德爵士从停泊在平台上的梯队级上下来，几个科学家紧跟其后。\n\n　　展现在他们的眼前，是一坨杂乱的金属管道，直径从弗兰德爵士的手指到梯队级的副推进器，各种大小的无所不有。在那堆管道的中央，有一个类似于维生设施的设备。\n\n　　弗兰德爵士跨过几个难缠的管道，来到了设备前。他把探照灯打过了眼前的黑色的晶体后，被震惊了。\n\n　　“所有人，来看看这儿！”\n\n　　后方收集管道样本数据的科学家们停下了手中的工作，纷纷走来。\n\n　　透过那个黑色的晶体，在设备里面的，是一个人。或者说是类似的生物。\n\n　　就当前来看，他还没有恢复意识。\n\n　　几个科学家们拿着分析机和扫描机对设备的结构进行了彻底的调查，结果使他们难以置信。\n\n　　这是一个克隆设施，科技应该比现世先进两到三千年。\n\n　　而且，对在设备内的生物进行了扫描后，获得了意外的收获。\n\n　　弗兰德爵士打开了和斯拉夫舰长的通讯频道，把扫描到的数据上传后，指着数据的一部分对他说：“看这儿，这个东西看上去是完好无损的。”\n\n　　弗兰德爵士指的地方是一个脑部植入体，不同于寻常的植入体，这个植入体似乎不能帮助使用者提升什么能力。\n\n　　“先把它带回来分析一下。”斯拉夫舰长点燃了一根雪茄，对着画面另一侧的弗兰德爵士说道。\n\n　　比预计的更加简单，他想。\n\n## 二、苏醒的再生者\n\n_ _ _\n\n　　在检测到附近出现了未知的信号后，传感器瞬间便将信息通过量子通信管道传送出去。\n\n　　\\>>>警告，在再生者1032108210392号的执勤区域内侦测到不可识别的电子信号，立即激活再生者1032108210392号前往调查。\n\n　　空白，虚无。这个世界全部都是白色为背景的空间，在这个世界里面除了空间没有任何东西。\n\n　　突然，他感觉画面颤抖地扭曲了一下，然后又回到了初始。\n\n　　他疑惑，但不知道发生了什么。来自不同方向的白色光线是他无法思考。\n\n　　画面又发生了一次颤抖地扭曲，随后他的基本意识开始渐渐地组合。\n\n　　“我，是谁？”\n\n　　“我，在哪？”\n\n　　“为什么是我？”\n\n　　“为什么在这儿？”\n\n　　……\n\n　　在想出这些问题后，他感觉头脑就像要爆炸了一样。他想捂住头脑，但惊奇地发现他无法驱动他的四肢。他甚至看不到它们。\n\n　　画面再一次颤抖地扭曲着，持续了一会儿后，背景不再是白色，而变成了彻底的黑暗。\n\n　　\\>>>再生者1032108210392号，是否收到信息？\n\n　　他的脑中闪过一串数据流，但被他的大脑转换成了声音信息。“再生者……1032108210392号吗？是……是我？”他心想。此刻他心中有许多疑问，他想立刻摆脱这片黑暗，然后对着这声音大吼，得到所有想要的答案。\n\n　　\\>>>再生者1032108210392号激活成功。再生者1032108210392号，我将立即恢复你的感知系统。\n\n　　“什么？感知……系统？”正当他想着的时候，他的大脑皮层突然接收到强烈地刺激。他立马打了个哆嗦，如果此刻他的身体和大脑还连在一起的话。随后，他感觉到了一股暖流，徜徉在自己的四周。渐渐地，他的四肢的感触也开始变得明了。\n\n　　\\>>>感知系统上线成功，即将注入高阶意识。\n\n　　“我是……谁？”他正想着，忽然一切都变得清晰起来，往日的记忆也不断地从他脑中涌现。“我是再生者1032108210392号，戴昂斯·纳德。”想起这些后，他缓缓睁开了眼睛。戴昂斯发现自己全身被浸泡在生理液体之中，在一个冷冻仓内。周围环境的颜色太暗，他无法看到更多。“我已经沉睡了多久呢？几百年？亦或是几千年？”，正当他想着的时候，冷冻仓的舱门开启了，生理液体从中流出，而他也赤身裸体地向前扑倒，趴在了冷冻仓前。“唔……好痛……”他想，“一定要先找件内裤再说其他的事！”正当他这样想着的时候，脑海中传来一阵不可抗拒的声音。\n\n　　\\>>>再生者1032108210392号，在属于你的巡逻区域UKE-5I甲板上侦测到不可识别的电子信号，请装备完毕后立即前往。\n\n　　一个柜子从戴昂斯面前的甲板上升起，里面存放了一套太空用战斗服，一把不稳定等离子束发射器和一些等离子能量单元。戴昂斯站了起来，想伸手去拿，可是柜子边的机械手臂已经将太空服拿起来了。“可惜，没有内裤。”戴昂斯无奈得摇摇头后，张开了双臂，两支机械手臂按照设定好的程序将太空服装配到了戴昂斯身上。他熟练地拿起不稳定等离子束发射器，装入了一个等离子能量单元，随后用手熟练地摆弄了一下他的新武器。“好戏就要上演了。”他心想。\n","tags":["黑历史"]}]